%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Cardboard boxes set.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Виталий Викторович
%%CreationDate: 5/2/2019
%%BoundingBox: 0 0 1270 900
%%HiResBoundingBox: 0 0 1270 900
%%CropBox: 0 0 1270 900
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Cardboard boxes set</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Cardboard boxes set. Collection for food delivery and furniture packaging. Can be used for topics like moving, delivery, distribution storage</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>card</rdf:li>
               <rdf:li>poster</rdf:li>
               <rdf:li>leaflet</rdf:li>
               <rdf:li>brochure</rdf:li>
               <rdf:li>sign</rdf:li>
               <rdf:li>vector</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>creative</rdf:li>
               <rdf:li>layout</rdf:li>
               <rdf:li>design</rdf:li>
               <rdf:li>isolated</rdf:li>
               <rdf:li>realistic</rdf:li>
               <rdf:li>style</rdf:li>
               <rdf:li>decorative</rdf:li>
               <rdf:li>label</rdf:li>
               <rdf:li>banner</rdf:li>
               <rdf:li>element</rdf:li>
               <rdf:li>set</rdf:li>
               <rdf:li>collection</rdf:li>
               <rdf:li>box</rdf:li>
               <rdf:li>cardboard</rdf:li>
               <rdf:li>object</rdf:li>
               <rdf:li>business</rdf:li>
               <rdf:li>carton</rdf:li>
               <rdf:li>transportation</rdf:li>
               <rdf:li>package</rdf:li>
               <rdf:li>delivery</rdf:li>
               <rdf:li>store</rdf:li>
               <rdf:li>service</rdf:li>
               <rdf:li>packing</rdf:li>
               <rdf:li>distribution</rdf:li>
               <rdf:li>relocation</rdf:li>
               <rdf:li>retail</rdf:li>
               <rdf:li>merchandise</rdf:li>
               <rdf:li>warehouse</rdf:li>
               <rdf:li>food</rdf:li>
               <rdf:li>unpacking</rdf:li>
               <rdf:li>industrial</rdf:li>
               <rdf:li>logistic</rdf:li>
               <rdf:li>environment</rdf:li>
               <rdf:li>recycled</rdf:li>
               <rdf:li>pizza</rdf:li>
               <rdf:li>furniture</rdf:li>
               <rdf:li>store</rdf:li>
            </rdf:Bag>
         </dc:subject>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2019-05-02T14:00:40+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2019-05-02T14:00:40+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2019-05-02T14:00:40+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>184</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAuAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVskkcaF5GC&#xA;Iu7MxAA+ZOAkDmkAnklP+MPLBujarqMLzKCWCEsoA2NXUFR9+Y51mIGuIOSNFlIvhKaQXFvOnOCV&#xA;JU/mRgw+8ZfGYkLBtx5QlE0RSpkmLsVdiq2WaKGMyTOsca0q7kKBU0G598EpACymMSTQ3KAl8xaJ&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:3A49A079C96CE91183158642932CA4DA</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:3A49A079C96CE91183158642932CA4DA</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:70fe3c30-35c2-1441-b7e4-e21aad23a57f</stRef:instanceID>
            <stRef:documentID>xmp.did:66cb50b9-5a8b-8049-95d8-bca67c8117a2</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:6be28f45-7852-cf48-a62a-a33f42ab6627</stEvt:instanceID>
                  <stEvt:when>2019-03-13T11:22:22+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0e1b5607-992e-e340-a746-a135d91abd1b</stEvt:instanceID>
                  <stEvt:when>2019-03-18T18:03:52+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:66cb50b9-5a8b-8049-95d8-bca67c8117a2</stEvt:instanceID>
                  <stEvt:when>2019-03-18T22:41:43+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:70fe3c30-35c2-1441-b7e4-e21aad23a57f</stEvt:instanceID>
                  <stEvt:when>2019-04-09T19:02:03+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CC 2018 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3A49A079C96CE91183158642932CA4DA</stEvt:instanceID>
                  <stEvt:when>2019-05-02T14:00:40+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1270.000000</stDim:w>
            <stDim:h>900.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -900 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 900 li
1270 900 li
1270 0 li
cp
clp
1270 900 mo
0 900 li
0 0 li
1270 0 li
1270 900 li
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
143.211 70.1967 mo
143.211 290.066 li
97.1127 285.506 li
97.1127 82.6548 li
143.211 70.1967 li
.827451 .509804 .25098 rgb
f
154.918 288.426 mo
266.87 272.738 li
154.918 288.426 li
cp
.968627 .643137 .4 rgb
f
266.87 103.056 mo
186.383 81.6685 li
266.87 103.056 li
cp
f
186.383 81.6685 mo
154.918 73.3076 li
154.918 288.426 li
266.87 272.738 li
266.87 103.056 li
186.383 81.6685 li
cp
f
152.223 288.804 mo
143.211 290.066 li
152.223 288.804 li
f
152.223 74.1665 mo
152.223 288.125 li
154.918 288.426 li
154.918 73.3076 li
152.223 74.1665 li
cp
.737255 .439216 .192157 rgb
f
143.211 70.1967 mo
143.211 290.066 li
152.223 288.804 li
152.223 72.5913 li
143.211 70.1967 li
.968627 .643137 .4 rgb
f
268.083 103.378 mo
268.083 103.378 li
272.016 104.423 li
268.083 103.378 li
cp
f
266.87 103.75 mo
266.87 272.404 li
268.083 272.568 li
268.083 103.378 li
266.87 103.75 li
cp
.737255 .439216 .192157 rgb
f
268.083 103.378 mo
268.083 272.568 li
272.016 272.017 li
272.016 104.423 li
268.083 103.378 li
cp
.968627 .643137 .4 rgb
f
268.083 272.568 mo
272.016 272.017 li
268.083 272.568 li
cp
f
98.3587 285.766 mo
97.5653 285.766 97.1127 285.506 97.1127 285.506 cv
99.0693 285.699 li
98.8092 285.747 98.5717 285.766 98.3587 285.766 cv
.94902 .894118 .847059 rgb
f
143.211 290.066 mo
99.0693 285.699 li
99.0693 285.699 li
143.211 290.066 li
143.211 70.1967 li
143.211 290.066 li
127.22 74.518 mo
127.22 74.518 li
143.211 70.1967 li
127.22 74.5183 li
f
143.211 290.066 mo
99.0695 285.699 li
105.525 284.518 125.82 265.554 127.22 74.518 cv
143.211 70.1967 li
143.211 290.066 li
.788235 .454902 .211765 rgb
f
143.211 290.066 mo
143.211 290.066 li
.921569 .576471 .341176 rgb
f
191.196 256.722 mo
188.834 256.103 188.753 256.927 188.754 255.967 cv
188.755 255.824 188.708 255.783 188.6 255.798 cv
187.688 255.942 188.811 255.773 187.734 255.927 cv
187.365 255.979 187.374 256.025 187.353 256.424 cv
187.319 256.956 186.535 256.556 184.378 257.914 cv
182.198 259.283 180.56 261.493 179.803 263.743 cv
179.592 264.356 179.199 265.864 179.196 267.104 cv
179.659 266.18 180.27 265.733 180.867 265.649 cv
181.597 265.546 182.306 265.987 182.696 266.759 cv
183.081 266.188 183.519 265.286 184.434 265.158 cv
185.657 264.988 186.049 266.012 186.237 266.235 cv
186.446 265.919 186.683 265.267 187.28 264.965 cv
187.384 265.383 187.338 264.119 187.329 273.42 cv
187.331 274.759 186.695 275.452 186.081 275.538 cv
185.636 275.601 185.202 275.346 185.028 274.79 cv
184.884 274.352 184.901 273.892 184.693 273.92 cv
184.46 273.942 184.231 273.967 184 274 cv
183.858 274.02 183.715 274.043 183.572 274.07 cv
183.427 274.237 li
183.41 274.732 183.498 275.195 183.673 275.62 cv
184.134 276.711 185.1 277.155 186.063 277.02 cv
187.167 276.865 188.268 275.948 188.6 274.374 cv
188.697 273.894 188.706 273.391 188.715 272.906 cv
188.741 267.396 188.713 265.481 188.754 264.75 cv
189.274 264.918 189.546 265.313 189.793 265.779 cv
189.96 265.472 190.461 264.289 191.578 264.132 cv
192.656 263.978 193.146 264.919 193.366 265.251 cv
193.72 264.406 194.266 263.836 195.035 263.651 cv
195.864 263.456 196.456 263.877 196.883 264.618 cv
196.813 263.824 196.774 263.043 196.328 261.619 cv
195.651 259.484 193.757 257.391 191.196 256.722 cv
cp
.188235 .188235 .188235 rgb
f
189.044 255.109 mo
189.197 255.076 li
189.389 255.022 189.622 254.765 189.654 254.57 cv
189.751 254.003 189.752 253.571 189.777 252.911 cv
189.433 253.201 189.056 253.514 188.679 253.843 cv
188.342 254.133 188.261 254.55 188.484 254.882 cv
188.622 255.082 188.819 255.141 189.044 255.109 cv
cp
f
191.061 255.885 mo
191.084 256.185 191.252 256.342 191.484 256.439 cv
191.691 256.457 li
191.965 256.418 192.292 256.181 192.342 255.93 cv
192.432 255.434 192.449 254.713 192.474 254.243 cv
192.153 254.513 191.792 254.823 191.423 255.117 cv
191.182 255.324 191.03 255.562 191.061 255.885 cv
cp
f
195.431 255.926 mo
195.761 255.88 196.096 255.581 196.116 254.941 cv
196.133 254.524 196.142 254.108 196.159 253.682 cv
196.054 253.792 195.934 253.938 195.797 254.053 cv
195.541 254.279 195.276 254.472 195.02 254.698 cv
194.723 254.964 194.658 255.415 194.874 255.704 cv
194.992 255.875 195.21 255.958 195.431 255.926 cv
cp
f
191.048 251.587 mo
191.366 251.542 191.67 251.251 191.695 250.74 cv
191.712 250.271 191.753 249.807 191.786 249.335 cv
191.69 249.427 191.585 249.545 191.473 249.647 cv
190.984 250.114 190.759 250.231 190.542 250.47 cv
190.31 250.718 190.293 251.127 190.493 251.367 cv
190.639 251.544 190.846 251.615 191.048 251.587 cv
cp
f
185.261 256.493 mo
185.567 256.45 185.862 256.193 185.888 255.739 cv
185.921 255.242 185.954 254.745 185.987 254.256 cv
185.995 254.255 185.369 254.775 184.864 255.235 cv
184.591 255.481 184.502 255.813 184.598 256.093 cv
184.71 256.402 184.99 256.531 185.261 256.493 cv
cp
f
193.638 253.172 mo
193.797 253.124 li
193.998 253.035 194.246 252.827 194.263 252.497 cv
194.288 251.992 194.329 251.484 194.362 250.987 cv
193.993 251.29 193.632 251.583 193.279 251.883 cv
192.926 252.183 192.853 252.608 193.077 252.957 cv
193.185 253.113 193.424 253.202 193.638 253.172 cv
cp
f
163.555 280.418 mo
177.389 278.474 li
177.392 277.211 li
163.558 279.156 li
163.555 280.418 li
cp
f
173.275 277.125 mo
174.605 276.938 li
174.632 262.3 li
177.083 261.956 li
173.978 256.558 li
170.843 262.833 li
173.302 262.487 li
173.275 277.125 li
cp
f
165.786 278.177 mo
167.123 277.989 li
167.15 263.352 li
169.602 263.007 li
166.488 257.61 li
163.361 263.884 li
165.813 263.54 li
165.786 278.177 li
cp
f
208.056 259.556 mo
208.067 253.461 li
199.552 254.657 li
199.541 260.753 li
199.537 263.113 201.183 264.827 203.305 264.788 cv
203.29 273.019 li
199.661 273.987 li
199.658 275.102 li
207.877 273.947 li
207.879 272.832 li
204.259 272.882 li
204.099 272.905 li
204.114 264.691 li
206.31 264.201 208.051 261.977 208.056 259.556 cv
cp
f
220.859 103.378 mo
220.98 127.624 li
262.541 131.561 li
262.625 111 li
220.859 103.378 li
cp
1 .917647 .662745 rgb
f
258.75 113.333 mo
226.25 108.029 li
226.25 109.042 li
258.75 114.346 li
258.75 113.333 li
cp
.776471 .537255 .376471 rgb
f
247.979 116.226 mo
226.25 113.345 li
226.25 114.354 li
247.979 117.235 li
247.979 116.226 li
cp
f
258.75 122.915 mo
226.25 118.686 li
226.25 119.694 li
258.75 123.923 li
258.75 122.915 li
cp
f
243.915 449.031 mo
243.915 449.031 244.386 449.529 244.386 449.845 cv
244.386 450.161 243.625 450.125 243.625 450.125 cv
243.915 449.031 li
cp
.447059 .243137 .0784314 rgb
f
82.7197 357.46 mo
121.641 350.974 li
121.641 577.389 li
82.7197 557.371 li
82.7197 357.46 li
cp
.717647 .415686 .0862745 rgb
f
121.641 350.974 mo
121.641 577.389 li
82.7197 557.371 li
82.7197 557.371 109.621 423.39 112.31 352.528 cv
121.641 350.974 li
cp
.666667 .372549 .0745098 rgb
f
239.513 371.109 mo
239.513 516.111 li
240.63 516.19 li
240.63 370.805 li
239.513 371.109 li
cp
.717647 .415686 .0862745 rgb
f
126.808 574.731 mo
126.808 574.731 li
121.641 577.389 li
126.808 574.731 li
cp
f
129.616 352.303 mo
126.808 353 li
126.808 572.75 li
129.616 573.287 li
129.616 352.303 li
cp
f
126.808 351.834 mo
121.641 350.974 li
126.808 351.834 li
cp
.94902 .619608 .298039 rgb
f
126.808 351.834 mo
121.641 350.974 li
121.641 577.389 li
126.808 574.731 li
126.808 351.834 li
cp
f
240.63 516.19 mo
243.915 514.5 li
243.915 371.353 li
240.63 370.805 li
240.63 516.19 li
cp
f
129.616 352.303 mo
129.616 352.303 li
129.621 352.304 li
129.616 352.303 li
cp
f
239.513 370.688 mo
129.621 352.304 li
129.616 352.303 li
129.616 573.287 li
239.482 516.78 li
239.513 516.765 li
239.513 370.688 li
cp
f
203.8 535.13 mo
190.62 541.91 li
190.68 541.19 190.8 540.46 191.01 539.72 cv
192.38 534.79 196.61 531.66 200.47 532.73 cv
201.84 533.11 202.97 533.96 203.8 535.13 cv
cp
.717647 .415686 .0862745 rgb
f
203.8 535.13 mo
190.62 541.91 li
190.68 541.19 190.8 540.46 191.01 539.72 cv
192.38 534.79 196.61 531.66 200.47 532.73 cv
201.84 533.11 202.97 533.96 203.8 535.13 cv
cp
f
190.62 541.91 mo
191.01 533.473 200.032 529.356 203.8 535.13 cv
199.77 529.72 191.503 533.619 190.62 541.91 cv
cp
.976471 .694118 .411765 rgb
f
121.647 464.685 mo
121.597 464.68 li
82.6758 461.248 li
82.4009 461.224 82.1973 460.981 82.2217 460.706 cv
82.2461 460.432 82.4844 460.234 82.7637 460.252 cv
121.634 463.679 li
243.857 449.503 li
244.386 449.394 244.38 449.668 244.412 449.942 cv
244.443 450.217 244.247 450.465 243.973 450.497 cv
121.647 464.685 li
cp
.6 .356863 .133333 rgb
f
121.644 464.438 mo
117.659 464.112 136.077 465.62 82.6758 461.248 cv
86.6582 461.624 68.249 459.885 121.624 464.929 cv
121.65 464.931 li
152.904 461.404 183.738 457.981 243.973 450.497 cv
233.769 451.596 144.623 461.729 121.644 464.438 cv
cp
.419608 .227451 .0666667 rgb
f
196.36 538.96 mo
196.36 539.21 li
196.36 539.48 196.186 539.588 195.86 539.71 cv
195.682 539.776 194.393 540.17 194.313 540.01 cv
195.435 539.435 li
193.55 363.76 li
193.55 363.41 193.47 363.15 193.33 362.96 cv
193.08 362.64 192.64 362.52 192.05 362.52 cv
190.33 362.46 li
185.84 361.71 li
186.46 361.51 188.07 361.36 188.27 361.38 cv
192.95 361.23 li
194.17 361.23 194.69 362.07 194.83 363.21 cv
194.87 363.44 194.88 363.68 194.88 363.93 cv
196.36 538.96 li
cp
.6 .356863 .133333 rgb
f
202.57 485.922 mo
201.147 483.521 200.066 478.298 198.837 467.892 cv
197.661 457.936 195.224 456.546 195.2 456.533 cv
195.617 455.625 li
195.917 455.756 198.583 457.212 199.83 467.774 cv
201.025 477.896 202.102 483.172 203.43 485.412 cv
202.57 485.922 li
cp
f
191.838 480.585 mo
190.944 480.137 li
192.346 477.333 190.402 468.67 192.09 462.069 cv
193.028 458.401 194.016 456.311 195.025 455.855 cv
195.425 455.676 195.708 455.793 195.786 455.831 cv
195.33 456.723 li
195.463 456.757 li
195.453 456.76 194.417 457.006 193.059 462.318 cv
192.199 465.68 192.32 469.585 192.427 473.028 cv
192.527 476.252 192.613 479.035 191.838 480.585 cv
cp
.447059 .247059 .0862745 rgb
f
196.478 456.298 mo
197.477 454.73 195.242 452.999 193.919 454.306 cv
193.432 454.787 193.169 455.45 193.54 456.346 cv
194.158 457.837 195.728 457.475 196.478 456.298 cv
cp
.6 .356863 .133333 rgb
f
196.478 456.298 mo
197.477 454.73 195.242 452.999 193.919 454.306 cv
193.432 454.787 193.169 455.45 193.54 456.346 cv
194.158 457.837 195.728 457.475 196.478 456.298 cv
cp
f
196.026 454.195 mo
196.369 454.666 196.47 455.296 196.083 455.903 cv
195.522 456.783 194.505 457.206 193.768 456.742 cv
194.482 457.741 195.806 457.352 196.478 456.298 cv
196.988 455.496 196.652 454.654 196.026 454.195 cv
cp
.447059 .247059 .0862745 rgb
f
480.472 60.6519 mo
488 75.313 li
489.799 78.8179 491.048 82.5986 491.486 86.5137 cv
492.377 94.4819 489.634 99.2427 480.569 104.179 cv
462.73 79.21 li
480.472 60.6519 li
cp
.886275 .545098 .313726 rgb
f
480.472 60.6519 mo
482.018 63.4106 488.122 74.5757 489.391 77.4731 cv
490.241 79.4292 490.921 81.4644 491.381 83.5537 cv
493.452 93.6021 490.486 99.2261 480.569 104.179 cv
486.379 100.668 491.224 96.8091 491.278 89.9121 cv
491.546 81.0396 487.832 76.377 480.472 60.6519 cv
cp
1 .713726 .521569 rgb
f
351.811 259.152 mo
475.549 308.132 li
609.133 255.255 li
486.337 236.581 li
351.811 259.152 li
cp
.94902 .619608 .298039 rgb
f
486.337 236.581 mo
486.337 204.103 li
351.811 226.449 li
351.811 259.152 li
486.337 236.581 li
cp
.917647 .568627 .329412 rgb
f
609.133 223.882 mo
486.337 204.103 li
486.337 236.581 li
609.133 255.255 li
609.133 223.882 li
cp
.686275 .396078 .180392 rgb
f
485.945 202.01 mo
464.21 87.0498 li
462.73 79.21 li
324.83 101.24 li
351.81 226.45 li
418.41 215.39 li
486.34 204.1 li
485.945 202.01 li
cp
.709804 .4 .172549 rgb
f
413.68 196 mo
415.43 203.19 417 209.63 418.41 215.39 cv
351.81 226.45 li
324.83 101.24 li
462.73 79.21 li
464.21 87.0498 li
447.27 99.1899 399.79 139.01 413.68 196 cv
cp
.658824 .352941 .14902 rgb
f
462.73 79.21 mo
480.472 60.6519 li
351.811 76.0615 li
324.827 101.241 li
462.73 79.21 li
cp
.968627 .643137 .4 rgb
f
480.472 60.6519 mo
438.934 66.4331 396.688 71.0859 367.922 74.3784 cv
351.811 76.0615 li
367.864 73.8916 li
392.349 70.8291 425.37 66.603 448.261 64.124 cv
458.992 62.9194 469.725 61.731 480.472 60.6519 cv
cp
1 .792157 .65098 rgb
f
462.73 79.21 mo
462.73 79.21 li
485.486 199.6 li
493.562 194.792 497.745 185.429 495.939 176.206 cv
477.81 83.6245 li
476.431 76.584 467.688 74.0244 462.73 79.21 cv
cp
.807843 .482353 .211765 rgb
f
485.486 199.6 mo
491.928 195.568 496.029 188.493 496.024 180.669 cv
496.074 176.86 496.431 182.471 480.491 98.5928 cv
477.81 83.6245 li
480.972 98.4985 li
484.031 113.393 li
489.988 143.214 li
496.818 178.532 496.737 177.943 496.653 180.674 cv
496.606 183.241 496.14 185.804 495.228 188.199 cv
493.388 192.98 489.907 197.1 485.486 199.6 cv
cp
1 .756863 .592157 rgb
f
351.811 259.152 mo
351.811 226.449 li
475.549 262.383 li
475.549 308.132 li
351.811 259.152 li
cp
.658824 .352941 .14902 rgb
f
475.549 262.383 mo
475.549 308.132 li
609.133 255.255 li
609.133 223.882 li
475.549 262.383 li
cp
.968627 .643137 .4 rgb
f
324.827 101.241 mo
344.192 83.1704 li
367.376 185.331 li
370.744 200.17 364.19 215.492 351.133 223.307 cv
324.827 101.241 li
cp
.807843 .482353 .211765 rgb
f
344.192 83.1704 mo
353.14 119.769 361.028 155.487 368.201 187.484 cv
368.368 188.252 368.377 189.042 368.473 189.82 cv
369.597 202.943 363.458 216.059 351.133 223.307 cv
356.353 219.974 360.821 215.415 363.668 209.931 cv
368.649 200.646 368.622 191.975 366.424 183.09 cv
358.135 146.965 360.687 158.087 360.181 155.88 cv
356.488 139.247 349.929 110.548 344.192 83.1704 cv
cp
1 .74902 .580392 rgb
f
351.811 76.0615 mo
356.531 93.6611 li
359.935 106.349 354.204 119.717 342.667 126 cv
324.827 101.241 li
351.811 76.0615 li
cp
.886275 .545098 .313726 rgb
f
351.811 76.0615 mo
352.959 79.6982 356.865 92.6001 357.564 96.3599 cv
359.607 107.844 354.161 120.149 342.667 126 cv
344.642 124.74 346.533 123.37 348.188 121.735 cv
353.795 116.155 356.404 109.617 356.897 103.386 cv
357.458 95.7773 355.931 94.6606 351.811 76.0615 cv
cp
1 .713726 .521569 rgb
f
351.811 259.152 mo
475.549 308.132 li
475.549 262.383 li
474.403 282.746 453.946 296.24 434.777 289.279 cv
351.811 259.152 li
cp
.486275 .262745 .109804 rgb
f
356.312 226.715 mo
486.342 205.113 li
604.562 224.159 li
475.55 261.342 li
356.312 226.715 li
cp
486.34 204.1 mo
351.811 226.449 li
475.549 262.383 li
609.133 223.882 li
486.34 204.1 li
cp
1 .756863 .592157 rgb
f
654.373 280.62 mo
654.373 308.471 li
795.718 381.083 li
795.718 343.315 li
654.373 280.62 li
.898039 .564706 .333333 rgb
f
938.646 278.888 mo
795.718 343.315 li
795.718 381.083 li
797.254 380.312 li
797.252 379.724 li
797.857 380.009 li
938.646 309.319 li
938.646 278.888 li
.956863 .666667 .317647 rgb
f
795.721 343.313 mo
795.721 343.311 li
908.711 292.382 li
908.711 292.381 908.711 292.382 908.711 292.382 cv
795.718 343.315 li
.988235 .85098 .72549 rgb
f
795.721 377.941 mo
795.721 343.313 li
908.711 292.382 li
905.89 299.272 900.07 309.552 888.101 321.521 cv
871.351 338.271 819.631 365.701 795.721 377.941 cv
.968627 .686274 .384314 rgb
f
715.23 303.187 mo
715.23 309.026 li
715.23 313.983 718.118 318.486 722.624 320.554 cv
722.872 320.667 li
728.978 323.469 735.934 319.008 735.934 312.289 cv
715.23 303.187 li
.576471 .396078 .231373 rgb
f
795.721 338.571 mo
795.721 343.311 li
734.991 316.371 li
715.23 307.611 li
657.491 282.001 li
657.491 278.571 li
715.23 303.631 li
735.921 312.611 li
795.721 338.571 li
.866667 .533333 .305882 rgb
f
798.35 235.18 mo
936.013 278.571 li
795.721 342.077 li
657.491 280.576 li
657.491 279.786 li
654.373 280.619 li
795.721 343.311 li
938.646 278.888 li
798.35 235.18 li
1 .827451 .713726 rgb
f
735.451 315.262 mo
734.176 314.695 li
734.702 314.51 735.231 314.303 735.763 314.073 cv
735.685 314.481 735.581 314.878 735.451 315.262 cv
.772549 .45098 .247059 rgb
f
734.991 316.371 mo
732.43 315.236 li
733.007 315.081 733.59 314.901 734.176 314.695 cv
735.451 315.262 li
735.322 315.644 735.168 316.014 734.991 316.371 cv
.894118 .701961 .576471 rgb
f
735.847 314.036 mo
735.934 312.619 li
711.55 308.038 li
711.55 308.038 711.976 311.703 713.553 312.616 cv
716.812 314.504 725.808 318.421 735.847 314.036 cv
1 .788235 .6 rgb
f
798.356 235.185 mo
657.491 278.571 li
714.589 303.356 li
710.464 304.08 710.424 309.548 714.254 311.24 cv
724.803 315.9 733.463 312.833 735.94 312.624 cv
795.723 338.575 li
936.018 275.903 li
798.356 235.185 li
.964706 .741176 .501961 rgb
f
711.576 305.993 mo
711.575 305.992 li
711.575 305.991 711.575 305.991 711.575 305.99 cv
711.576 305.991 li
711.576 305.991 711.576 305.992 711.576 305.993 cv
.996078 .917647 .85098 rgb
f
711.553 308.062 mo
711.388 307.367 711.395 306.651 711.575 305.992 cv
711.576 305.993 li
711.399 306.644 711.391 307.351 711.55 308.038 cv
711.55 308.038 li
711.55 308.038 711.551 308.046 711.553 308.062 cv
.929412 .639216 .423529 rgb
f
711.576 305.991 mo
711.575 305.99 li
711.642 305.745 711.733 305.509 711.848 305.284 cv
711.734 305.509 711.643 305.746 711.576 305.991 cv
.996078 .807843 .666667 rgb
f
725.452 313.793 mo
722.173 313.697 718.355 313.054 714.251 311.241 cv
712.764 310.585 711.86 309.359 711.553 308.062 cv
711.551 308.046 711.55 308.038 711.55 308.038 cv
711.55 308.038 li
711.853 309.343 712.758 310.579 714.254 311.24 cv
718.356 313.052 722.174 313.696 725.452 313.793 cv
.996078 .784314 .596078 rgb
f
714.582 303.357 mo
668.641 283.411 li
668.641 283.411 li
714.589 303.356 li
714.587 303.356 714.585 303.357 714.582 303.357 cv
.909804 .619608 .407843 rgb
f
792.881 337.341 mo
735.94 312.621 li
734.516 312.742 731.05 313.807 726.357 313.807 cv
726.06 313.807 725.759 313.803 725.452 313.793 cv
722.174 313.696 718.356 313.052 714.254 311.24 cv
712.758 310.579 711.853 309.343 711.55 308.038 cv
711.391 307.351 711.399 306.644 711.576 305.993 cv
711.576 305.992 711.576 305.991 711.576 305.991 cv
711.643 305.746 711.734 305.509 711.848 305.284 cv
712.333 304.335 713.245 303.596 714.591 303.361 cv
714.582 303.357 li
714.585 303.357 714.587 303.356 714.589 303.356 cv
668.641 283.411 li
704.618 269.558 752.546 254.242 788.603 254.242 cv
792.865 254.242 796.959 254.456 800.851 254.911 cv
864.851 262.411 879.601 276.161 857.851 297.911 cv
848.021 307.741 820.321 323.261 792.881 337.341 cv
.972549 .752941 .533333 rgb
f
795.723 338.575 mo
936.018 275.903 li
936.018 278.571 li
795.721 342.078 li
795.723 338.575 li
cp
.929412 .603922 .364706 rgb
f
795.721 342.078 mo
797.119 342.681 li
938.646 278.888 li
936.018 278.069 li
936.013 278.571 li
795.721 342.078 li
cp
.847059 .564706 .254902 rgb
f
795.721 343.311 mo
795.718 381.083 li
797.254 380.312 li
797.119 342.681 li
795.721 343.311 li
cp
.866667 .533333 .305882 rgb
f
795.721 342.078 mo
797.119 342.681 li
797.252 379.724 li
797.858 380.009 li
797.858 342.35 li
796.318 341.807 li
795.721 342.078 li
cp
.6 .403922 .227451 rgb
f
795.721 338.353 mo
788.237 335.119 743.429 315.762 735.951 312.532 cv
727.777 314.182 722.405 314.547 714.254 311.24 cv
719.368 313.363 724.182 314.363 730.492 313.606 cv
732.322 313.415 734.126 312.966 735.927 312.716 cv
740.18 314.571 791.502 336.956 795.724 338.797 cv
876.087 302.997 932.611 277.434 936.018 275.903 cv
936.018 275.903 918.599 283.488 795.721 338.353 cv
cp
.517647 .364706 .223529 rgb
f
706.191 121.021 mo
729.429 60.6519 li
901 60.6519 li
934 121.021 li
706.191 121.021 li
cp
1 .701961 .431373 rgb
f
732 209.329 mo
717.844 144.118 li
922.343 144.118 li
907 209.329 li
732 209.329 li
.847059 .529412 .145098 rgb
f
733.99 209.33 mo
732.97 209.33 li
718.691 144.12 li
719.71 144.12 li
733.99 209.33 li
.807843 .490196 .145098 rgb
f
738.69 209.33 mo
737.67 209.33 li
724.23 144.12 li
725.25 144.12 li
738.69 209.33 li
f
743.38 209.33 mo
742.35 209.33 li
729.76 144.12 li
730.78 144.12 li
743.38 209.33 li
f
748.07 209.33 mo
747.06 209.33 li
735.309 144.12 li
736.33 144.12 li
748.07 209.33 li
f
752.77 209.33 mo
751.76 209.33 li
740.86 144.12 li
741.87 144.12 li
752.77 209.33 li
f
757.48 209.33 mo
756.46 209.33 li
746.41 144.12 li
747.43 144.12 li
757.48 209.33 li
f
762.18 209.33 mo
761.17 209.33 li
751.97 144.12 li
752.98 144.12 li
762.18 209.33 li
f
766.89 209.33 mo
765.88 209.33 li
757.519 144.12 li
758.54 144.12 li
766.89 209.33 li
f
771.6 209.33 mo
770.599 209.33 li
763.09 144.12 li
764.09 144.12 li
771.6 209.33 li
f
776.32 209.33 mo
775.31 209.33 li
768.65 144.12 li
769.65 144.12 li
776.32 209.33 li
f
781.03 209.33 mo
780.03 209.33 li
774.22 144.12 li
775.22 144.12 li
781.03 209.33 li
f
785.75 209.33 mo
784.75 209.33 li
779.78 144.12 li
780.79 144.12 li
785.75 209.33 li
f
790.48 209.33 mo
789.48 209.33 li
785.36 144.12 li
786.36 144.12 li
790.48 209.33 li
f
795.2 209.33 mo
794.21 209.33 li
790.94 144.12 li
791.94 144.12 li
795.2 209.33 li
f
799.94 209.33 mo
798.93 209.33 li
796.51 144.12 li
797.519 144.12 li
799.94 209.33 li
f
804.67 209.33 mo
803.67 209.33 li
802.09 144.12 li
803.1 144.12 li
804.67 209.33 li
f
809.41 209.33 mo
808.41 209.33 li
807.69 144.12 li
808.69 144.12 li
809.41 209.33 li
f
814.27 144.12 mo
814.15 209.33 li
813.15 209.33 li
813.269 144.12 li
814.27 144.12 li
f
819.86 144.12 mo
818.9 209.33 li
817.89 209.33 li
818.86 144.12 li
819.86 144.12 li
f
825.46 144.12 mo
823.64 209.33 li
822.64 209.33 li
824.46 144.12 li
825.46 144.12 li
f
831.06 144.12 mo
828.39 209.33 li
827.39 209.33 li
830.06 144.12 li
831.06 144.12 li
f
836.66 144.12 mo
833.14 209.33 li
832.14 209.33 li
835.66 144.12 li
836.66 144.12 li
f
842.26 144.12 mo
837.9 209.33 li
836.9 209.33 li
841.27 144.12 li
842.26 144.12 li
f
847.88 144.12 mo
842.66 209.33 li
841.66 209.33 li
846.87 144.12 li
847.88 144.12 li
f
853.49 144.12 mo
847.42 209.33 li
846.42 209.33 li
852.48 144.12 li
853.49 144.12 li
f
859.099 144.12 mo
852.19 209.33 li
851.18 209.33 li
858.1 144.12 li
859.099 144.12 li
f
864.72 144.12 mo
856.96 209.33 li
855.95 209.33 li
863.71 144.12 li
864.72 144.12 li
f
870.34 144.12 mo
861.73 209.33 li
860.73 209.33 li
869.34 144.12 li
870.34 144.12 li
f
875.97 144.12 mo
866.51 209.33 li
865.49 209.33 li
874.95 144.12 li
875.97 144.12 li
f
881.59 144.12 mo
871.29 209.33 li
870.27 209.33 li
880.58 144.12 li
881.59 144.12 li
f
887.22 144.12 mo
876.07 209.33 li
875.06 209.33 li
886.21 144.12 li
887.22 144.12 li
f
892.86 144.12 mo
880.86 209.33 li
879.84 209.33 li
891.84 144.12 li
892.86 144.12 li
f
898.5 144.12 mo
885.64 209.33 li
884.62 209.33 li
897.48 144.12 li
898.5 144.12 li
f
904.14 144.12 mo
890.44 209.33 li
889.41 209.33 li
903.12 144.12 li
904.14 144.12 li
f
909.78 144.12 mo
895.24 209.33 li
894.21 209.33 li
908.76 144.12 li
909.78 144.12 li
f
915.43 144.12 mo
900.03 209.33 li
899.01 209.33 li
914.4 144.12 li
915.43 144.12 li
f
921.09 144.12 mo
904.84 209.33 li
903.8 209.33 li
920.05 144.12 li
921.09 144.12 li
f
907 209.33 mo
888.75 209.33 li
888.75 209.33 li
889.41 209.329 li
889.41 209.33 li
890.44 209.33 li
894.21 209.329 li
894.21 209.33 li
895.24 209.33 li
899.01 209.329 li
899.01 209.33 li
900.03 209.33 li
903.8 209.329 li
903.8 209.33 li
904.84 209.33 li
907 209.329 li
908.305 203.781 li
907 209.33 li
.988235 .968627 .94902 rgb
f
907 209.329 mo
904.84 209.329 li
921.09 144.12 li
922.34 144.12 li
908.305 203.781 li
907 209.329 li
903.8 209.329 mo
900.03 209.329 li
915.43 144.12 li
920.05 144.12 li
903.8 209.33 li
899.01 209.329 mo
895.24 209.329 li
909.78 144.12 li
914.4 144.12 li
899.01 209.33 li
894.21 209.329 mo
890.441 209.329 li
904.14 144.12 li
908.76 144.12 li
894.21 209.33 li
889.41 209.329 mo
888.75 209.329 li
889.225 204.517 889.439 198.798 888.853 193.037 cv
898.5 144.12 li
903.12 144.12 li
889.41 209.33 li
888.451 189.903 mo
887.966 186.784 887.215 183.697 886.114 180.782 cv
892.86 144.12 li
897.48 144.12 li
888.451 189.903 li
885.411 179.056 mo
884.536 177.061 883.48 175.163 882.212 173.41 cv
887.22 144.12 li
891.84 144.12 li
885.411 179.056 li
881.387 172.328 mo
880.307 170.986 879.09 169.741 877.72 168.619 cv
881.59 144.12 li
886.21 144.12 li
881.387 172.328 li
876.818 167.914 mo
876.551 167.715 876.278 167.52 876 167.33 cv
875.144 166.746 874.087 166.183 872.848 165.642 cv
875.97 144.12 li
880.58 144.12 li
876.818 167.914 li
871.886 165.24 mo
870.652 164.747 869.267 164.273 867.74 163.815 cv
870.34 144.12 li
874.95 144.12 li
871.886 165.24 li
866.777 163.533 mo
865.455 163.157 864.043 162.794 862.54 162.441 cv
864.72 144.12 li
869.34 144.12 li
866.777 163.533 li
861.557 162.214 mo
860.196 161.907 858.766 161.607 857.277 161.317 cv
859.099 144.12 li
863.71 144.12 li
861.557 162.214 li
856.295 161.128 mo
854.905 160.866 853.464 160.61 851.978 160.361 cv
853.49 144.12 li
858.1 144.12 li
856.295 161.128 li
850.986 160.198 mo
849.58 159.968 848.127 159.744 846.647 159.527 cv
847.88 144.12 li
852.48 144.12 li
850.986 160.198 li
845.651 159.382 mo
844.225 159.178 842.765 158.979 841.279 158.785 cv
842.26 144.12 li
846.87 144.12 li
845.651 159.382 li
840.295 158.658 mo
838.857 158.474 837.391 158.294 835.904 158.12 cv
836.66 144.12 li
841.27 144.12 li
840.295 158.658 li
834.91 158.004 mo
833.464 157.837 831.996 157.675 830.511 157.517 cv
831.06 144.12 li
835.66 144.12 li
834.91 158.004 li
829.515 157.412 mo
828.06 157.26 826.588 157.111 825.101 156.967 cv
825.46 144.12 li
830.06 144.12 li
829.515 157.412 li
824.104 156.871 mo
822.642 156.731 821.165 156.595 819.679 156.462 cv
819.86 144.12 li
824.46 144.12 li
824.104 156.871 li
818.678 156.374 mo
817.21 156.245 815.734 156.12 814.248 155.998 cv
814.27 144.12 li
818.86 144.12 li
818.678 156.374 li
.835294 .513725 .137255 rgb
f
719.503 151.76 mo
719.501 151.76 719.502 151.76 719.5 151.76 cv
717.84 144.12 li
719.503 151.76 li
.988235 .968627 .94902 rgb
f
813.248 155.917 mo
811.781 155.798 810.297 155.682 808.817 155.57 cv
808.69 144.12 li
813.269 144.12 li
813.248 155.917 li
807.816 155.495 mo
806.338 155.384 804.852 155.277 803.366 155.173 cv
803.1 144.12 li
807.69 144.12 li
807.816 155.495 li
802.356 155.103 mo
800.876 155 799.4 154.901 797.916 154.805 cv
797.519 144.12 li
802.09 144.12 li
802.356 155.103 li
796.904 154.74 mo
795.42 154.645 793.94 154.553 792.457 154.463 cv
791.94 144.12 li
796.51 144.12 li
796.904 154.74 li
791.456 154.404 mo
789.966 154.315 788.478 154.229 786.994 154.146 cv
786.36 144.12 li
790.94 144.12 li
791.456 154.404 li
785.99 154.09 mo
784.495 154.008 783.015 153.928 781.53 153.851 cv
780.79 144.12 li
785.36 144.12 li
785.99 154.09 li
780.518 153.799 mo
779.024 153.723 777.54 153.649 776.062 153.577 cv
775.22 144.12 li
779.78 144.12 li
780.518 153.799 li
775.058 153.529 mo
773.561 153.458 772.068 153.389 770.592 153.323 cv
769.65 144.12 li
774.22 144.12 li
775.058 153.529 li
769.586 153.278 mo
768.084 153.212 766.596 153.149 765.123 153.088 cv
764.09 144.12 li
768.65 144.12 li
769.586 153.278 li
764.118 153.046 mo
762.613 152.985 761.13 152.926 759.66 152.87 cv
758.54 144.12 li
763.09 144.12 li
764.118 153.046 li
758.636 152.831 mo
757.132 152.774 755.647 152.72 754.186 152.669 cv
752.98 144.12 li
757.519 144.12 li
758.636 152.831 li
753.171 152.633 mo
751.661 152.581 750.174 152.531 748.719 152.484 cv
747.43 144.12 li
751.97 144.12 li
753.171 152.633 li
747.694 152.451 mo
746.175 152.402 744.689 152.357 743.24 152.314 cv
741.87 144.12 li
746.41 144.12 li
747.694 152.451 li
742.225 152.284 mo
740.7 152.24 739.213 152.199 737.778 152.16 cv
736.33 144.12 li
740.86 144.12 li
742.225 152.284 li
736.753 152.133 mo
735.214 152.093 733.728 152.056 732.307 152.022 cv
730.78 144.12 li
735.309 144.12 li
736.753 152.133 li
731.281 151.998 mo
729.722 151.961 728.244 151.928 726.853 151.899 cv
725.25 144.12 li
729.76 144.12 li
731.281 151.998 li
725.829 151.878 mo
724.216 151.845 722.732 151.817 721.39 151.793 cv
719.71 144.12 li
724.23 144.12 li
725.829 151.878 li
720.367 151.774 mo
720.071 151.769 719.782 151.764 719.503 151.76 cv
717.844 144.118 li
718.691 144.12 li
720.367 151.774 li
.835294 .513725 .137255 rgb
f
721.39 151.793 mo
721.039 151.786 720.698 151.78 720.367 151.774 cv
718.691 144.12 li
719.71 144.12 li
721.39 151.793 li
.796078 .47451 .137255 rgb
f
726.853 151.899 mo
726.508 151.892 726.164 151.885 725.829 151.878 cv
724.23 144.12 li
725.25 144.12 li
726.853 151.899 li
f
732.307 152.022 mo
731.96 152.014 731.62 152.006 731.281 151.998 cv
729.76 144.12 li
730.78 144.12 li
732.307 152.022 li
f
737.778 152.16 mo
737.432 152.151 737.094 152.142 736.753 152.133 cv
735.309 144.12 li
736.33 144.12 li
737.778 152.16 li
f
743.24 152.314 mo
742.9 152.304 742.56 152.294 742.225 152.284 cv
740.86 144.12 li
741.87 144.12 li
743.24 152.314 li
f
748.719 152.484 mo
748.373 152.472 748.036 152.462 747.694 152.451 cv
746.41 144.12 li
747.43 144.12 li
748.719 152.484 li
f
754.186 152.669 mo
753.846 152.657 753.508 152.645 753.171 152.633 cv
751.97 144.12 li
752.98 144.12 li
754.186 152.669 li
f
759.66 152.87 mo
759.319 152.857 758.976 152.844 758.636 152.831 cv
757.519 144.12 li
758.54 144.12 li
759.66 152.87 li
f
765.123 153.088 mo
764.787 153.074 764.452 153.06 764.118 153.046 cv
763.09 144.12 li
764.09 144.12 li
765.123 153.088 li
f
770.592 153.323 mo
770.256 153.308 769.92 153.293 769.586 153.278 cv
768.65 144.12 li
769.65 144.12 li
770.592 153.323 li
f
776.062 153.577 mo
775.725 153.561 775.395 153.545 775.058 153.529 cv
774.22 144.12 li
775.22 144.12 li
776.062 153.577 li
f
781.53 153.851 mo
781.196 153.834 780.851 153.816 780.518 153.799 cv
779.78 144.12 li
780.79 144.12 li
781.53 153.851 li
f
786.994 154.146 mo
786.661 154.127 786.323 154.109 785.99 154.09 cv
785.36 144.12 li
786.36 144.12 li
786.994 154.146 li
f
792.457 154.463 mo
792.123 154.443 791.79 154.423 791.456 154.404 cv
790.94 144.12 li
791.94 144.12 li
792.457 154.463 li
f
797.916 154.805 mo
797.582 154.783 797.238 154.761 796.904 154.74 cv
796.51 144.12 li
797.519 144.12 li
797.916 154.805 li
f
803.366 155.173 mo
803.029 155.149 802.693 155.126 802.356 155.103 cv
802.09 144.12 li
803.1 144.12 li
803.366 155.173 li
f
808.817 155.57 mo
808.482 155.545 808.151 155.52 807.816 155.495 cv
807.69 144.12 li
808.69 144.12 li
808.817 155.57 li
f
814.248 155.998 mo
813.913 155.971 813.583 155.944 813.248 155.917 cv
813.269 144.12 li
814.27 144.12 li
814.248 155.998 li
f
819.679 156.462 mo
819.345 156.433 819.012 156.403 818.678 156.374 cv
818.86 144.12 li
819.86 144.12 li
819.679 156.462 li
f
825.101 156.967 mo
824.771 156.935 824.436 156.902 824.104 156.871 cv
824.46 144.12 li
825.46 144.12 li
825.101 156.967 li
f
830.511 157.517 mo
830.178 157.481 829.85 157.447 829.515 157.412 cv
830.06 144.12 li
831.06 144.12 li
830.511 157.517 li
f
835.904 158.12 mo
835.575 158.081 835.242 158.042 834.91 158.004 cv
835.66 144.12 li
836.66 144.12 li
835.904 158.12 li
f
841.279 158.785 mo
840.953 158.742 840.625 158.7 840.295 158.658 cv
841.27 144.12 li
842.26 144.12 li
841.279 158.785 li
f
846.647 159.527 mo
846.314 159.478 845.987 159.431 845.651 159.382 cv
846.87 144.12 li
847.88 144.12 li
846.647 159.527 li
f
851.978 160.361 mo
851.648 160.306 851.321 160.252 850.986 160.198 cv
852.48 144.12 li
853.49 144.12 li
851.978 160.361 li
f
857.277 161.317 mo
856.954 161.254 856.624 161.191 856.295 161.128 cv
858.1 144.12 li
859.099 144.12 li
857.277 161.317 li
f
862.54 162.441 mo
862.215 162.364 861.889 162.289 861.557 162.214 cv
863.71 144.12 li
864.72 144.12 li
862.54 162.441 li
f
867.74 163.815 mo
867.426 163.721 867.102 163.626 866.777 163.533 cv
869.34 144.12 li
870.34 144.12 li
867.74 163.815 li
f
872.848 165.642 mo
872.539 165.507 872.218 165.373 871.886 165.24 cv
874.95 144.12 li
875.97 144.12 li
872.848 165.642 li
f
877.72 168.619 mo
877.427 168.378 877.126 168.143 876.818 167.914 cv
880.58 144.12 li
881.59 144.12 li
877.72 168.619 li
f
882.212 173.41 mo
881.946 173.043 881.672 172.683 881.387 172.328 cv
886.21 144.12 li
887.22 144.12 li
882.212 173.41 li
f
886.114 180.782 mo
885.893 180.199 885.66 179.624 885.411 179.056 cv
891.84 144.12 li
892.86 144.12 li
886.114 180.782 li
f
888.853 193.037 mo
888.746 191.992 888.614 190.946 888.451 189.903 cv
897.48 144.12 li
898.5 144.12 li
888.853 193.037 li
f
890.44 209.33 mo
889.41 209.33 li
903.12 144.12 li
904.14 144.12 li
890.44 209.33 li
f
895.24 209.33 mo
894.21 209.33 li
908.76 144.12 li
909.78 144.12 li
895.24 209.33 li
f
900.03 209.33 mo
899.01 209.33 li
914.4 144.12 li
915.43 144.12 li
900.03 209.33 li
f
904.84 209.33 mo
903.8 209.33 li
920.05 144.12 li
921.09 144.12 li
904.84 209.33 li
f
712.928 144.118 mo
706.191 121.021 li
934 121.021 li
927 144.118 li
712.928 144.118 li
.917647 .588235 .223529 rgb
f
712.928 144.118 mo
927 144.118 li
934 121.021 li
928.516 133.399 916.322 141.447 902.785 141.625 cv
712.928 144.118 li
cp
.756863 .45098 .176471 rgb
f
775.239 135.212 mo
775.675 138.154 778.2 140.334 781.174 140.334 cv
850.487 140.334 li
853.34 140.334 855.798 138.326 856.367 135.531 cv
857.124 131.812 854.282 128.334 850.487 128.334 cv
781.174 128.334 li
777.511 128.334 774.702 131.588 775.239 135.212 cv
.847059 .529412 .145098 rgb
f
775.239 135.212 mo
775.675 138.154 778.2 140.334 781.174 140.334 cv
850.487 140.334 li
853.34 140.334 855.798 138.326 856.367 135.531 cv
857.124 131.812 854.282 128.334 850.487 128.334 cv
781.174 128.334 li
777.511 128.334 774.702 131.588 775.239 135.212 cv
f
850.487 140.334 mo
781.174 140.334 li
778.2 140.334 775.675 138.154 775.239 135.212 cv
775.195 134.915 775.174 134.62 775.173 134.33 cv
775.169 131.076 777.811 128.334 781.174 128.334 cv
850.487 128.334 li
853.867 128.334 856.491 131.093 856.49 134.324 cv
856.49 134.721 856.45 135.124 856.367 135.531 cv
855.798 138.326 853.34 140.334 850.487 140.334 cv
.745098 .458824 .12549 rgb
f
851.071 139.833 mo
781.758 139.833 li
778.783 139.833 776.258 137.654 775.822 134.712 cv
775.525 132.707 776.256 130.817 777.586 129.526 cv
775.892 130.795 774.9 132.93 775.239 135.212 cv
775.675 138.154 778.2 140.333 781.174 140.333 cv
850.487 140.333 li
852.088 140.333 853.55 139.686 854.639 138.637 cv
853.632 139.384 852.399 139.833 851.071 139.833 cv
cp
.447059 .270588 .0941176 rgb
f
987.877 298.26 mo
967.024 381.262 li
1188.64 381.262 li
1164.51 298.26 li
987.877 298.26 li
.94902 .670588 .439216 rgb
f
967.024 381.26 mo
967.02 381.26 li
967.022 381.25 li
967.024 381.26 li
.94902 .839216 .756863 rgb
f
985 381.26 mo
967.025 381.26 li
980.795 326.45 li
987.88 298.26 li
1164.51 298.26 li
1168.36 311.5 li
1158.2 311.319 1146.58 311.187 1134.4 311.187 cv
1087.32 311.187 1031.54 313.16 1016.3 321.93 cv
996.97 333.04 988.401 363.72 985 381.26 cv
.921569 .643137 .427451 rgb
f
1164.51 269.772 mo
1164.51 298.26 li
1188.64 381.262 li
1191.5 361.227 li
1164.51 269.772 li
.678431 .431373 .137255 rgb
f
990.126 268.608 mo
963.345 361.227 li
967.024 381.262 li
987.877 298.26 li
990.126 268.608 li
f
989.789 269.772 mo
1164.51 269.772 li
1164.51 298.26 li
987.877 298.26 li
989.789 269.772 li
.988235 .737255 .466667 rgb
f
980.926 144.113 mo
989.789 269.772 li
1164.51 269.772 li
1173.1 144.113 li
980.926 144.113 li
.94902 .694118 .392157 rgb
f
1171.54 166.985 mo
1173.1 144.113 li
980.926 144.113 li
980.93 144.11 li
1173.1 144.11 li
1171.54 166.985 li
.92549 .760784 .580392 rgb
f
1164.51 269.77 mo
1161.14 269.77 li
1161.53 247.16 1161.26 198.229 1144 178.667 cv
1136.99 170.729 1108.05 165.883 1078.96 165.883 cv
1055.01 165.883 1030.97 169.168 1019 176.72 cv
997.25 190.45 994.03 249.15 993.57 269.77 cv
989.79 269.77 li
980.93 144.11 li
1173.1 144.113 li
1171.54 166.985 li
1164.51 269.77 li
.909804 .654902 .364706 rgb
f
1080 361.228 mo
1080 364.11 1077.24 366.447 1073.83 366.447 cv
1070.43 366.447 1067.67 364.11 1067.67 361.228 cv
963.345 361.228 li
967.024 381.262 li
1188.64 381.262 li
1191.5 361.228 li
1080 361.228 li
cp
.827451 .541176 .329412 rgb
f
1191.01 361.23 mo
1188.64 381.26 li
967.02 381.26 li
1132.13 372.56 li
1140.88 372.1 1148.62 367.78 1153.64 361.23 cv
1191.01 361.23 li
cp
.776471 .498039 .305882 rgb
f
1074.24 365.594 mo
1071.02 365.594 1069.46 362.844 1069.25 359.75 cv
1067.67 361.228 li
1067.71 364.128 1070.45 366.469 1073.83 366.469 cv
1075.81 366.469 1077.57 365.663 1078.69 364.417 cv
1077.57 365.429 1075.99 365.594 1074.24 365.594 cv
cp
.937255 .698039 .439216 rgb
f
965.796 359.75 mo
989.43 275.137 li
989.789 269.772 li
963.345 361.228 li
1067.67 361.228 li
1069.25 359.75 li
965.796 359.75 li
cp
1 .772549 .501961 rgb
f
1164.51 269.772 mo
1164.51 273.5 li
1189.5 359.75 li
1081.38 359.75 li
1080 361.228 li
1191.5 361.228 li
1164.51 269.772 li
cp
f
980.926 144.113 mo
970.704 158.424 li
985.485 290.348 li
989.584 275.75 li
989.789 269.772 li
980.926 144.113 li
cp
.827451 .541176 .329412 rgb
f
980.927 144.113 mo
970.704 158.424 li
985.485 290.348 li
983.84 290.348 li
969.25 158.424 li
980.927 144.113 li
cp
.74902 .478431 .294118 rgb
f
1164.51 269.772 mo
989.789 269.772 li
989.584 275.75 li
1164.51 275.75 li
1164.51 269.772 li
cp
1 .776471 .552941 rgb
f
1173.1 144.113 mo
1164.51 269.772 li
1164.51 275.75 li
1167.79 285.333 li
1182.09 160.877 li
1173.1 144.113 li
cp
.776471 .486275 .290196 rgb
f
1173.1 144.113 mo
1182.09 160.877 li
1167.79 285.333 li
1169.1 285.333 li
1183.08 160.877 li
1173.1 144.113 li
cp
.666667 .419608 .254902 rgb
f
978.882 160.877 mo
977.451 155.971 li
1176.57 155.971 li
1175.55 160.877 li
978.882 160.877 li
cp
.576471 .360784 .215686 rgb
f
977.451 155.971 mo
980.927 144.113 li
1173.1 144.113 li
1176.57 155.971 li
977.451 155.971 li
cp
.988235 .737255 .466667 rgb
f
1080 144.12 mo
1080 147.003 1077.24 149.34 1073.83 149.34 cv
1070.43 149.34 1067.67 147.003 1067.67 144.12 cv
1067.67 141.237 1070.43 138.9 1073.83 138.9 cv
1077.24 138.9 1080 141.237 1080 144.12 cv
cp
.964706 .741176 .501961 rgb
f
1067.67 144.188 mo
1067.71 147.039 1070.45 149.34 1073.83 149.34 cv
1077.21 149.34 1079.95 147.039 1080 144.188 cv
1067.67 144.188 li
cp
.576471 .360784 .215686 rgb
f
972.429 359.75 mo
987.877 298.26 li
1164.51 298.26 li
1164.71 298.924 li
988.5 298.924 li
973.125 359.75 li
972.429 359.75 li
cp
.517647 .333333 .207843 rgb
f
983.5 160.877 mo
982.112 160.877 li
989.789 269.772 li
987.877 298.26 li
987.71 298.924 li
988.5 298.924 li
990.563 269.833 li
983.5 160.877 li
cp
f
817.19 653.254 mo
704.19 682.891 li
704.19 851.538 li
817.19 792.538 li
817.19 653.254 li
.94902 .619608 .298039 rgb
f
578.813 653.254 mo
698.001 635.349 li
817.19 653.254 li
704.19 682.891 li
578.813 653.254 li
.407843 .219608 .0666667 rgb
f
698.001 635.349 mo
648.795 642.74 li
757.457 668.92 li
817.19 653.254 li
698.001 635.349 li
cp
.94902 .619608 .298039 rgb
f
578.813 653.254 mo
646.713 643.054 li
730.446 666.724 li
704.19 682.891 li
578.813 653.254 li
.717647 .415686 .0862745 rgb
f
704.19 682.891 mo
643.029 660.699 li
735.235 638.509 li
817.19 653.254 li
704.19 682.891 li
.976471 .662745 .403922 rgb
f
578.813 653.254 mo
578.813 786.236 li
704.19 851.538 li
704.19 682.891 li
578.813 653.254 li
.658824 .372549 .0862745 rgb
f
704.189 851.54 mo
578.81 786.24 li
578.81 773.3 li
578.811 773.3 578.812 773.3 578.813 773.3 cv
578.813 786.236 li
704.19 851.538 li
704.189 851.54 li
.827451 .72549 .635294 rgb
f
704.19 851.538 mo
578.813 786.236 li
578.813 773.3 li
586.244 773.985 596.746 774.74 606.904 774.74 cv
616.183 774.74 625.174 774.11 631.28 772.22 cv
647.3 767.27 649.319 689.5 649.569 669.981 cv
704.189 682.891 li
704.189 851.54 li
.623529 .34902 .0862745 rgb
f
578.813 653.254 mo
698.001 635.349 li
735.235 638.509 li
643.029 660.699 li
578.813 653.254 li
cp
1 .65098 .392157 rgb
f
643.029 660.699 mo
678.248 652.224 li
642.75 660.667 li
578.813 653.254 li
642.404 661.266 li
704.189 682.891 li
643.029 660.699 li
cp
.729412 .478431 .309804 rgb
f
704.189 850.995 mo
516.985 754.01 652.816 824.454 578.81 786.24 cv
713.505 856.994 496.357 743.266 704.19 852.086 cv
708.896 849.614 808.052 797.595 817.19 792.538 cv
689.848 858.412 901.674 748.541 704.189 850.995 cv
cp
.568627 .313726 .0862745 rgb
f
344.645 414.975 mo
401.431 371.245 li
480.472 393.11 li
451.75 414.975 li
344.645 414.975 li
cp
.407843 .219608 .0666667 rgb
f
344.645 414.975 mo
401.431 371.245 li
480.472 393.11 li
479.767 393.646 li
401.5 372.625 li
346.25 414.975 li
344.645 414.975 li
cp
.686275 .427451 .235294 rgb
f
344.645 541.91 mo
434.401 566.219 li
434.401 405.625 li
344.645 414.975 li
344.645 541.91 li
cp
.529412 .380392 .164706 rgb
f
434.401 566.219 mo
512.022 544.807 li
512.022 413.654 li
434.401 405.625 li
434.401 566.219 li
cp
.756863 .560784 .364706 rgb
f
441.221 556.559 mo
441.178 556.764 441.065 556.99 440.908 557.033 cv
440.671 557.101 440.564 556.741 440.566 556.485 cv
440.566 556.227 440.655 555.975 440.777 555.846 cv
440.907 555.712 441.053 555.724 441.151 555.881 cv
441.264 556.061 441.267 556.346 441.221 556.559 cv
cp
440.675 555.414 mo
440.414 555.688 440.299 556.176 440.298 556.558 cv
440.296 557.016 440.482 557.645 440.906 557.532 cv
441.208 557.451 441.4 557.01 441.471 556.685 cv
441.554 556.306 441.547 555.796 441.344 555.477 cv
441.168 555.196 440.904 555.174 440.675 555.414 cv
cp
.286275 .188235 .0745098 rgb
f
437.871 559.397 mo
442.176 558.228 li
442.179 557.453 li
437.874 558.622 li
437.871 559.397 li
cp
f
440.954 548.5 mo
442.118 547.194 li
441.958 546.596 li
440.64 548.085 li
439.438 556.211 li
437.881 556.632 li
437.879 557.328 li
439.724 556.829 li
440.954 548.5 li
cp
f
436.332 546.528 mo
443.696 544.588 li
443.641 558.859 li
436.283 560.864 li
436.332 546.528 li
cp
435.848 561.786 mo
444.065 559.543 li
444.128 543.674 li
435.902 545.837 li
435.848 561.786 li
cp
f
444.905 544.501 mo
449.382 543.321 li
449.197 543.65 449.096 543.716 449.058 543.875 cv
449.015 544.047 449.063 544.272 449.186 544.29 cv
449.286 544.313 449.389 544.158 449.396 543.902 cv
449.405 543.576 449.415 543.416 449.419 543.311 cv
451.954 542.643 li
451.892 556.382 li
444.85 558.3 li
444.905 544.501 li
cp
444.433 559.186 mo
452.298 557.039 li
452.367 541.755 li
444.494 543.826 li
444.433 559.186 li
cp
f
450.413 548.146 mo
450.158 547.432 449.643 546.612 448.892 546.539 cv
448.699 546.542 li
448.623 546.514 li
448.611 546.484 448.609 546.426 448.61 546.317 cv
448.534 546.248 li
448.435 546.281 448.302 546.313 448.298 546.315 cv
448.247 546.414 li
448.193 546.653 li
448.058 546.734 li
447.46 547.055 446.987 547.8 446.702 548.439 cv
446.28 549.381 446.064 550.587 446.064 551.494 cv
446.131 551.262 446.279 550.872 446.513 550.81 cv
446.756 550.745 446.924 551.064 446.994 551.307 cv
447.102 551.029 447.234 550.554 447.52 550.554 cv
447.802 550.554 447.867 550.915 447.933 551.046 cv
447.985 550.932 448.011 550.683 448.209 550.457 cv
448.223 550.542 li
448.226 550.58 448.227 550.659 448.226 550.865 cv
448.222 551.815 448.216 552.733 448.212 554.338 cv
448.211 554.491 448.2 554.626 448.181 554.743 cv
448.15 554.933 448.06 555.27 447.875 555.318 cv
447.713 555.361 447.627 555.146 447.599 554.981 cv
447.579 554.874 447.56 554.656 447.543 554.612 cv
447.511 554.58 li
447.147 554.662 li
447.158 554.797 447.192 555.125 447.242 555.371 cv
447.413 556.221 448.124 556.271 448.443 555.257 cv
448.487 555.113 448.523 554.951 448.546 554.77 cv
448.571 554.524 448.575 554.344 448.577 554.098 cv
448.585 552.612 448.592 550.721 448.592 550.721 cv
448.593 550.553 448.595 550.437 448.598 550.354 cv
448.75 550.432 448.825 550.647 448.875 550.811 cv
448.958 550.525 449.092 550.077 449.391 550.042 cv
449.654 550.042 449.742 550.356 449.816 550.55 cv
449.879 550.292 450.023 549.867 450.28 549.794 cv
450.54 549.729 450.66 549.982 450.742 550.239 cv
450.72 549.557 450.641 548.791 450.413 548.146 cv
cp
f
448.857 545.635 mo
448.878 545.393 448.881 545.149 448.886 544.906 cv
448.762 545.08 448.54 545.337 448.506 545.584 cv
448.454 545.962 448.818 546.07 448.857 545.635 cv
cp
f
449.564 546.243 mo
449.587 545.995 449.59 545.746 449.597 545.497 cv
449.475 545.68 449.264 545.913 449.221 546.153 cv
449.144 546.586 449.526 546.652 449.564 546.243 cv
cp
f
450.544 545.965 mo
450.583 545.723 450.563 545.467 450.57 545.222 cv
450.509 545.335 450.448 545.44 450.373 545.545 cv
450.28 545.679 450.202 545.816 450.195 545.969 cv
450.18 546.317 450.473 546.401 450.544 545.965 cv
cp
f
447.852 546.257 mo
447.87 546.02 447.874 545.78 447.884 545.543 cv
447.748 545.74 447.527 545.991 447.501 546.25 cv
447.464 546.628 447.813 546.735 447.852 546.257 cv
cp
f
450.065 544.761 mo
450.099 544 li
449.949 544.221 449.715 544.464 449.725 544.74 cv
449.736 545.082 450.005 545.095 450.065 544.761 cv
cp
f
460.36 554.076 mo
453.394 555.973 li
453.457 542.247 li
460.429 540.409 li
460.36 554.076 li
cp
453.05 541.575 mo
452.981 556.854 li
460.762 554.73 li
460.839 539.526 li
453.05 541.575 li
cp
f
455.112 553.777 mo
458.731 552.796 li
458.734 552.214 li
455.114 553.194 li
455.112 553.777 li
cp
f
457.66 552.205 mo
458.006 552.112 li
458.039 545.428 li
458.68 545.257 li
457.879 542.809 li
457.051 545.691 li
457.692 545.521 li
457.66 552.205 li
cp
f
455.698 552.736 mo
456.049 552.642 li
456.081 545.949 li
456.723 545.778 li
455.92 543.327 li
455.086 546.215 li
455.729 546.043 li
455.698 552.736 li
cp
f
416.141 350.974 mo
434.401 405.625 li
512.022 413.654 li
487.241 363.109 li
416.141 350.974 li
cp
.788235 .603922 .403922 rgb
f
412.21 525.67 mo
427.25 533.59 432.67 536.08 434.4 536.64 cv
434.4 566.22 li
344.64 541.91 li
344.64 414.97 li
360.21 413.35 li
371.46 452.27 392.33 515.2 412.21 525.67 cv
cp
.486275 .345098 .152941 rgb
f
416.141 350.974 mo
434.401 405.625 li
433.045 405.766 li
416.141 353 li
416.141 350.974 li
cp
.976471 .752941 .490196 rgb
f
1140.23 620.106 mo
972.958 620.106 li
972.958 466.678 li
1140.23 466.678 li
1140.23 620.106 li
.792157 .623529 .427451 rgb
f
1140.23 620.11 mo
1130.18 620.11 li
1130.18 620.109 1130.18 620.108 1130.18 620.106 cv
1140.23 620.106 li
1140.23 466.678 li
1140.23 466.68 li
1140.23 620.11 li
.972549 .945098 .917647 rgb
f
1140.23 620.106 mo
1130.18 620.106 li
1130.57 598.652 1130.64 533.639 1117.33 520.33 cv
1103.58 506.584 1002.59 505.639 974.34 505.639 cv
973.857 505.639 973.399 505.639 972.96 505.64 cv
972.96 466.68 li
1140.23 466.68 li
1140.23 620.106 li
.768627 .592157 .392157 rgb
f
962.938 451.417 mo
962.938 498.097 li
1149.66 498.097 li
1149.66 451.417 li
962.938 451.417 li
cp
.827451 .65098 .478431 rgb
f
990.563 442.333 mo
962.938 451.417 li
1149.66 451.417 li
1130 442.333 li
990.563 442.333 li
cp
.768627 .588235 .423529 rgb
f
1133.46 513.67 mo
1133.46 504.878 li
1121.16 504.878 li
1121.16 513.67 li
1121.16 517.071 1123.54 519.872 1126.61 520.246 cv
1126.61 532.095 li
1121.37 532.76 li
1121.37 534.371 li
1133.25 534.371 li
1133.25 532.76 li
1128.01 532.095 li
1127.78 532.095 li
1127.78 520.269 li
1130.96 520.009 1133.46 517.155 1133.46 513.67 cv
cp
.189453 .189453 .189453 rgb
f
1073.47 533.239 mo
1098.5 533.239 li
1098.5 506.325 li
1073.47 506.325 li
1073.47 533.239 li
cp
1099.63 534.371 mo
1072.34 534.371 li
1072.34 505.193 li
1099.63 505.193 li
1099.63 534.371 li
cp
f
1070.14 505.193 mo
1068.76 518.462 li
1069.76 535 li
1070.96 535 li
1070.96 505.193 li
1070.14 505.193 li
cp
f
1101.33 505.193 mo
1102.71 518.462 li
1101.71 535 li
1100.51 535 li
1100.51 505.193 li
1101.33 505.193 li
cp
f
1104.65 531.874 mo
1065.22 509.11 li
1066.26 507.313 li
1105.69 530.077 li
1104.65 531.874 li
cp
f
1104.65 507.188 mo
1065.22 529.951 li
1066.26 531.748 li
1105.69 508.984 li
1104.65 507.188 li
cp
f
1060.17 512.659 mo
1059.49 513.794 li
1064.73 516.905 li
1056.01 516.905 li
1056.01 518.367 li
1064.86 518.367 li
1059.38 521.463 li
1060 522.63 li
1068.96 517.882 li
1060.17 512.659 li
cp
f
1111.01 512.72 mo
1111.68 513.856 li
1106.43 516.955 li
1115.16 516.976 li
1115.15 518.438 li
1106.3 518.417 li
1111.78 521.524 li
1111.15 522.69 li
1102.2 517.921 li
1111.01 512.72 li
cp
f
484 621.966 mo
448.343 611.947 li
448.343 865.683 li
484 846.289 li
484 621.966 li
.666667 .415686 .113725 rgb
f
414.667 619.344 mo
448.343 611.947 li
448.343 865.683 li
414.667 852.473 li
414.667 619.344 li
.847059 .529412 .145098 rgb
f
448.343 865.683 mo
414.667 852.473 li
414.667 619.344 li
424.641 818.346 li
425.508 835.643 433.828 852.26 448.343 865.683 cv
.772549 .482353 .133333 rgb
f
643.802 433.717 mo
643.802 542.935 li
746.774 585 li
746.774 458.057 li
643.802 433.717 li
cp
.658824 .372549 .0862745 rgb
f
839.58 433.717 mo
746.774 458.057 li
746.774 585 li
839.58 548.109 li
839.58 433.717 li
cp
.94902 .619608 .298039 rgb
f
643.802 433.717 mo
741.691 419.012 li
839.58 433.717 li
746.774 458.057 li
643.802 433.717 li
cp
.968627 .658824 .4 rgb
f
789.56 462.106 mo
789.59 456.751 li
783.859 458.529 li
783.844 463.882 li
783.834 465.576 784.682 467.33 786.322 467.102 cv
786.332 467.1 li
786.341 467.099 li
786.35 467.098 li
786.358 467.096 li
786.331 474.297 li
783.902 475.459 li
783.898 476.438 li
789.402 474.707 li
789.407 473.729 li
786.98 474.093 li
786.877 474.125 li
786.906 466.942 li
788.553 466.248 789.557 463.979 789.56 462.106 cv
cp
.14902 .0980392 .0666667 rgb
f
768.211 481.358 mo
778.503 478.122 li
778.508 476.884 li
768.212 480.117 li
768.211 481.358 li
cp
f
770.015 479.065 mo
770.871 478.796 li
770.887 465.579 li
771.905 465.265 li
770.459 462.597 li
769.001 466.162 li
770.028 465.846 li
770.015 479.065 li
cp
f
775.863 477.229 mo
776.709 476.961 li
776.74 463.763 li
777.763 463.448 li
776.317 460.793 li
774.869 464.343 li
775.885 464.028 li
775.863 477.229 li
cp
f
761.3 468.557 mo
760.693 468.352 760.025 468.288 759.32 468.387 cv
759.116 468.416 758.91 468.458 758.744 468.501 cv
758.743 467.536 li
758.218 467.696 li
758.219 468.661 li
757.454 468.939 756.727 469.381 756.062 469.945 cv
754.067 471.641 752.632 474.444 752.456 477.301 cv
752.482 477.165 752.526 477.031 752.586 476.906 cv
752.766 476.525 753.097 476.187 753.511 476.091 cv
753.895 476.002 754.239 476.182 754.382 476.56 cv
754.425 476.674 754.448 476.805 754.449 476.948 cv
754.448 476.79 754.477 476.63 754.527 476.476 cv
754.679 476.019 755.055 475.567 755.527 475.458 cv
755.913 475.369 756.261 475.545 756.404 475.93 cv
756.447 476.045 756.471 476.177 756.471 476.323 cv
756.471 476.162 756.498 476.001 756.549 475.846 cv
756.644 475.549 756.83 475.262 757.084 475.059 cv
757.44 474.773 757.904 474.688 758.231 475.007 cv
758.246 483.013 li
758.246 483.502 757.918 483.98 757.545 484.09 cv
757.131 484.22 756.576 484.346 756.576 483.53 cv
756.06 483.7 li
756.06 483.888 756.089 484.06 756.142 484.209 cv
756.498 485.219 757.434 484.761 757.627 484.7 cv
758.234 484.463 758.762 483.676 758.762 482.852 cv
758.748 474.829 li
758.946 474.52 759.223 474.288 759.573 474.2 cv
759.824 474.143 760.072 474.199 760.253 474.383 cv
760.428 474.558 760.5 474.818 760.5 475.066 cv
760.5 474.742 760.616 474.411 760.795 474.153 cv
760.981 473.879 761.249 473.652 761.581 473.569 cv
761.835 473.511 762.087 473.571 762.267 473.754 cv
762.443 473.933 762.514 474.186 762.514 474.435 cv
762.514 474.117 762.631 473.787 762.81 473.529 cv
762.999 473.252 763.239 473.055 763.559 472.956 cv
763.977 472.859 764.276 473.022 764.427 473.336 cv
764.475 473.435 764.506 473.548 764.519 473.675 cv
764.409 471.446 763.392 469.264 761.3 468.557 cv
cp
f
760.593 466.771 mo
760.678 466.902 760.874 466.904 760.994 466.818 cv
761.198 466.673 761.231 466.423 761.277 466.195 cv
761.383 465.689 761.466 465.179 761.547 464.669 cv
761.357 464.984 760.811 465.901 760.636 466.218 cv
760.544 466.384 760.486 466.597 760.593 466.771 cv
cp
f
762.653 468.167 mo
763.002 468.198 763.086 467.752 763.143 467.491 cv
763.249 466.985 763.337 466.476 763.418 465.966 cv
763.233 466.272 762.675 467.203 762.507 467.513 cv
762.365 467.776 762.356 468.14 762.653 468.167 cv
cp
f
764.331 467.744 mo
764.179 468.32 764.834 468.449 765.002 467.743 cv
765.104 467.309 765.246 466.466 765.319 466.023 cv
764.983 466.577 764.375 467.576 764.331 467.744 cv
cp
f
763.913 463.546 mo
764.054 463.021 764.189 462.116 764.234 461.847 cv
763.265 463.443 763.261 463.473 763.225 463.646 cv
763.174 463.891 763.291 464.036 763.444 464.056 cv
763.76 464.098 763.854 463.769 763.913 463.546 cv
cp
f
758.835 466.02 mo
758.917 466.15 759.117 466.146 759.234 466.063 cv
759.437 465.919 759.47 465.672 759.518 465.446 cv
759.624 464.938 759.708 464.424 759.793 463.911 cv
759.593 464.244 759.064 465.121 758.874 465.468 cv
758.784 465.631 758.73 465.849 758.835 466.02 cv
cp
f
643.802 435.25 mo
746.774 459.25 li
746.774 458.057 li
643.802 433.717 li
643.802 435.25 li
cp
.356863 .172549 .0666667 rgb
f
779.771 424.732 mo
779.02 424.619 li
689.315 444.475 li
690.437 444.74 li
779.771 424.732 li
cp
f
695.288 459.25 mo
695.288 489.333 li
739.91 501.667 li
739.91 468 li
695.288 459.25 li
cp
.886275 .690196 .454902 rgb
f
735.75 470.864 mo
698 463.344 li
698 465.383 li
735.75 472.903 li
735.75 470.864 li
cp
.607843 .435294 .25098 rgb
f
724.583 472.643 mo
698 467.134 li
698 469.177 li
724.583 474.686 li
724.583 472.643 li
cp
f
725.113 477.394 mo
698.114 471.463 li
698.053 473.496 li
725.052 479.427 li
725.113 477.394 li
cp
f
722.481 495.152 mo
723.591 495.484 li
723.635 484.275 li
722.517 483.935 li
722.481 495.152 li
cp
.109804 .2 .313726 rgb
f
721.23 494.778 mo
722.091 495.037 li
722.126 483.819 li
721.274 483.561 li
721.23 494.778 li
cp
f
719.988 494.404 mo
720.84 494.663 li
720.884 483.446 li
720.023 483.187 li
719.988 494.404 li
cp
f
711.549 491.862 mo
712.41 492.122 li
712.445 480.912 li
711.594 480.653 li
711.549 491.862 li
cp
f
718.026 493.813 mo
719.598 494.29 li
719.633 483.072 li
718.063 482.596 li
718.026 493.813 li
cp
f
716.226 493.273 mo
717.796 493.75 li
717.84 482.532 li
716.27 482.056 li
716.226 493.273 li
cp
f
714.433 492.733 mo
716.004 493.201 li
716.039 481.992 li
714.469 481.516 li
714.433 492.733 li
cp
f
712.632 492.193 mo
714.202 492.661 li
714.246 481.452 li
712.676 480.976 li
712.632 492.193 li
cp
f
735.836 499.169 mo
736.954 499.511 li
736.989 488.293 li
735.88 487.96 li
735.836 499.169 li
cp
f
734.594 498.796 mo
735.454 499.055 li
735.489 487.837 li
734.629 487.586 li
734.594 498.796 li
cp
f
737.354 488.406 mo
737.317 499.615 li
738.179 499.875 li
738.214 488.657 li
737.354 488.406 li
cp
f
733.343 498.422 mo
734.203 498.681 li
734.238 487.463 li
733.387 487.204 li
733.343 498.422 li
cp
f
724.912 495.889 mo
725.765 496.139 li
725.809 484.93 li
724.948 484.67 li
724.912 495.889 li
cp
f
724.149 495.651 mo
724.682 495.816 li
724.717 484.599 li
724.185 484.441 li
724.149 495.651 li
cp
f
731.391 497.831 mo
732.952 498.307 li
732.996 487.089 li
731.426 486.621 li
731.391 497.831 li
cp
f
729.589 497.29 mo
731.159 497.768 li
731.195 486.549 li
729.633 486.082 li
729.589 497.29 li
cp
f
727.797 496.751 mo
729.358 497.227 li
729.402 486.01 li
727.832 485.542 li
727.797 496.751 li
cp
f
725.995 496.211 mo
727.565 496.679 li
727.602 485.47 li
726.03 484.993 li
725.995 496.211 li
cp
f
904.576 690.261 mo
1027.24 738.815 li
1027.24 841.034 li
904.576 775.758 li
904.576 690.261 li
.780392 .6 .396078 rgb
f
1176.31 678.335 mo
1027.24 738.815 li
1027.24 841.034 li
1176.31 763.394 li
1176.31 678.335 li
cp
.803922 .65098 .470588 rgb
f
904.576 690.261 mo
1062.16 645.966 li
1176.31 678.335 li
1027.24 738.815 li
904.576 690.261 li
.329412 .243137 .129412 rgb
f
982.292 738.776 mo
953.489 727.549 li
948.442 725.582 942.601 728.175 940.451 733.341 cv
938.305 738.5 940.66 744.287 945.706 746.254 cv
974.509 757.48 li
979.564 759.45 985.405 756.858 987.552 751.7 cv
989.701 746.533 987.346 740.746 982.292 738.776 cv
f
975.821 756.168 mo
947.019 744.941 li
941.973 742.975 939.617 737.188 941.764 732.028 cv
942.188 731.012 942.758 730.099 943.433 729.296 cv
942.167 730.35 941.127 731.718 940.451 733.341 cv
938.305 738.5 940.66 744.287 945.706 746.254 cv
974.509 757.48 li
978.57 759.063 983.136 757.696 985.889 754.424 cv
983.127 756.723 979.289 757.52 975.821 756.168 cv
cp
.94902 .729412 .486275 rgb
f
904.576 690.261 mo
970.667 703 li
1027.24 738.815 li
1176.31 678.335 li
1108.68 651.932 li
1062.16 645.966 li
904.576 690.261 li
.858824 .686275 .498039 rgb
f
970.667 703 mo
1031.41 679.354 1108.58 651.97 1108.68 651.932 cv
1108.57 651.971 1033.31 681.01 970.667 703 cv
.329412 .243137 .129412 rgb
f
982.292 738.776 mo
953.489 727.549 li
953.489 727.549 li
953.013 709.434 li
981.324 720.64 li
982.292 738.776 li
.807843 .647059 .466667 rgb
f
981.324 720.64 mo
953.013 709.434 li
952.754 699.547 li
970.667 703 li
970.667 703 li
970.667 703 li
980.721 709.365 li
981.324 720.64 li
.529412 .431373 .301961 rgb
f
1118.65 655.822 mo
1108.68 651.932 li
1118.65 655.822 li
.941176 .894118 .835294 rgb
f
980.721 709.365 mo
970.667 703 li
1033.31 681.01 1108.57 651.971 1108.68 651.932 cv
1108.68 651.932 li
1118.65 655.822 li
980.721 709.365 li
970.667 703 mo
970.667 703 li
952.754 699.547 li
952.754 699.547 li
1095.72 650.269 li
1108.68 651.932 li
1108.58 651.97 1031.41 679.354 970.667 703 cv
.854902 .701961 .529412 rgb
f
970.667 703 mo
970.667 703 li
1031.41 679.354 1108.58 651.97 1108.68 651.932 cv
1108.68 651.932 li
1108.57 651.971 1033.31 681.01 970.667 703 cv
970.667 703 li
.529412 .431373 .301961 rgb
f
174.954 633.036 mo
174.954 848.539 li
312.876 802.566 li
312.876 604.302 li
174.954 633.036 li
.807843 .482353 .211765 rgb
f
312.88 604.3 mo
312.88 802.57 li
275.71 814.96 li
276.63 789.87 279.36 678.86 257 656.5 cv
237.92 637.42 194.86 633.78 174.95 633.14 cv
174.95 633.04 li
312.88 604.3 li
.768627 .45098 .215686 rgb
f
101.987 617.834 mo
101.987 824.217 li
174.954 848.539 li
174.954 633.036 li
101.987 617.834 li
.937255 .6 .34902 rgb
f
312.876 604.302 mo
174.954 633.036 li
101.987 617.834 li
239.006 589.935 li
312.876 604.302 li
.968627 .666667 .466667 rgb
f
174.954 633.036 mo
184.564 609.667 li
228.167 598.667 li
312.876 604.302 li
276.881 611.801 li
174.954 633.036 li
.976471 .713725 .529412 rgb
f
228.148 598.467 mo
228.436 598.394 191.332 607.928 184.564 609.667 cv
188.163 608.775 170.038 613.264 228.184 598.866 cv
309.062 604.235 302.17 603.616 312.876 604.302 cv
312.876 604.302 277.574 601.64 228.148 598.467 cv
cp
.529412 .321569 .176471 rgb
f
137.847 814.317 mo
135.548 814.022 133.604 815.924 133.393 818.818 cv
133.182 821.704 134.776 824.563 137.029 825.479 cv
139.342 825.806 141.304 823.896 141.516 820.995 cv
141.729 818.087 140.118 815.219 137.847 814.317 cv
cp
.419608 .270588 .160784 rgb
f
137.847 814.317 mo
137.867 814.319 li
137.707 814.259 137.545 814.207 137.384 814.163 cv
134.88 813.492 132.664 815.459 132.437 818.563 cv
132.21 821.656 134.059 824.713 136.562 825.384 cv
136.724 825.427 136.886 825.461 137.049 825.487 cv
137.029 825.479 li
134.776 824.563 133.182 821.704 133.393 818.818 cv
133.604 815.924 135.548 814.022 137.847 814.317 cv
cp
.686275 .392157 .172549 rgb
f
149.177 817.353 mo
146.878 817.059 144.935 818.96 144.723 821.854 cv
144.512 824.739 146.106 827.598 148.359 828.515 cv
150.673 828.842 152.634 826.932 152.846 824.031 cv
153.059 821.122 151.448 818.255 149.177 817.353 cv
cp
.419608 .270588 .160784 rgb
f
149.177 817.353 mo
149.197 817.355 li
149.037 817.295 148.883 817.244 148.714 817.199 cv
146.21 816.528 143.994 818.495 143.767 821.598 cv
143.54 824.692 145.389 827.748 147.893 828.419 cv
148.061 828.465 148.217 828.497 148.379 828.523 cv
148.359 828.515 li
146.106 827.598 144.512 824.739 144.723 821.854 cv
144.935 818.96 146.878 817.059 149.177 817.353 cv
cp
.686275 .392157 .172549 rgb
f
160.834 820.476 mo
158.534 820.18 156.589 822.081 156.377 824.977 cv
156.166 827.863 157.761 830.723 160.016 831.639 cv
162.331 831.969 164.294 830.058 164.507 827.155 cv
164.72 824.245 163.107 821.376 160.834 820.476 cv
cp
.419608 .270588 .160784 rgb
f
160.834 820.476 mo
160.851 820.478 li
160.698 820.419 160.537 820.367 160.375 820.323 cv
157.864 819.65 155.647 821.618 155.42 824.721 cv
155.194 827.814 157.042 830.871 159.553 831.544 cv
159.715 831.587 159.877 831.622 160.033 831.646 cv
160.016 831.639 li
157.761 830.723 156.166 827.863 156.377 824.977 cv
156.589 822.081 158.534 820.18 160.834 820.476 cv
cp
.686275 .392157 .172549 rgb
f
202.55 816.363 mo
202.406 817.046 202.029 817.799 201.507 817.942 cv
200.719 818.168 200.365 816.97 200.369 816.119 cv
200.369 815.259 200.665 814.418 201.073 813.991 cv
201.503 813.545 201.991 813.583 202.316 814.107 cv
202.693 814.706 202.702 815.653 202.55 816.363 cv
cp
200.731 812.555 mo
199.863 813.469 199.481 815.09 199.477 816.359 cv
199.473 817.885 200.091 819.976 201.5 819.603 cv
202.507 819.332 203.146 817.865 203.382 816.782 cv
203.659 815.521 203.634 813.826 202.959 812.763 cv
202.374 811.831 201.495 811.756 200.731 812.555 cv
cp
.286275 .188235 .0745098 rgb
f
191.402 825.81 mo
205.728 821.916 li
205.737 819.34 li
191.412 823.229 li
191.402 825.81 li
cp
f
201.659 789.548 mo
205.535 785.203 li
205.003 783.211 li
200.615 788.167 li
196.618 815.206 li
191.435 816.606 li
191.428 818.924 li
197.566 817.263 li
201.659 789.548 li
cp
f
186.281 782.986 mo
210.786 776.53 li
210.601 824.019 li
186.118 830.69 li
186.281 782.986 li
cp
184.671 833.758 mo
212.014 826.294 li
212.224 773.488 li
184.85 780.687 li
184.671 833.758 li
cp
f
214.807 776.24 mo
229.705 772.315 li
229.09 773.412 228.753 773.627 228.627 774.158 cv
228.484 774.73 228.646 775.48 229.053 775.539 cv
229.386 775.613 229.729 775.101 229.75 774.249 cv
229.781 773.163 229.814 772.632 229.828 772.279 cv
238.262 770.057 li
238.058 815.774 li
214.624 822.157 li
214.807 776.24 li
cp
213.237 825.104 mo
239.409 817.962 li
239.639 767.104 li
213.44 773.995 li
213.237 825.104 li
cp
f
233.134 788.371 mo
232.289 785.994 230.572 783.266 228.075 783.022 cv
227.776 782.993 227.571 783.022 227.432 783.032 cv
227.292 783.045 227.217 783.039 227.178 782.938 cv
227.139 782.841 227.134 782.646 227.136 782.285 cv
227.157 782.049 227.15 781.967 226.882 782.055 cv
226.553 782.163 226.11 782.272 226.098 782.278 cv
226.01 782.322 225.947 782.373 225.927 782.606 cv
225.899 782.89 225.948 783.218 225.75 783.402 cv
225.652 783.494 225.504 783.563 225.298 783.673 cv
223.309 784.737 221.735 787.217 220.786 789.346 cv
219.385 792.479 218.664 796.492 218.664 799.511 cv
218.887 798.737 219.379 797.441 220.157 797.232 cv
220.966 797.019 221.525 798.08 221.758 798.887 cv
222.117 797.966 222.557 796.382 223.508 796.382 cv
224.448 796.382 224.664 797.582 224.882 798.02 cv
225.058 797.64 225.142 796.81 225.804 796.06 cv
225.826 796.216 225.841 796.213 225.849 796.343 cv
225.857 796.469 225.86 796.732 225.859 797.418 cv
225.844 800.581 225.826 803.635 225.812 808.974 cv
225.809 809.483 225.772 809.932 225.709 810.322 cv
225.607 810.953 225.306 812.073 224.692 812.236 cv
224.153 812.377 223.867 811.664 223.771 811.115 cv
223.704 810.756 223.643 810.033 223.586 809.887 cv
223.479 809.779 li
223.436 809.792 222.414 810.014 222.268 810.054 cv
222.305 810.502 222.42 811.592 222.585 812.411 cv
223.153 815.238 225.517 815.405 226.58 812.031 cv
226.728 811.554 226.847 811.014 226.923 810.41 cv
227.007 809.593 227.02 808.992 227.027 808.174 cv
227.054 803.231 227.076 796.938 227.076 796.938 cv
227.081 796.378 227.085 795.991 227.095 795.715 cv
227.603 795.977 227.851 796.692 228.017 797.236 cv
228.294 796.286 228.741 794.795 229.734 794.679 cv
230.609 794.679 230.903 795.727 231.149 796.368 cv
231.359 795.511 231.84 794.097 232.692 793.854 cv
233.559 793.637 233.957 794.48 234.229 795.335 cv
234.157 793.063 233.893 790.516 233.134 788.371 cv
cp
f
227.958 780.015 mo
228.03 779.208 228.038 778.398 228.054 777.589 cv
227.641 778.169 226.903 779.023 226.79 779.846 cv
226.615 781.104 227.83 781.461 227.958 780.015 cv
cp
f
230.311 782.037 mo
230.386 781.213 230.398 780.383 230.419 779.556 cv
230.015 780.162 229.312 780.94 229.168 781.739 cv
228.911 783.18 230.187 783.398 230.311 782.037 cv
cp
f
233.572 781.112 mo
233.703 780.307 233.635 779.453 233.659 778.639 cv
233.456 779.015 233.251 779.367 233.001 779.715 cv
232.694 780.158 232.432 780.616 232.41 781.123 cv
232.359 782.284 233.336 782.565 233.572 781.112 cv
cp
f
224.613 782.082 mo
224.675 781.294 224.688 780.498 224.721 779.708 cv
224.266 780.365 223.533 781.2 223.448 782.061 cv
223.323 783.319 224.487 783.676 224.613 782.082 cv
cp
f
231.978 777.105 mo
231.999 776.988 232.086 774.691 232.091 774.574 cv
231.59 775.31 230.814 776.117 230.846 777.038 cv
230.884 778.176 231.778 778.217 231.978 777.105 cv
cp
f
266.234 808.103 mo
243.054 814.413 li
243.263 768.74 li
266.465 762.625 li
266.234 808.103 li
cp
241.912 766.505 mo
241.681 817.345 li
267.572 810.279 li
267.828 759.688 li
241.912 766.505 li
cp
f
248.771 807.108 mo
260.814 803.843 li
260.824 801.905 li
248.779 805.168 li
248.771 807.108 li
cp
f
257.251 801.877 mo
258.403 801.567 li
258.512 779.324 li
260.644 778.756 li
257.979 770.609 li
255.225 780.202 li
257.358 779.633 li
257.251 801.877 li
cp
f
250.721 803.645 mo
251.891 803.329 li
251.997 781.06 li
254.133 780.491 li
251.462 772.335 li
248.685 781.943 li
250.827 781.372 li
250.721 803.645 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.0
%%For: (\702\750\762\740\753\750\751 \702\750\752\762\756\760\756\742\750\767) ()
%%Title: (Cardboard boxes set.eps)
%%CreationDate: 5/2/2019 2:00 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6H`ng;E@(Cp!.K]]!=[&%d<4P4;nEn)p?e`t"2>u3@kTqHU>9Y/4XSiKPI*jOkr6mJ&Qr+.d?7#l5J,nc;KkR]].tVkET4nY
%r5"<chgY7o]<?\Rir/oRl,-:hHhb]&m3-'<>Ag)2kR[[N^V'HsgTQ+e?8(3Nq=`"@?[_O4+5XbXqt8Ren%X,IiTm+"4TF^><tBfS
%qA8iYY93b9[pOOQra-^QI.@'X5M7beJ'pOXo\C=%5CNRjbLbY(aW:sb;uZ.&\*q'+r6N.Vo'bIbput/<RI]ndchc7#gZe(KpcITt
%ZTn966pH1ubr9g$G#=dl%t=5m0<Y%Y;Z;.CG<^HOMg&NXoAT@$n(rQe5Q3@^r8IT-^O6"=T>(<4:PV+4lKsqQr8RB.DtsV6EBMr]
%2)kEm\e.$Y@r]PrdUVQ4Ie_#U[b"^]+W\UNS7Ts#T;8b6b?E)M3oAoNIt%.c?[hk@?f&Nrr9X`=<DO^Nq>%Z&D,6a<4V%G*s3o<.
%rSm4"^]*NS2g5(hZDDd<BCA'7qh6&1T&S3P?Lnp%Qd5X*4oXa>LL7^m`]j1p0>>C5qWYoQ=0_5aVltUC(8!J[7K2;5Dnl.Lp]$43
%qid9@6`CU\d2k6sIQX]B>EdZPG*t2\A^gJTIWCqbkD:\tI)E_+ch\G"hYlHi=$Ot'a?LRA29'9Yr8HJpk6Ff[`sY#lG1c,gpO/jf
%'E2J@labPWIh)COhnQjaDn^Mo<BQA&]]VMkN2,G'c[LoOGkKVMcgSWeVth7#05Lc>AV9<,pV63I4ZE.SG)C3fkmp8"B7Kp;%X@^_
%:Ai4pr`oI]5PrVW^9rIgit(UnrT0Z!oagLUq9b7q5(EV,D]e>S5.l<j^]*30O1AtSrWE.II/WK"J+stCJ,/d[CegNKq![=cs1Pf5
%hb1BWNC/26pbP(cs&Jr'[stbLHa1??s$hF`\R'^WcYpRCs%?T]rqc-\X3Vmek4OL:r\jNAQX@E)lLfo;rkn2L/-!Eq::>#FDLZgk
%;7?Y.rGN*+\.3B6+Io^r8f=r7?s!?VGQ2K'o@cCFDfsem$@hmFbr7b@qs6iJNB:DEl*n4QJ$WG<J$>pNq86S;rVs56^8?:'3^.E/
%6UA^NZle_PT6BuoV";CUoq(1aO(%5NP:sZFQ4!-[LW?n(lg8V<'<f1H8(6.0^\[lohu3GKT`]Rmpp7s=q\/3l^Wh]6q6.O1qtFI1
%qt`tB=7U^K%Lq8]4l8QOr^)ZocT7?iQ*9Z8o'VZYNQ3mR6[C^V"4*FD#9L1^X;uI?qo4)cOTlQmiN'`g8h^%Y[pT0q_dC*,s2FI+
%Z?&#r"lG'\O*D&&1`/UI3+(FuQ`u`A2t[-2-eLN\TQd#U2NI,K0^Apg_Va7ahu3040>;]*M\!"@q2b"$r3-]n0?ZX4$0@m]X5A9f
%U_Fa??[]HQ\_l::@D1Vnq=lC;N:;bfiqC_4A&6V-LVg$aYPa[\H8%ZGA\A8GU@2@Xs&1lAWor?kkO34Iqjs)L?eso.s76#U2ui[B
%VsjWa_s7j%hYr7`#D;jphL/s9q8:OnIJ:uj/_0+b>&)\2r^sPDeB8-i;)l^II%9u\bDFR"BV1]DGr6^onrnRZZn)_@^:Nb&`ueW;
%rm#?3T0E2J`>@Fca8MoCfpU1$S&q0B?@;aoO8eR2+2LH=CK10M2H$*J,i?[Sjj`h03K?!FrjMBtakX6!n->T!pi&:u/TI=H7QD!/
%Lnc'O@(UZ0kk#G1`jaF4jSnLi43NPcJ!^'-+mq\knD`R*$0*ghc_pU!pKr=InBq_$I%,2p:/p96r84.E.&VIFs&./??d?)JqYsXr
%cb**SJ,QtY`r8^0Xn^QeTD\HCp3ZMjbPcd!^JFI!jk.?/^Wc`Rcc0>i=,W'5s/c*HaWn'_8SnNfZHA*r>[E^tor&26g1mgd0)N>\
%ch1jt<Bk>U4bTeselm!uXnJJP\!QL4-U2@<p11ql>9A:eeR-ttAUi5p*JZeT.I5C%(iueK1gZ--j4-8(ZA1*^^>nPns#nUCoAt?W
%5@$1gm7S8-GZu3fU$hg,b$Wo<cJR9haku+HM8'l(p[#Y]p3WX.Sacsams`9dDu2Y>s6M$QIK,'%k3]YUpVbqss#o-*-%:#,r;"Kb
%T>iN)rkj6^s31LS%ZSV<ZX<IaLu0RE9(k9.^%Cr]<o!GMAj?1^YDW94j:Zrc8\E!.YO&1eT'c9hIS]ZAp7)!5B7=QIi2$mFQPI82
%Ie;'C(^G#c+!6(Vjd#d`')hRAIS]ZAp7(apr,qniE-o%0pg!U#$1Z,uSs0->`S_EMI<.(>H_UG'h:hIY(GD@dX;CKIYbB`Ve/-(N
%<dJc<+F.P-rVZ<Il02nFc):*]TA!4l.Q.abdpYVc`eck.o6R[mRVUQ3Cc4%Cl.G;_Cr!`iLOHV9q_XY!iaJUmfr-M]]$icX=MD'W
%nSG!"a[Z<;=jT\9j@;*Qba>_<IrsN@EU%Cf"TL1Ip07NIoR!imGR#lT5CKG*e#0(7n4W:\Cgp//TZnfu[dS^upO-b>prOk([n1EP
%5YF#QSo)WR3_]W3;Zs(IC>]'%4I'W<U7!LQAdX!U?g_Y(FSW&^hr:PJM$_mS5>C/&s6m_GV"q`3rAXb6?Lae=Tqa01J%`-l4mYUL
%qpa.[H+-R6D$W8W:jBDln]J5Z@=tB.?thN4L(0_cKBS!uVO'3>5.+gcClfAND!cT;3e-TOIF%BU+4#6N'upjV?aB"XXh]>JY&KtK
%%_4?gi[A#6N-I7-7u^FLP=%Q0&PWo8]sK6Z@Qe"oM'bjK'*ZkG"fI2OP#$O;dfbj[g!IMKd0/\l2);%_l&HR./#1I2[pS:$n@(p7
%GF!tc'X$KgM<"<i`<!_pal$M*q1j@hqnJ3;q!fcZ(b,@8oq*mA>f'h(me3/hf9mEG$?$1<$#e&Ei@@hdFrL8`*WGuZ#4j>ameDI=
%jt"n^YAE<L[E#X'Wkp'pNb6&OV&YE(Q?+V@d*OFcTY9]Eb">==(AD7pgP,hIpuc@;K8Vim\7A2gQMFt$//p`*9\$k1df$<)r:eI2
%?hZb[ZSVTlq=p)4\]m7jdC.NJ"l\cIa(0GlnZWrjkOa!U6g;\cB/LF8.W'Dh4kDIJbSMMtG<D"hl',i"I`];k6Qge7>:jgF,F(0,
%:?ag0F"#[iSnn$i1BQ_#VLFp(l/(dE*YUWhdP26%A(cCjl0VFAHp(P,b;9e1-/$.WT!GaoZX#2-pd:X<pPJjK*Ir7MWd1_JoZL`E
%_BP"DO3K5aWupnN54[UpIJh>SRa:f%Pa[4,Ene;hLbV%*(WAjT^1\t0Uc"NQq*BuNRL`1N(<eV.^Ja9`%!j$loJ4Xo0^mrl%2sYI
%C#6[)p]m[/i?;_f%''11du9!YS!S*H]!4C%o*tu<KdZU2b[[<#50O.\4&kE&[,0V_Ya*iTs0I%_LY4t=Wun>_;b:'@o3K<[Y6(^o
%b3)_g<'^"0/h4r,!nC-/Op+i2AL)C$Kg_1/P@5C>@5`et+O^A2"3h'T0#N?%BVih4O=:d]`+_unTQ$*()\luT%^UY)q5<CgZYNp9
%`LP.uY4`K`4iW['c*(s6/nV#B=6l_=':#"U`UG2QBmUGqI!hG/V#)!3DH]6QOJE1S:H-9d^Q"WDn3u.8c1EhMDDZBCltH%dpbCTn
%De%uN72eZ58[#XiCFl$*kO?lpnUqLn0kI-H**%ij9&g8R9&o1V=jQ_7?dV2r&U#1)oMoam/b`=VH2Ei$9V-%6N3X:1:VOb1F+e7i
%97)dWe+PQ.k%/YJjQQH)m[aj80M+"-I[sX,,KeNYeMO+2at\S>K@0:=@j4C\Mr-3,T!j!>Z&j>YfTgs2BM`7!e#bpM3uTdgUe*n>
%8=S76YVB"'4IfU:krp.n[n+,=7/YfZ`&T<]IpBYaf>`N(M(jA?*Z`ZpY(cQTM(s#k-,4&^QnbDAo#cS$a(<J"F].+l7X@X9-a_@/
%lR;YX>J:&Ch1,H"7P-rjheRDk>dlKnElL:,Nd+Ar1",U7@iP/57e6o*GBHrFe6f8])#ZKQeot3+F,`8h;ljnM%."T-djX8OMYPd:
%UL+W1C)escHXV#`WPs\F@_D#*O*#OA[SQT+9b5n1O\>jjA\lT?IX:+YBX?[+Cs@3=CB\<q_]6/9iPkC]?QBL*L8D<:jeqf5nuKo8
%cEKThcYk;Mbl1[cVVjAK9j/?7it\,C(N_)Q?&;#u!Y3.7a$EJ<PIh3n;51r&d)!6=9?)Sq$Sj<V-kIRfKlN`;nXc)+o/nbE1Dng@
%XWoatG(,@:NCRfVI[c^ac,&9eC3,BfR$Mu2qVm3WCB[^!_^\*+'gtG->^9q+A_C0'%'`b8=k[;"gFL`f#dlcLfJ4:]WAa%INP0s1
%Q^=Qu?eD;^`U;-nBXb6M)1Y9e_7[(Yr+r/)a[Z$3;;N1//rW:Bk3]jfq=&4lilPegH.b)_Ra%A>W$#?l:D(`:n-hLnbs?\1S!fOm
%Mr`iPhiEWOO,;bTM;OANh_ZZt_31((7AB2^n\!Z<P0\^ca0GpUm,@[a)ui]oG*dYF)Ukn7+F`2X^VN592s,LE*u-D*fl$EGs6I:H
%#.R<U51K,Tlm:DWYK't"6Z)41*CkP!Bg(1s._=F`rUIAsJj7$#L>sa*rq9FIric%is(To2Z*QUkfu)_GO5o3j:O(C8YX;YF:AjT-
%Uu/`>_k5f(qo8X-HB)>c]q5AZma(mrl,,G5hn9&(p%=)I4oCQ-Ie]ZSn)&WbnDgE2n^m?"5QIFiGl?csm,\hXqq9;O\bf/^ir?mq
%m3hpphs)aGp"4bf/VKlsk1Ic.lq'ZpbaN=t_5D?d$mhB).F!X_IEfZ%HTZh&)"hn%<:b;8WAt.n_u@#7p&G-`_C!&tUju655qW[d
%G[-f##oMcTIiUGSqVe?EO#=%N!dd9d0*KGAms'*>@6N9qkOC7TUV5:eR-nHULRi)2fmC!INQ7/cJ!f?fW,qgs9PUao;n?T(D@Q>W
%Jt-X9$>.8#.=GJ44")ti.I$2Tg6nV!+b@nD,sfZ9e$V#Sp0)=B2BJ'-7Z@2s?2*nLc.%2Efj=7AB5@Hc+[9n^`Ac01@I&;Cj"[%&
%X_lO?2Pfo=WNpcWX16lbkDlAk8K,@$8SYa3VSr,tH"b*`:!2&i_)P?DI]X)ORa,b"30)1Cp<aKSXK,d-cKA<Y5#pdT1eijW[9$W3
%QsT0NfV_A-S(EZR4LeTVMHurB@%Y"EggtsTk-Dpfh1en;[s6+edq'@IoeERWLSj)d'miFf(k&8V8PAc2ho'ce@mJ6Kes!kE`/%rH
%$-nYe1!]ZMGY5W/>.C@'.X"3PNsDDF]W-B98[?TV5;YS7o8b:X]r^[^\&drf-ai3UQ[o7fM?AW>iQ/U@HIr5&61ejI=QM'<j_%Js
%p]*g1S2J:LYo.!EVCu3:Zr>:_s,O:(fSmf*::tNC`SMh([k8$XX:gS!3d5DojOB\`GpqqSAkbD1iB&scL?Pp<hsaYha\s:aQ'L@E
%q3V]:-@C&D_4D8?C5e-l!.I.LKOI'ui:"#GGXsp%k)>E[33QA2ZitS;0JVRnSKK5;4e$EQ>3_!,EgE3e5gk17@0:2rbCm0r!+X@Y
%AoZnTETRg"3p[%>m):=.Jkhci5&B_(]>jFodr`Q.Q:]?$l)^Rdjb2HlR0%UoH]Defj?LR1bk?nhQ>e^[0JbR-$`9>?ag)BiUb5Zo
%YO@ZQF3Gfh&:rcTBh`!!"39(-AY(a_4dA"0l(p[\mfM7]:<W6:jAUT\N6?(7O]/Zkg8V'p;=H?=WEQpWC>TMne_[U6+;;3nFl3dC
%WXr[\<2(6sNCRtA4&)=T!b?*50*<jf`RQ*=[g4GG*!?FPaOUU.Vb.!>,e!T!-RMN4/kV$DFrY@)%\'?-luqF-DrM^T*?!3ap/(P&
%^"G?N"XXcDDYo7-ls0mq_u9+gXuD))W"!]E;5V27<icCAa]>EZhqW;SVtRhG-_Et)0bj#0"jI0T7sRTa&Hp_'N_t)-K+HG<-tB/1
%#6b*.n@Wm.>W+06.NWl$KJ-mM&EDN:p8AgpG&J,M[\J8Icq6241[]YC)oLZCirP(2)*WI6-.tNPWb1'lPSp9?/mG%F_Qh@d6Z>:<
%RpN#OA--ufVm[\b`]0c8-*7Mt2&q@mTN/j`XU3S$q:)r[2=8_-DM@>s6`,Hp0=,.<+"fpo6SI.c/WGANCrSJijik@U##+4CD$(^/
%/sl+=D#kWRk'X9P5'Un+^rg3r@]k\H7B3Yf0Zqrk]RS.-[gPl5oPMdV\5tRML7aTR9bSLK;6^AUfJY,.oJ$BC7KJf#S@t?h7R=mb
%2=nfDg3L5=R3Jre`_<)CdnfS"0F>amgKsX[H]2jnSj/aY=:Gq-ij5)sAB/If1b=<anM"P!'^SqhheZ4&%l'^^-MQL<2dB^;a+EA\
%rufe_jgGaVc/V;RD/NjPe>C`IZrO7-),nL4nL(dV1CJ/$?2:idi2K"7I6k]3TFK_KJq-cN8RM@7VXu4dU?S^i`u9R8Z9NDr*T4r8
%"E2-dd(11.furLCb>$\M27!n>@!jBrr$dpg:*Qbc9/hKs7Iqp;,t`mB'`X?d5UkQ55;WF9)TKl"*IZVL&`7k5g.O*cB<6G?$n)c'
%9ZE%'T!FF$PN7")Bebt!^uGc$n-Db&(JW,2,.2gOT)+&nUn,W?d0_rl_[a)([Vte7ltMRaL1O?/_8eXB@CFFhUA[f41mgi]kh$u/
%_J*cVorsd?j%L,Xa0!7V%A[Lt\5c8BR"/A*a5JP6WjU7scYgp,AuLpr?O26p]'dE6FJY1t752Pdb+2.[',.5UVEG(Ei'B%5Anm*t
%4Lq>l^>0AlEVD@%rGf+Y5mSB'BR=6iBTM2\f8%A5kp35KH`U[dgkP$C:?)J49ka:W0ijm`bid_umQHtJAlI7"38@@\\I'?mg9]KI
%1B0"fZaC;sQi9C8RV=1&ZoM#>k"(oC).:IEpj>L7"bZtRBA9:ZZrb.=0L=]mHH>4$LE6(l\3.1I*[H7g2QJOJjMc+@EQ4]mF#B:@
%'t@(^'UHlQC$(s[pk1R'pmNl]=4q?6L-f*ECFI\r*ThQ+&,:r="^860&HZ7_ju6AX]pflP(!@HEdZbcsZ-oe`,iSgS#0DLG,0h%h
%$*='4q>-J_G1b`\gFq<CJTPF$L"/CF"LQl*i6Y0ErUpju:grGPit`u-8bIo`kb^fEG-Hka6t8dg/)62,43bK&D`=N:qk`G*[a":s
%m6&bGcr57YAo`'f47&LONl1`8=RFpS2X<p55M#@'CRUKSK9R$+:T\"99WV)/!J0dgC(DIO\XbnBZJ$g-O>@(Ac=8@7"`qFQ;lWf@
%(s$YjnVoUM8/pQqGYWgLNkSTQ/Y2<!g?CUpiT`ajQG^s*D>Sj,o4maTDGES%:-l;p>!e.$'X8+YnKmG\(%*62U_oL7e\EE:6SbD>
%`h#c4I`&]aC(9HP-$Q"0Q86)eHk[Zj;r4rS9/pn_=!3%(^`blHo`\^[5->=-@CQd%[agN_"h$)gLcrU-4I'#@15*ml-jMu%R1hI4
%)W9He6UmH"LrfXfoGlbYPJ4h?f*KR^7:G<-"L8ob#QmFSqf8'Jfou_N3Da],0]W?;buaZIld4b_f_`/\)Apn]Y6RA&&S6R"WZlff
%N+M4+qsakE<qaq>q/N$<^^t3$K?4BrfmVR^4?W^mFa3s3Cq?G#OhHa3a@:lCBkrY*aW#:QL8>"`>safDHeR2A4i2nM=>=m@bZXU"
%2U0pLWAQ[oMnY'cO,DPI_dH;R=FnLR&#3]*isT?*f>UD+&MCnma4SOnAV>r,R?3>K8#f;X@]s0N/CYE.Kgn/^342@L1H\9_.'QJ*
%bpEC3Hq1\NHe>VK)CFQr126-_Z]iVt1gGl(J57o\SF+5$4CWWRnu>:Af*#9BYrm1<oc[hgO+TTNJ;\f\AAat\,/JtPX1m'RbjlqO
%lDe!$pG1H5'Fc*i78/_rB1B7ADf>@U^=]t0>RF\p*g,)^HeYnc'r2r4_PXO>>d;BSIJI"Bf^M(!o5)Spj%?:afR53JI8HRXU%f4)
%apghM7XN+KS#K,T@em=bhh"hQ!6fJns1*F]#&7Po1i4:(aR^$/KXbOjTH:oGK#ETQ8Ofu$#RPG[OrX#e&8*ti[mP5<9!(l0b+ZV9
%A5<kFK-=!:<?7*/`_],5#n%uE]PKBP$kN#PFjQm!>`:bU^LB]V)VqqPEgBF@e:ce=)oK4.;.peKEI&$4,*:kb?,AY)E`r2TKChNZ
%RA:\iG=jj6n>I0-Pe^)CU=h19V;Hk^&m?CSamA'd-Ci8NUqi_A"Is8bDn=RJ[Na?LZB'p#"!*@'16`jh9683kaR*pS'`t!XCM7<a
%g8NPA)iU9IiN%Rpq(p$Z@88@'TL49Zo+4Wk@Fgc4eo35YUm^Nr*CRZs_h5B/6_Qi@GV's>-6X\FXchc<miuNi6JUL$o3?C"$XO)S
%,?tm:&5$bHa6coOq+Fal!u[cjL'n(K):J_H*T$LCEP8,aRTEU-(kY5D$rP!n1jBR8ULfb&;D)l3i$KHNEUV\bdDTI<YRO0KYD<]u
%%dkS-4="N0NB:_T^DIR,\n:+DD\C?R*LG2e2Jo]a?%UgJguJmfaVQ0q$D,&NB>^X%m;?[_?7<&4#SJ9L4ZSg/EWptPE9uok@]7hR
%0Lm6^U`>L`0%;C#m)c)RNHH<,#.o_+&hc2N\CMna9*qd3UOMV'$oo1.!LXb?"#IYN\hYZ2-U_An?9pWNS3mD<%7"pe)e<'%+-[Eq
%U<AAA0q`=NJ8qtQH=mFDV&>E47*W@%6RL]^2EKH#Gi;B8-.bD4h"1gD1sWr\1XlX$K*`1]+NkLS&%b3Ff[XM5AD$KR.3;/(9P?Jc
%r&ueSoQ3*/WPcV-k(I_KO*Mm4Eo=VN=oq`jS$t%1&.4%HE@!r#`hr?JVi:b2A51FTcL0^RiZ(Lc_3O)<@#^SIoNEYNe=D25R9-^@
%*g[K,_#n_b/C+Sg2pp<c)daoN241gk1=tK)hL&utc9k2Fn&;FjI.mC&DfY5=$AF.MT]`hE`#/^%eNeYa\IXn)=nF2fZVc*Z+Cg-\
%L-<c4K]!L@2J"\h`'TcSDE`.jDJjdM"U^aBbpr;IrS-!j`8qOQKk$LLk(Z4$V.mVX]%0W=5_No<$>Vh\SW.u$ggkF9s.7Eq-lO4i
%[U-K`,FTt3QU9&8Qp$i2C5fA/;ukt.(ko2q34K<DJdhYf)Jp3l`B"FTOK))<'03=pe<gOZ2Pm&i5BE'WcD0T.XfD"<:BTq!">o.`
%22%kO$g#FfT5DBt\B-E4E0C^g0lp0)nM%G&OZ"CaAr`@o+</n4.m''U'_3JC\!3>@)J67?ZHI\WKX2WJ6>K-4&<AN5,\)uE4)eR\
%"k:l90HH:mjXPkgc_MO#(EuC26]t,aS^3WbZYs<G7JT1KcqkGt\0N%h;ma\t7J75"+%,Bbnb&dp>oUqOM$$Za[K$j6Ef@*aP!);h
%!r%GkM>3GRZU=7W8g;fTlQ0aO1YZ_T`drCjVD4b(pkE`f#!X7kYDNksDiZLk-@9lf_DJiY7"cZ6<5?p6^ZGji_u1SqL^H<>O_J_D
%%rK2]T3GYIZ`[u'9cjKn0ZY#._5So0S@eZ+Zp7\DKFkUa.kE2^Po2GjRQSb/TeR)D$^.d86GO0UAPS8KjL;t4flu5%Mh_:d?Gf^M
%nLP1OL&m$cNU$Z`'*npHB$CcHHZ1Ui*T<$mom)]8LL?_'IaTc5?E!a@>d1f#\p`?7'*ZhFbKRg1L===34Zl6c00Tl+UQ^7R%osq9
%"Z`5jPo7RM+L3W(kPNQTH@WK9_T@Z:S#2Ia_5SCUfaKZhG+kG<NN*fC&%Zl(ZSCt$O9FH<;+SqTJWsXTM's<"%+&FA+XmL&ajJhg
%K=GBt_h3Uh?oZI+@SRG;"(scJ$NnKV1H85&`HX.=[Al2G,?PVNPj&D0G%7JlJ;Kg41_QS'lfdLi*5_Y06C%`V9$8#bo/UL/!'@tu
%Nc4eF/2CDS]s8j#p2-2Lg4G4'niG[@KNRi>?0j;+acD5D"Och1VKJFY<XA60+`![UV`$rgDX^q*^#Q],@2qhs`%R/i9nrdYV8BHg
%J--dC1PS&0d?k4-/.FMMq3d]2VaU7f`'P"Fn=5;d#_5Q"qbf;a4:6%s;^OsP\37/]!9Ctrj^4IQOU]`1Vo]&M8"0Qh,X2`f:'e;=
%"Y!Bbg"i($PgeZ%Q#rK'0c(gQln<lgi_c*Ll3bHd^3]RCN:P7]M&Ma_R,$"B*\0^6R:9Hg3tuji(WF?#R/gH4pf99QK>L#"(Kql7
%[$:r<kJJ<tIR11jLN-TiA=\hj+;"SX^g9a)L^W1KQ[E4sl*1eM;iD(:nVL=NQ"o<ZjVN]1]+]ZZp0]=Z6Ae&UGHtTWd;?_ui,5T`
%n8eiDGZ-N;OBjGDM/JbQ[[RAfQ?#\:m9<RhMUfq0&35.M^iHOsR.Yd"`c]V2k6XQ;(Z?=nEL:5s:3CLY53J#7$s$6L]%!*lon@[o
%5[6n=R\7f%gq/tm7K73+Ob3cElm-gTKds0q>)+8k+q'Le[QN28<+'Hd,(iPX:5LX^qs]W(I*(Kk^4P8JQ=H<#=:Yb0Krs>Ga_l_a
%*@!nRZWYT#%Q'J<J@*VS/mAUJK,Wu<d/s'(OY%;OY$?bYl>e;\%J(X5#X76%*tl22b.7p?KNKO:dd>O<"/^kn2@6Hmr";S-jK8V9
%]4=X@0FQ/A<_WoTkKktL6/`Gf,C/_;Z3&M]`@*QO[K1to-$tH,pa1?)"W?p_cDR.a.9P]>0i=tEihlnH8`jCmeAf1jUc^]6=<8WI
%Vrk]/nP\j-Yt*[E.Unk9hm164GGC$`TS9VMm-%"$cLEXf\3jkC3Ma3,jLEFHit2$HiUa^!UAt#?r;R`6(<5DYqPD(\bs>fA^dX?Z
%6&n0jb4=cDOan87(;&'8HC;$'=GB@"_L2-!9:>G=%]<cd0QB#TT+UdLE>sMs.oO%__MLf'^FE$_RDP#Bd8@Gd7_f5j<fsLNf4t2_
%/aJV<1hJGKhEnIojn`!iD1Hh:4BYm4FL!B4>&V7!Wn<@=)7&5S!@32GfnN&];_Tlp73^B'G,!"iE_TYl&-.GrNmnig`3KLGI#]XA
%dgUC'DMfZ:cj_TQ(`\EOXiF@A?DUb)\;_%a^`<c@*ZEEoHfT8i7a+d(GRjrLDBOH1:B;.9@[uqnhaB"^W/TeM7<f;nbYf-)_IoSf
%Ahu2ZfE.dap3/tpiFi97MOj<7.0!rfblP=p#$_0hUE*XqSqkc!/V.$.k/SVMKE.KfM'NP!m>>:mdP1+N3e9@H2L$W[I3(j?S-(j:
%7r@c#WH<):cGDrbFMH!f,Vn4)*s)?V<`]W9VB`^MA+goEFP8]6bkZo$Z^O"7gtXPNm#(PMoKBV9/NiL[a(4HD0NJV8gkDMV;7?g9
%.[N+9Uo+,>4c!GHE3`QBLDCPV'9e*e71m4]>Uqi#"(^hRRMKd>gHn^d^CXcF53t!'MI2^DG/,k7Y5&"e5US,$9%4:"p[^QY?;8PH
%3XhJ,,rlrkGi0-So4SrETV&7uO$>`VM0[A]Dn'3]ofoo#"Y!a^0OfgM*9N?@CE3ZtXJ]H=_oA>eM1dTNi"Ih3>8p8f$2\N[_]$<,
%*1Chm2IO2%5i?1[dbCIl!%E,&rK3"J%NPg:kQtN);OA_[feMH:PT>?]"Ed`cLRF2D@.N^&#Yoo7eo$--2h_$<64O'!h*c[/415T,
%YZ_XCNCYuF3=$Z[Vu[^_d1Vu=rch@5+S[m;-3=t8YWuiV-,JUHJGk'KbDI84jR?miQ39P8!%S.7#f5:`N-N?)+_<Vb&XNd-mH$=m
%/Y;dVCj)cXF#Q+Aj<ajq'(MPJZnaSlA'a+.n9V4JGm.k1Jrn&G1==dEgiG`Mg\-LJ*CN1DIaWYh!kt)B'Pr&dB3oZ9\4nBtXoJI1
%koX`G-Nlf8ltnr5H7)`4gks1sN[^``@6FBK;\=bm'^BX9e+4F46^U]rN48k`Mf^_J`<_&rThAXI2<brk(M<,rVX$SU@IQOtpbr=;
%`-_P'C=<h_7]HrZlf1)9f5igreR3rG29QCSi+Yjq6s9W]X73(p^-\\=O7+R)dk\$jWYB"hQp-)uL`dO9)%<aX/u`knL`/GhA3].N
%DRac]JeWS6XNtf/)*t114)tJd^]E4!"L8jPF(<kZkX,X?>XHRJaomYq@c/B_:-mEeG=Z59X/d3F=0IF0FD/UmN#r/>p(Rr%HITXs
%E?Zp%l/]flOl[Ji^#X?**RMMfiWE)M^2Re%*XMP$R<Sr&IU/f'O+.4IEO&C?LC\n,o5?h*qs"t.5CW.^l-5]9^\ld^DqJmcit=.<
%mF%LI#U=Up`Kq_`6igcM>!n<!,t,Ng%\mKTFsDn^K-PmK@d"\%\mL(4>"T:.pgJL9bWle9J34c\qn+CWW,O;S7hFq`Ku?]G/h"rS
%hr<!QMQ=qdng%==dFWFZ-BAft;fkjoG;3<?;jYlH`]@*E#]*&gr`X=J'OK`AHVH1(#a.g`%KGY56d$stK_\H]C7c)<+A'O$OAK;$
%DbmcF;r\A^:SS-Y:]c/p)gHYlQYd=U%71P]r^Cjt&(5IB^Epc3.,!:F1SjYff+@9[!f"i@8H*=[d_ToWc1c3O`NPtO*sJa6Zf_G%
%P(LMeY/UB^n-/1_:=$.UiYbHjN!O8fF[>>&.6Gp'LY$#;^rtGu__#^VJXH<KhukIrg<gbkS%*`729*=I!/OsMmYB4EfO:t2FEt-#
%1e4h^V&3&A_5fqI,ULjJdQMLZ(p=EX(8cJ#<c,n\hAIQ(=]l\ql]<L,O/'$=4eY0NLll\S/i+VScoD!67b!>`V>K5oZ?Ru3]CAfT
%qb[WFUe/=L2<o35Hn:U1)S=BZ5`C`d_/eF])>D#YJ)SY#QN46!TGV+Q_YV8V6Hg$BQp9A*pm%oOOrdRfHn!pEX3[URGc#%#f=uOI
%JrB<LN!X'Y@C0F<TR^Gi4.5!`C^c!gO\-V#.?H@IZJ17g>cas[&(eI#FN3Bp8]OC\4=^nc)ii2`)Mn8M)Mj3(F+&]A%e(HAa`ne`
%Xh($XS\([$30TYugm3>XEB&ENRK+`#K4-RL94[sVbI2'L72\-un_jm!!0e)m7-t*CKsKP+>5WD@aCbcX!`l.6."FSn1ZF)f<)4FM
%i?;<[].FBb%=)QcSZ;14+4mIW9LG4,e+eV/)Me"3S<7`Zogl.?%s"Aa%Ikk=In,ZAS;AI,ZMQ2I!K;qKgYT%hA_i)NJks4GfC$\i
%F>f-)b`mdOT$RM^K,BrrIB:!nZN,:Rk)gW/el@S*0YQcbo7,+IF9o?&6Mdn,][NrOp(&d:#oL$Z$4f$0*QN:_Nd_hj`dKfcn3sW0
%"i)DYCo@!DI"uj(oPVl,`JBS2"i+`d#@%\.5KDBQQ%cp0h)5Zk=R2nrjlF85C.c#)pAkGVa$t*@:Q`b4^hoOX/=t"se6-1Nkt*=*
%cSR,[\IMWmEYK'!:uu0Q8#,6uJl7OlU]m/.0cN@X2#uoEZN5EaSIm?,:gqTrlj%\RNDt6t"fXCn3%i:.K>X3urO&$5>LR4E+D4<(
%UIGK,[s6RXP2c'iOq=*l@2$QtR8J*i7,o[%Ob?8hDb#k$ADo*K0d..,"q)`)cJkZ]P['<!ar__S,@'_l#_r%&01,O)r*8_M[%mg?
%b/#<U`"]DdeorZO6VY5S7]/VTZ'CQSTn$j1j<6`/8LtLKioL<2G`7ef1CQBnJOPd-H8#Y]5!m'5[?Q[G7>;=d:2jXD<$',B-[?1^
%^_'o)Z'SX&p(=Ri@f_$KL`h5,>lcY0XLmC!Y6itP],cp*8;%K(Ws"I$R[:$L(O*(;`=P^8nnTY&a$TgbSH0K8Y]e1\UoN6D8XLB_
%`.UMY--`BPgLYUlC)hVPYoUe359jnFh_9D5LThLokB**s=p#uHPS)\W8DbCRZQL*?&RLi&OC5qL'0elFO(3:u4O2c_35#Gg'V/h\
%0?4\0W??dVR;lIq7KNEpXs#;BVl'W1*re9c_FNSfOjo3o5hN&gdu%e)F>;>U0&4mkkRe1P&I'_TmAdC$ZF\D`g@Z^C11<`a!@fai
%"NsEOA"-m`X??*#3CLk+QObfr^pZAoEXHi<);ISJi/).c!)#XhIhh]D<">Y,Vf3me$0k#T"bE#l8,tN!RG=`o1+NPG&BkQ/m)(qr
%$/19V)U0fUg]9b\Q`Wh8R%tC.j^*)^#O2r_]`Hm6VL)nAq?mdHAqa%S!f4+e0fPX$$7$u_\e(pmK3SYeDJ.?=U2^Ggr<2Nc:`[^2
%<K&;);"D2<"le:EQnBd67CJPF3u2Ql3'4/5J[a;Do#-]>K[_3QL(Zpa>i!>n!-a9i_+9pQ2#c6tc)+9u69d1_#!@(\Qp3rRr2M!O
%4L3s8aXadg,[//$ZLpb"e]?(i9`_b<G^;Ul'iR=b_34CIOuEofKHXp,*cQsfiK<4[&l8RiE5!&R5`,W'S5hgC6"<I+_>6,'SIK..
%4I0&[>U.\#QQMOVnj:R_Kds7+TB"r\KJsok7U(V0GK-DFEJGo?o#50PL*(1>Ur6@K#Z-o-)(JI&2.!Qi&SK#o!5F[s<Okc\98%_K
%ZX]4Da3DA);D>V&H')a5Ema9R4I#Y=RYlF&l=N]rrY^B!iMm]J6cku&*F>T__0n2Tq@[rHh/10kDB8I:63CoIZ,Ylb/?!5Bb&Zk:
%[42_!B7X5u7%9+4`QfSem&@91K%Jc\.@tNiR69Vfkr6UlrSr/IPA24s$&:=?H-JQMO2s.903e*PhW=dFl&hLi"^,P<TPb$s-#-`g
%]+:)a3huDIPIR;8-c\q4Qd*&ur2?;mQ0'3&Q6Hq;&R`]FoG,?5;uG*U<EiLhgi+nt>E%E*SJI:[[W.;u,H1d3"uetF<ucno!UI<>
%5]R*]*E[s$C+l!Q`GP*&cHB(Q[3<oWRoh!$CY#Iq/;chP^aA;JLloVC'dom*@BeFt/<B*u8m^XVG!OJa)9"s>q`$4:;*IMOQ3L=Q
%#^oknV8N#gE^LfR,m'-dq[0-r\0Fi)*7%RI;R^V&iqu%TTRI%[UDE;2KtX$REaYG]</*j`,3Hu1Z@X,*!CqS39GmsQhao0>5)t0u
%PU0?`$fTpWUp&K!/>.4gTGoj^it5USXO6/YV<hG\=g_h'K%oE,$"m@o1f^VKp!$C/l2]^onGMVC".Y8\-_>m@J?c!4Wt#;#eV2Tn
%:W3rj[DpVp8(O)gcJ`0/liE7IFAj&ah(J(RgA:oS@AS:8`l-5JqlOY$UO&=J-$X-fcAA$m0NXZ*;)HY7_=HsPoX&*X^01tXVbbI3
%Fg\.Z6Ck^26Qt=NZsHD8*X\8Iehl0;&_V]//=Oos<0U&[NRl,sqnIbb!%"2sL*N#N7!^c@0W8UR)[Yf9d=N;'E!1"kOb5:fLRnVl
%6@ura@YAm[X&luW0D$O)f!qr7E<\_og_^GGj6S?#bilHmH\A`S917d/_0Z`J+>&.H)bjSu/!7/(q8((j0\P,J2TLSBH87jWp*c\&
%+;X1a&:!@+fK!U3[YDO4Q-pj6aC#/93a0I+'+t/+P^$GPYSRL$@XlIU"8@j*2j4;9q^AVYe*A]UG@[YuGG>/,#3XY>$Y8bb\d\<j
%drN+bn.]r4*lB$X.[i)+q<Ye64OR13'4OXj@+O(@/d9aV,9D'\.]\C1b;C[<Sp#\s\=GQ9n+LYb:^hXR^4$HM$c[!UBD850JQE8q
%)>.mrM+;0lVMOcgU_.Y$%LN2\SQYk;'P'VlmWNCYQdKp%<T96VgeCe0\DG<)^lKGOb!6:V+,eu`#lsEZc3rPI&LF=Je@5Y9'.LGC
%OCpQ\&Zgf\bug.:(s+n630[l-i`f8a/\-&B#8Xc4+e#'rZZUPi_!iln!1A($CpSS$Gm,25F)k6j_1Fc_K8!]RUZ[8S)qW'je!In<
%%4fB<'\EDR5qe=0%L<0)CBgMs>sWZ=?N#aQg2Hi!cf:[a&?No^5sU?JH9M'fNis@!/EEn._sQAMXNSg;PR7?%*U$o4/6L>">ZkW&
%@Ke+?"Q-D7*Y*\h#BYDQLufVYE6]Rl(f!MNXFT^T\@6>bT8qllWJ!E#>*O!j@c=$d8Cj2aoC89:iep-k.*B5nAggmNh`_[_!)Ict
%/0SC=6-Q6q#_>3Lnp$%lgc6JH8l91MEsM:h@IT#i'ub,>AFG>U%J:QJO406UcG+>L((nC.3%$+;k_Y@&<d0PnQtKFl"YW'cb%c2E
%cuOoJO2tQE?8'EK:.3H*=C%POhR,<WZe(G^G.Q6uKIep*6bKq1#(I]2Y>GA@.O3/>]i69(\.0PIi/h6cBg,']("=(VT8n2J+*m7#
%om_`M-*#1hX=bBIW"U"XXmJ68hf$Ds6$]2&,\O+8/l[)rGI5g:F_D"(`@A"X94%^BY?\19nl!0f[8nCV.KD=+mn\t9.T(c?&=mQ:
%p!s>_O;gcu+B*FDOO-TZgohr"6ZF"YK%0]hKH-"oH2m7;,(SW.\bYO-I/^RnJTg;#K1O*ShJG:$k[Us`q$/k&"Ao)kcM"q!q_\Mr
%J+E8F5C<:N\$*PlqtXlJKV.P]n+^P!hgP1NoD;nolEg6b5iuQpH@3L(HMI"P55ag*i32$L4oR[A48tU')M-bqbFSSKZSs%<kBM8c
%c5]g(Lfo:B!UNoilJhr(BD0Stgle;_M2u)o!k3434bd<-bM9JFE,G!bS+RU^(isq'dURfha`ls=a4SDf#3@SJBkgm%O*Qg\!f"s=
%jq7O26[7ee&`#1GQ)GT/[U[6r_;H`Iis(/SVXK6))!LEfbGI<i^$$W$#Vdd0+*G0SPNhil-&6Dmh#^jp4NFih^[@*D\-<=^cl?+(
%kdd37a0hkCmS7h.*H:<qa,&V2gn\&4S$01XQ=Ji=`@9jna%XG'FHRUg$m^gOjZ#^T,aWmV*2>W_.>#VV&Kd+t7g-k_"/IhNIcDc@
%d*6IPmJ[^,0njD6eAaHW8N27S(ftLdIRJ#-ODpuk(U#Q4Rg&dqn/B3L'Bd<!ei5psS(5#1q=c3nmaH_f=%Zut$H7!b>[GG^C,Q?W
%YtfZ=n7c6L3Uc9E1EPl!*fUIBKl)#pj!`>r2Ik7W9d_kHRILPlZQ#5c9Od*kS]Z1Np\BE_GZ:k;^ChCp%t4YBYrONIeHCm%nli^G
%M_V5(Vf5NB-eUE<>JXa,m548?`]/^\h]aa\?7=b0`NZdYYM\Q%B3.\^fS_JbiOfA?1%$'R`f7SI?ns\[6!_\i@46r)0'4?LQFn.O
%o\l*P:`"2DF:MbX(N7s\NOkLU2\H^Kam#M,Icj&%:$guS;1Wl#\A;F/f8l#00Gg5)_3F\Z\9L$\-$Y>*ZU"l_]Z"-p&NIDm(/)7(
%VAFu;`^AX*AVUW`DT'L62[FC_D_[6A5&WqG\p:&&?62WHem_H]&@pjM=qi<jEMk?oWW3RHip`OkYBY>Ol:+h`+XU9p'dGtpR!Oi/
%j$&nFh!S[,9O+JF`]Sdl)UMdJqZt<W&/?jCe#dJY@LaS$`D0?jjV12TNMRI;Z1,bbUpqugq?BN2ErqRF7r`Uk@W3$6i;o-!.#L=[
%J9DA\L>q?8[3-kefe]cF"NB"W6md48(*Y[m!Dmrc@KPc:h!Dt`.q%UKabe-fQ0.3Um`J?11GNA*(dBrk@[7o+*5odG:\d-"b3(W(
%2d55+<D,VN$jO89EWmXCa>2E2SWjs?K.;I_W[L[goN!ms0t)l$Y0V>fn.c-N0lnk\r/$KE<m_K9k_P-Ic<qkdi4G9rAAk^_cnY14
%7811*Q(T>H^+9F$n]/Z))>A5D1R@R!qjiKZ`?,(&M1lct)b_6KNTq=aj[qiZS/T40bVZ$glhL<r:tECR'ueDuY!G=3/!9>YM1lm@
%q6;b^l%`CRZ;-Ql(,hAC9gt7:T>L]?EY"of^PoS"LJca-[m_8^&muRga"-UtF8+F'L2ejo#r0ZR.PftHEu5nGLiip`0Xa&'fG$uo
%2QKi]KYp@\K./_RL,j$Hp`^cq]m40.7_p2_X<8I"LKM<CCUbNcW4LHAC)C)t=:)f#$m+F]_I1nM1f4A1G_TZ$^t]?e@H\Q*:7Pl4
%s,N.[,8kB.GmK:9V!ML##K(LJ'if-qJmeq5?)+".2O&^<$U^uE41?n[1t&]k[4pNlQlj-q%!EOc#Mk2iOTEE140L?rPq1rj.pTb>
%`Jmlb8;j6\;IQ4>S4/\-#pd;_hD\&8E*/ji2&M&33oFnH:`'n>SD710@Gp9?c'qLrKV,A`3alj&<UO\?H&3q&aFpmON'SbK@nO?H
%$(%Bkm6&6VA"-*D1r?*QXk[$3OhJr4B'1<)iYC,,^`C[`f:>5FfoKCH%)<IdLI!&1E$U\@&V70G?8@Os58[%e5*ak+[Na?"&U?(1
%-e^PjKAej2j.m/KPY\tK#D:HBN0?4<YGe&"_$ANJNAMJf(W'Lp)%?Ei(6Zo[>j3lr(k][%MfiMC"s5=$gjHq2>YTFR?tAefZ.X_+
%#?3W^E-<McD;doa'd#<#K"4h%-W0@GSFk)?4J\`19e`UDi4K4dE,=E&JjU@p_+W/VBE&/6.X^q?6SJj@=4o.ALb9J)f88\EgK/^Z
%&-b3MMO\YB9b-MWm`#^KR)uM#)Am8m0PH%Upn1!Vfm@0]2\mm1JUp0s[<OA-+,%1iH"R?$HkhpS;Zm%&QPFeJEs!L8,#77F%?-0H
%!aUBr(j9"!Ri.Tel.5:@^gNB04-T7;gUNqpgpFlhaNI)T^c#CO,D*!*lm'_o"=Z%3#"'n";II.8)D4lsE0-SoQiNSR#=BRTE<;'#
%/=i$@LK!mM,;?tnA_m`E&Z#[V9(2i`eT8)1FMQ6mLQ.E8)_`$I^mfoa(dnc`QAQk0"JSN!;ZUNLiT3bKXSO9UJT(VAL?3aA!R@9Z
%$Q<EK]1($+&CdS]d?OhOL)XlKK*3$p>)7'Md/fM#GiqNs*5Z(`#**9?Zl+Di<_-P;_869iKjbYm^VD<a3<oF8rgc_n=8Lh60t(Ki
%/RIT]jM*q[&4:Rh_BVu<nf^d,$PJ"Zne'![-qo!V9)K(o"<&\5J"cBt(`ejT%A<nEI-(='Z!U6L1Z'#*hq5[5rbeG$r\c;JF`#ji
%O3QJ/%Rrk?\^.Fc^Zokq2sYC^?;.eAIfYp=!m=h^IoGmuntuB)I`rT2m4UN"WDCQop6T4ib_*MD&nPX+p,B6AZKI9^It?&+a#K.H
%56$6-QP/0#NV,5qi8>*r?dZ;CELJX>KR*W>F^t@r&\L@u@f=9.b)cbl08XL80H$K:4GZE+l`@krbOk]FD&N>,=fr_.YIK$s3D"_r
%JAa,FkqE&c3Ebpp':,P_&I.JQZX?:--g<9K&/FGhoG=JVji!\]([js&PT]qT&7>k59)?^F*?hQ1q+I;^#)SlAQd#UL,e\3siX3P3
%#NmaX8ZB;Zr8gKfm(JP\VB!O+62F6A(9)&$oTp2Nq&AWQ%i&p*=aqkD">O#.+^t&`Sb8=k\NU3gqMVj3bJ#n%0B7u7(g^?pRAnZJ
%EnXlTO-GUpRCSagCN$Sp@&bW8!eY+p&kYJ[KCfu)aj_a-b5&YQ'\kb206\B&AGjE'=A*YqqaEW'+#rJ5)>6rKM)5.j;3\N$1&e?;
%00KSj=)oQRnGOO_Odp%`V#*S;;SD,'9R]%pB!_G&5\Bj3g$d,p`XAqV#fOgJ<54PW\MO2YN4k47kEk_Li]Rr<ORGH[43oRPRipT2
%qW0)p*n+%,\YA<NNTYMj2Ub6H&IDrTbt3Ah%BK<InI&J32(p1Z3!!NocL=KXe"b_*Iad8/D*d[7i&o%[A?<$sMT,//n4UGaZKtuo
%jdTo4g)5A8ZLBM+L0o]*8(e$[gkNof"MYX11%7d(Wt\ALS)@@.R[#hJ0=*WGD7C2Uii["m"Ml`!NNeKL_(VBJbc+Zq?acjt>Tt#6
%U%(-aSDfh'Klr#LMI/u\`&kpkMoZM!%Z4U!R(^",r'D=G^g.UmBX%o%?OGGJmRm"BoHjT(:@ZO$/kn':i?,jEJ@4CVnLH`">q\0d
%\JkoDS`;X42:7EG(K0BQK'#""T47UjUd:GnP$\KOOpmL\$F$f@aY*hapiC$BKe=0iZ*XA.&&[\Knr'S1FkD]8(K*:'_=@s78QgZ,
%QNC4!?[7)H[9!r&^H<)Y0V.AC!`lthG^e>`!`'Cj^T%].VR*kbpKe(`SmO?RlXf\cU(7hPp#,WLWk15Jn&b/oXLIE-L%2*:]^.Ji
%gue+?dem"C7$F!]M&7ng,KST;_>A^lq%Z:[/)NWD$+i77%LABXNW-Ysr6bSp4E[*"]I8gd36a*+"n\-#bqI#PHj.bJ,eeXdbqCB%
%&):iIdr%D//AF:`R3mRJ(V'LQ]Emq9q8J!/)@Mj<Y1C`34!>Y=+D(t!1quFk!S\5<^Go&TIDPK4QQ[]3)p9mBqT`F6/AE$2!]UD-
%Dee,toZm$N18.N;JlX+,.0ts?r6fg;jij"OQVuO`_=B+5hhI*(n!O%iQN1do&01\Fq%^G.DO]c)HC%`KVtnjs=T)"d9.::YT_ZR[
%$.'0N?O4/Xh.V8*_Oog?&;e]kK_%M$/&A0.RU9<\)=F0njX_"1-d=9F*DZBQ!q)086UaV/r%_':dq8*'JssC.H%)IB4OH_D8;?sZ
%_=H?SH]E+oq1\<W2VtE]R,JXr04;i)19V,$CeCW[1.-?C\\EM6Cp&ogoY,b?KE>j.LD0;@D_E":\!-,Zk)Zic\I;;)R!D!b)r"G/
%h^rnahs%1_E;"n(Q;pOYB&DRTe9`RJ9a@f(DdH"`6faKGG4WXH32Q(+prAZHGC%qj&Gj\i1F3M9R*Is<U[t$_%39Q)3%r^(_<*fi
%%HACqn*oI/_<!`u!ut:Si*[[-iK_NO['$fQ,%#5c\p8Z8m"U,%dJ-%a5p%YlfZ&^R&mn&Famsf?n3o`-MlMWu5/b7!%1<MM`l)r0
%1\c.&-A'#Lo+-5f6/Xi!n&(F*(URFqPtg.oL.4_q"ab16JehV5HRTWQ0iQab#5p9/\ef0T9muCe&ehofV701SMr\UkeTlMX3Atoi
%e+OFFLiQg7m7"Tg/Ik3q_V@HqGKsOg]k%5I.!nfU0Yn1cN4l`^N'=aQ_Hu(-36dts\%Bs'FM4JX!s\&5f#qM]W$`tYAP!l]R</%m
%-b3(Hm`qZSe/R5^O$0nAV\etHN;n,]LNF^$S^@N#9%"(uRYjR_V^85k.!hF^lpf>pl45TD8RZ*Bk%jJX#(ajTSp*43E7"1Xgs8kN
%BBKHU0XUV7S9HEJ]X`=H]!?70(Ji*FQ'lj>S<t+?3TQnt&b-:N?WhZ@PO/K%0Dmin+)l*I6G(bhlm1\H<1mq/`/$`o-Rg\h'kc:7
%Zn_gJ'[&MR"p&$]MqhChm+?rPg++U*(-8JX+Q\;3>"%DlU<;`rq&:V54>%leK9DSqFD*=Go9E=.FJIonI=VV58m[o$U,-s8R!0C]
%;=\Vj+t.^[?j\G5Gq!.3pQ^o.-5pgZ.="KP_7">Yanm)'ja#T6s,N>V%+IRYgaIFsA_,`fGnn%D@l*U0-qBa*.jZi90!KSPP*_s^
%4M<.gQSTrC(jYZ4FSg]QGIs/<aGT1"?,IU+Y?GDXaRLCIf+6FQ3pa-kl7I&?`#lh:)mR!tjCQjdmd<QcbNK[qB+XVh\,`]a#^I:-
%@5@dRaLeQH-fjB6`"WSGhQuIcQ&t_i<V4F$$UMj,MMsI]I(Vl"=!a/$h*Ffs4>n;M8HX"pj!Et&$[V=4MMnU]c,Y_q8XJ\]a,Bd.
%\>;L4M\7Q2aJnlWWGTe;N>J6;k6%XMK/oEd_srSG]g'o0MjL[_esn];YE6,+XfXVl#hhdR]FpAV=R\_M8#0fqVO>+6kEV!-_*D&<
%Gk'8q^"UEEb:$CdG<0'KH/Q=<)t.nA(1b'/*6INl`Tq&>:;f5+:]j9P%FqQ9BQt[NWn8RJDg5Q)ORNaP(,l_0i9NofV*Mt<rmG34
%*RS!V9#*O$CJXHgNoBZB5$/B4+lW?aI2@l&TPfC0\&5pBdO*it3U#aPmTo<DOeTe)G<l4/>MIZ>,_R([inYXr28m,])9rQ:h<m;C
%)s8iY-mIY^EZb6OZE!oS_Q&H/kJk$T`mmW33T2UVe'm*"]@B2R2nE9]!S5n>]BC7A6qNL-Jjm'.O2uM'LEa>G>e=q\qHTM)(Y\qj
%hjAS<Ipq49-e`-QUbk$V/pLgjSR`PUTh)!aa)47]kpG$d$4!6u)o""YU\.?b$hR20A$b4th#j;37]tJ_9Nmoi\#J'EjVYW"Gph03
%)*K/.:B!Q>*R:A-lCt#-E:#0V/dOPkg;QX+Rs,#G:0gg$JOfQ+W='jnBgJ^+ZT8EO*Q.q=ad#[=@!?"*SPL'$c/J<+YZS]=:t.Yk
%,eq1eY#REM0&.\1gE=s674ke_2_NqJmSQgF0(6st9Y*J>P?mY"U^J:r_Y$3j$[=Q,q;BX(r#/GH.ueH)["CekH0@@]FKli&g*F8R
%#N,W86oP2A_4`q2_geH.7I;;T=JsMO:8Sj:]$'-S2Zd81,7"nI&]=<'pH[\Tk,]MQ/u=s16(j^gCmrs&ct*VKCB0k5]'PQ>-t=sp
%@bGD00,Se0oUNEHkaj0f;9\2a0dq-HY^i,,NC&sG$k0[+Ke@GQm(i$'\k3^hHDf,dJ]=i6j"(5lRaNfO;f@EH)%QOp8T^:h*UXoY
%.sf/rK.^WH`P\3&8?hM0B@K*72p6L+2LY!sdGW4$F)`1`3&gD5<c(mV"3I+G]Q?(LE>=^Zj76a+<D>m)QQ=J]Mn.[%c9:bl=7TT7
%n8=&\:_;IrRpjkjh@&nC)Z_SOK`Uig*XJ9)KXa*!.+5Hj*2j??_47R3TTpQVFY4tN"1h@mnd%pPT[)Y?_jki6gqA-2c=Ii\F9bR3
%X%MNb2K^WNBiSEH(ET6eS^O1VK`EO$9q=p]=d6F_g.N8c0GK."(U8J`"V"]kFsnR"4dgA:;l+Bkg_=$;JiK+i$;dudi`o)9ebAet
%>h(fR0%CqRf8VbV[\7ATLWk3+<.d+G!oDam31#XSmbO:P$,1p;)9fWj))L0,F6TU^`<C66"uqsq+O3umZ`H6.0)7Nsq1CY.anM;`
%FY5EOI&T'i>`tneW55HS+eT2[e@E^M[!npu-.DunW1_G4TSP)lW1JfYGN)l'o^p"),ib4RXru$/*mH5*:Z>W01)Njsi`p*pE0J+o
%$e.q^&F"N/@OcB3pO\Yrg'[#f7I#R/ji3bt.C4:TeNpc7q`BUTOX4Jpksh19g,Jf.6(A;`6^^619*+CE)f[KeOK'MUJif&3$&4$F
%kOLSJqcnu!'4KS%CuS]!"'7E@e22\=i"=2G&EbO"G*G^kbPQ1_)UpdH36g0:3#>IucA?U@BjQDP`46St_n-ND6;!bR&Ee'm^',n0
%jdD=]_4E2C^t^Y^mJLPj`.Yf.Fm^%#\8tHFPNUrtN,8\JDBa>:PWO.C;RqaSmG5'p5=(lf$EiI#>8lS5.2^Kb4?(:BNB9)L^1hXk
%A.:1?BQKS<;^6o..7iE\25^b?C`;)s@*N7TX=/UE(3XZD=+,UrqJCoRS2HZ5$3TlhRnH4*9Y[7FATgm%=2Sn$?;u*Abp>I3_,Z)o
%\JSKOBEW0)Vj?MRYMDPqN<eXk`?lH*K/XSJg-dmV>Y'^1%H:V"]R-al<"Lb0IO3;$l\5H(`48S<7X.jt5j@-:qaR*6:T\kA&Ef2Z
%@AnOSYY<a9'Q:q#KJI'MfkZIX-N`/K\JTd3rH2buKt,+e+[BH*9]'I-V1e[7)fmXX83Y1(c6_D0q=.k<Kg[>tP;nmE.9!NIS4f?:
%`%XKI93<0*!%u4#>I]N2\Pb"tBWDZ#pI4eb)f[LK)I6+.$NW&`RlHbHLm@X*S4bTO<"S5MH#5U-Y4sQReDQlXQQSPjJV,s!8/6,T
%7Ed;ONRF@YQU,&oqOl,FFXWANcAB^^^h:D[kL/B^Vf2h&7$'-@_2UDJPWG'AH]r^S>VR(FCm4l\=T>JF,'V(]2-0tWBp7\raJY@?
%S@JnA,MIR@bjC9rCrY6_r:hV_SLXZSoAuE[L`KQ,"W.b^AXk>r7[(tF=Y@A'IQ_;Ic753%*PQi4b!hF<MBX$WJIX/=Gk!+Y=m=3N
%:G,K*?mouc>_LX(>T<mR?iXf"fIKTIKRg*.8M4J&a4qB>W$"@-d#B1b#kZ!jOWqlcp0prk&`dC?Q";n'>VZcCg^&42@-dp&fQRSa
%0`?q<QQ*7b`#G`\@eTqM0674_i$'iKKc:hY+V7XFgD0oO:i#74\>?OVqNVd3VFH<4iM=!M`-7HjM$npOHH_EuED$mM@5HmEn.*0b
%>m191i_t%f>Y(!7$pIpd#B9C]LKfWSd,+#+$i1BEOl7K?M^kqJ1!"p8-$lK+XdfQ11Z:+-[`Tr6L%A)<K.@HbiZ7]&_*soS(20NJ
%_"N5=Vr^63#U*;3JcZ_n/X!DaaPp%Fdi/<?MDk:lSH"mS$1M`#rYE!P%'_>[/J'\*SUsfk&'tL^@DR@"A!.;^YEWH$[kbk`bdT!Q
%h5n*'9-8)J[n+b:7\=3N#t?W*iYXFt>T%G\bK8VpN^]CMdFh%Zh#^$270n7gh;T$gXm9f4GQjU+*Wnie18u)Kl/X%k-h9lA#ado]
%F#2W-ZTm38kS?Ke2SjGR[F@K`bCi)`c<XRjfu]u<9ldiR@\)PfGSTt4itfGJ/G;`1+4.'feR5mUZkk4d7W;!mNjL^Z/R*H"s5M<?
%[bI<rG$>5LYT2`4@-Bk(9lSkH9$+V][oJHe2*_5ZC^ZFWca&CE;#s]^U9u9m!cSKZ[0?..As&;2i[k-GHK2Ad&BT["Ziqg(K(Zrn
%$Qedld[ecD-u+@\(>GL,EC*lG!\/3MZc+GGXVu;iV)pNNBj+>*603M@ZUN+PlebZ3Jph[_S&uL(<LAS$-<jM4+A>"opP\P:_./Bs
%BchO7>N@T6hh/l`gYcKH&mK1I\E:e>S#^;32hc,A!@.m(7eQ?bJM$FB?:*fPl\Y=Yd+;ab&d32cY;IID_5MClb/o%1F4VVq"I&8n
%?+X3NT2+\*b#6`Q\JE>(cB!csS*5M`Df,%[eS/eR-u-?"ekYpG:Re_7E\sDY[9,6\aB-MfE(uG^hAL)@S.'jMG),LWC;$k%$L+n=
%C5:hjS?"Pp4k-%'ecm"*4#U*@_dGE%/U7dh-E:YCc$Js1C0fLD[C/Z6`/UT/Om[?8WPuAY6O;kR-,c^/6r@0!irh_dp9csfC0CGh
%lCFO_fT/3S4"Yi@VLHQ0VaVKQOZk+i[;Sn-k,*"^rgAA,(2G*%,]D2>#<7R]V;p(4#Z,irDP:8EQ3,8-4Lo/<]bf;p%(cF[aKKX`
%U[K&>5J6@mSVd`%j/)u`!CJ96BnNB7Qt_[L"*<+SQkk]F%'8B`7>3^[fq>0Y?@R30V1jM)_M:0r_ICO3b@Rn@oZsH(dB[GRJrpgo
%8t\G%OI!O1^#&QuRhp09:`>Qtd"jtD$Q9c+P+?-j1Pp]0KQ+V52)l=&aF>0]Fu%H3Ld`PUBU:YSE$AK4G!^3*G\@[LLD(7VZmZ#c
%gaqhF8.97i88.0c%9JY<:A6Vu?$:J$nO>g&!8^W,#)+'i#s13ND/A)8BL<X7Zbr2/K3*4U1!GW*(8+M/<a7VJN0iIoh:l#rfanAZ
%m-q5Z&C1h6U:Ba=!]F7O7]QN-PFW>fZbqp>2q$C<c&@9rFuU`p(hPMPM[heCbTLb6HVl/\S^,J$I'Z*'"h!W-S43(QW-]4G*8D=+
%PSt]FJ[B<:ZdXbYJo,[W^SP>-S_c[17Q*?a;g,=s)(87XRZ4uHQ"`-9P(I@j:2^:M4L<M!+*X1,km>dGR9`7(5!^q3;VS;JoZ8g\
%@4n$YQ3Y[I).la@K.1gcQsF>P3<gTth`H/2bHf><[l_2Q#al69$?Fh]eU*ciQ>b7LgRQd!e#>*T=;G$NQ$bWr/FJ5ZS8Yd?_&p<m
%AT:KsPmgPnPhrW8nO>!d&0uPA1Z+P!14iEt4NE^aG",*Q$"^$_4M`'X1]GB@$P95gC;hM],9IO<Z(j>ngl4rBF=O(($n7?&lQhW>
%5'j;kG[s)kEqFJ%aHC85c'(S>3+Cr<,!1>MpQB'Lgqemeo;%I*JZ/?]%'glck)iCC=a7'E0FS<A/\#iBSjJR\G,N+.*2Xqc1@.UV
%98!auF'f"!2*EsR4Sa\sfO!t[ZG>&#*pp@CaY0P:FT,CP0\JgVB*o;$VH!J(4SoOF6t\!#J>LXPnlS_&!o(&lA!(%A>I[VPNo2S)
%;9'lSaVJ^<*)"%]BJ7l^P+An7ASsk!:`i^8%1puhZd;dC2\o_X!chArfS\Trb3'_!TO`HP:/M:#=86iP.l9_+r%'g;8]e6[VMtK+
%RX+nKmA8]=`r=^@A(dH3\N_KJ;o]@U0$^qg83>IhitHq_P,2\t<bU%2?_6*]hFt"`RG>kR>[kiu"'`''c'JMLh8sZ&-891qVCj^B
%q/bAE3eKYbSHYUP^e;h3OkRTLPQ4H0VgtLP3Y=Kec-)5EoWHP_g#P=c-p6'OWnW%/(\a-!oT>I?Ki&1PSAYGh`<rQHm(LG*N>1f[
%pQETCKuGPcnag:0ERh][&*KTSnd4`sLpI.QWHmGO,U=%23gd%2+=ZPqBOeO1lj=873pKoNQPV/b;q"AB^ut.&d(F9WgBPQr`pMBS
%Y/o^4X<5ukl6DfX:]OHeFAe6l+p.k(]@?<%UQt=afa#*\oj$ip%m(6&X:$n!G@!1L]-]rt)`#ff"aADg^!sOulu(MPI`YIsAi`I:
%jLC1.SI\ajmc24l"+QN"%ldJmHl+j$(-S>CO:dWsAT;H/<cgnF?f7^>2,\rA2gq\gr5bG,MqSuUMQ]Gh-^o9s\kNp(oqEpj[uYM*
%$q;nWQllg$T*fHVH;)[S5hfnZCI%n'6K7MRq8#590t^dPhQGS!%>8@+"m11A@uZYYmhWnegMfX]"VO7hDuliK+N[Ph/o:ds9OIY\
%q!``lY(A`o%=/9;biePR5*-S&bOdKW>$GL"7=d8L=tb'bp5WRK4Ck9c=:7YFJsm3_>,5[;m0LE[$6#W!>re_PaMNGqZ70gu+]*bM
%@m7P&W[,2WIX+@5`5;>4K9f#,YHl2)Z$e(k7.Eus%n(ad?JN=cSa%O&/Y1Gd>c=fFIDHW([KWUMN#N6LAe*dSZah<j1e;ABI?',(
%Ygkf)nj<F2m\gm2\-C^AO^FmKoVY#aK5bFVB7q[IB-_mMK]:Ar6bk8B/jNG3UDA!!AA8RQXl)b;31Z4nT9l[2i"59X'?-4O78*68
%,D0-3^b`>l\/mQWIRV:TYtcKYZ6,uri],6:$20eE`+L5_K/3oXHFNpi]`RAe=A4bic<NspperNS,lD4oB7Xu2-#Wt.?lZp=L'bNd
%\eB`.ZaJ`lTD5)lWjNC?2`,a;NU^N])CVVAfq]A@,Dqo#!O.kl%S./nLLdD&6m`RM*1EFa"B[DlO2-)d<A`ooRD1-.!@:;d<7b]S
%X5\1/cQ9A'EDlTI7/rqYPp&UCdA[9mAgWF0m+BfN@$)W09QtG3-"X:8W9se@]>PQ=?&[/n'B>3[?Bu?XXts9lPL2P@e:n8C9aKF9
%#NqTuUr'Vf@AgIEMCD*("Qu/9M&aTBT0>((#@K7+65CMjYP?!?([:JCqB8Agf[Ve9Al>^TR4n]tc@FZD&'r<O"@<MaJnu16"1!:]
%P#a6ER$p5._o&C&KT.3q$"2:4+n5[>?p5G5]\4KZaI"F")T5*Q+`I>_XIDikT#Hnf!^VGe3N5SmgcJjLOtnj@M)(W.,5u1YSY@U7
%hP%ISb*`MIMghrjKCoYa3_Yrr#FdQV/TZt2^HL#9&;*k3oq9&d0G#lO!a3-#j^0U-KZY'fanYoCX5gtt6@0.Sg;cYSH?!WJ]@%9e
%C="9,*HTcakE?@k%VO[n`9j_i*F&5tLtN,F;4U]<\mU]'ToEnrJl'%:_2QNgI8WTrcaIfGgR#1*Z4moMq@+N1:]ZmBa6GqsFHn+$
%"!5%?GuA>dSWSn,fs=?aOWoAXmK80(8"]t]-4F?\YbO9H)pT;:+jc`socfeJl.`YR83el&\GESr$4[TZZ41I:%ThRCR2bMDUH8pr
%^+VBI/)E(ZHF#.@F*rU"FO)L=*PpQdc^U5\,a8HF<rDGXIQo^jhAt*bG8OLuW'YIg'U44ZEM^1N6S4(+Hr%_Xq)jqsVM'EnQn!,b
%qc7hmS+:ChTm@,F_B6@D.R)PbB<(R()M:?(:;:4*kF`lr/%AbQ1g>KNTGc?EkOffILPUC=fW(CbL^OKjFf6tH\(*X5!uA?fH3g[p
%!=>Z)rYCf(G.IjEME/GQor>K\HRqq%Ns<6"\KMd41td^.%6c>9Xk*ljMfq/1"7_ON^E3gBn5)Hi&4/VE9hf%ZFE`VB1\N13`kd/+
%g#$#[<9^P>Mmk7tK$A#kW(3d_B#O``o3T3bnU+G=:A3HTr=c_DNYmhtmU:IMEAt$P[H6uf@4KtN`/Tq^M&6LQiTs^-lkaX+jJkLD
%S)emaR+8TeMVo<hDU.n1F?C]QEX5qBN#RP:>)1=@J?+&$5;Xo\6>.>>a!V(@"DN"af83sad,3@=,nR1,lG26]Hii9(J`*(+>7t77
%>N4/J#_MWA&3$N*'1Nfs#)L;g<B*0#1%O`\h:4#Oqdi?2T40l5idc&_QQOpeB+hcuLnJ.s"Qo;.[\S^1duW9nY9.;FQVe<9@RsMb
%Q(*mgnUVd*hRTD.BXG,"S6(R:0RdP'RhKh+X,r[`m&0$Z7k^6;@!26'*<OZf9=$[kN':fUlm?.-=5p?iP<cqLrqPci7sNk:>D+tE
%*Y@?>8Nj%u<6E2//T6uPk1o`._jdXHGJP(Y[3-mLBW)TP5?/c`rSs2B[j!*;Gmai8\sr]\W([:G:/c"U0:P;[K,#T#3$9G0,;tpa
%"QV>"R`%Xk4?Op=.#SLZB\a\YiS77rf:gnr8ih\G$:Y?c_k@K?OjE-ZC.V[6iX02RHP2_i]C#*XMn4:g$tm1(KMRM,XG;(h*".g*
%L.8S<S_OjoVR!9&&?@.0*1`1u0H`'0.7Q'm-;o^DLLdrc-\/sfd%"PS?LMdSYrIq`QegDWan'qZ.OJO)P!?;J8>>Lm\7+oP+=-`.
%Y4'@#Y6N?ROEX#93$UI%`IeJ^`l(nK>>5#$6=bp`o9n(eX[U*@m*H4*ME'T<5-jD-`#qPE-hIrq:2N6,Euuh9LZRYpP2r\0P%aZ(
%d0RRHf<.mhmmK8KcP<,`>%J<86eqVO<s5`^S&Psjl,4fmM!>1#8r]IC5_W;F[9g@NHZmf(cZ^%`T*h6)I_,TY`7;?q):Ifl0fCC.
%b#<"6I`F<*]nbC^es$1j`45I5Bnt>0Ecu(N4,mIaU-\]co`@8B_?F34Is#M>>TC28X*6kPXFrm@`<HcgKO!XW3JFhuBa!,r5tJfR
%aMqM]^`[%X,6]r2!Q9r8h2Wc;Sl\J:c33AkCg\>U!ffr2-*E4.%`3adh,2.40U7MD/Ct\$-g8VUG6GqtTB]7$>UJ;7="W:eSp+$6
%oa.lo/GKo)>8bTN;1a<0,U13?Z\I9<XuLtrca`JBf>D2=BKS^b2)HD_"f?tijV*rW`<&-teUpbt$5eLfAi.YkoQ!0DHM3$6VuZrp
%$@eHh'1]<u3#\)b^NCq2`HbBRK/;]UF;2MSeu=i^a@Lolh'=1bZ^J%4`8e/t!R#!pk?16r#/RAA3.Os?CPX@qc/HKR1tf^/5_'ME
%OfWXG8-9Q8`Z'1Q\=SfG*T3)/Q^/lsA=7C@9TSIU]bn(o52Ji>5#bF?\'<:tN[DcQ@OE6$!"jT)q)]g-KqstFN3N"!AGm^J'8AFk
%/CWU-r19#>?;]aMlZjc7>ECU<aSgW7JjaGLLI58off^DIZ'dS/3`.Rk_RZC11<Gk4Ic_6P6j0uG,ViI\b7<*^SV"<XaB8/&jm4?t
%p$O;le4L!5jA=N(RESEfE'4GNM$-\[Wlla*#(-`MO\@j-_-"1n+Rr^'j8C+bB7hnd]%!Q5"1'.],)/ugc=_n/AgL%ZmAq\S$YVSa
%r?_8"ZbIrX9C0iK'Ert(,WVW]*%:0%#CXID_9+]Z@.;^t\12+FcC#.3?ts)Lig&\)9RUqu?llIG*LZX=@Ufq-O/'hli1$^;ie#V;
%(g3H1C.EePEct2<-Fj[8_eWYr!mYqm2c2V`+TP$Wg<'rn%MM4Ac5N5+&/"O1OFKe%MWOW5;Qt:@4H&npi4\\dF(e&J[56PacKp^A
%R:YH:j1>qXbnMN_G%@Ha@p6f:7oL3(s.[]k,VP3j,D4!^`49.Cj!@]Z:MIn[8ndW`,-%)[7]V&d3[BrRQT`oV!8ME5^ge\rf./b"
%p>/3M"u4EULO9PEpj!)A!Knf>^l!:r!:-lB]SD36MnAhf'_S!cDn:Td7dubq67/c0nG)Ji>0r_@Gc$IXZe[*#NcuSI4")PR-M,q!
%8iDVF@Tb0Zpmk),]"cC974**V[d/:r"rt=%kAgbV15rL&XhO%:jQ=sb<-U8W$H.V(:e^."d&AGH<lFi$M>$/F%R@lSj[a&4:Ba&q
%872GgOtB>%Y0/,l@)L'>0gL9$AJ>c?.c\AB"60<jO'>O]%GmMb@$sO.d4K"BIFWqh#bK;$#=2#nD2PkF_H5:K=J!gU5+2XJfnArn
%[I%*@"3S5]g9JS$"A'D^e5E!I+6k7OLqT4D_k<sKW.`eTG"&hnP+Jlt=load37fg:>%g)c\KH$XHa$^_<p$`dS?qBTXS0B](IKak
%Ck'mH;?;qr\Ns8LR+Z-]C7Yk*JB;nU6#g]R-0J9t;\(!ZWAUZd4VH"ZEqC]RhF3[[D+A6N_/_h#MC&dT3;XZB\0_@o/p[#2kN4a(
%.'%r=$AR>&,pXa0]BAV-*L(Z&@NJ's!2a&FAVEEW]OpTp'#EM4"/#:\6?AepM'K/b1F:Y(3crc=(NFFKYR]1MPM=0ELVZ<\6fBH%
%'SJl!oH'kQZMt><N33LZfB10o_N+$l7WP*hiGEl`iI]*U``VDd7s9C`b=oER.,W_n8>&@r_gZTkE2Y^c.U(-e9fMUM^_Xkk_4Rl:
%QfI4hpOlHNT3:$jPTbUNYX4$#%uIA!J:Ncs5Be))?4\#''rB-eU(i-0*RKKW>7_01#bkOt$VAZc80U(r!0suI!O:;F],+["!E\Qs
%,I;'brpGQUW#s_5is0Nd,?uMfoanmtCU6H`hRj'PQEtk.40BpU(][G`;+N;>,>d+lG?a@V\QJR(j&h4(ZHsHr1:b3XY-Y07p<+NK
%Y#4Jp-&fub`e@>rKg$dtF5sBbg^EGE@^9iWEn!^fAkA=V,/h9L=e(j8GM5X,V_8XZl!9Yg[I1c$:fuXQ+t<8.%&tR75X.PubIH#!
%HR:)u)/_`Kj?Wpb<%8<]D'joMa[!F+4c1Gj6]'\RMpVe\?q(DuU.q6`Bd*,j^0[c?.4E=K3"a`?[!OsBpi'0;Z7!$Q;q`&3.*R(%
%8$1uu<<IqreP/np/u/nI+X>#+$r#Y=7I(euSqgq`83.WLfnB,i9IoFlLM0VRh-fYmp]04kRX%\p_]qG)/jG_[4rf38[Hgp%e142t
%8\#o-*=S#hS(pei$_0lcn3ckoOBck-?'[)%CC6lBBf?-)?;@#6bA;9MadY/9GV0,.hpG^o8l2&&)\WptMV)n*Y:M;^RD2,5S-fB3
%f"Ca"1B"S.A<-p"aL"cZ5uN:LJV3]CY&ns(hQ<#*ddth!:r\K<8@iQ#OQ]Q0iTb1#PI+in*%T-3$#OZOln*4Ji`*t]N[lMqdSOKd
%&Nn"GOH6H5C<Sa^'I>F^+lNS'`(O3pd>=]L+'G+N<ui8]M&o":e)7/mhu^iF[N\(W$G$fH0Z2/fPbM7.<<11uh4X`k?B.inK:1gE
%B4eHbfg=$h.sRgC%h"qA3Y9^Y9i`D4o25mf:>04h?%LAiMQ*Y>7h$V\jp:GS$OLYgmSbd#/[aoi@9l/cH=llM,IfC7&fJ?%ET$7H
%2'U%<6sdp44P*]Pe^tH9OeHG+L?BfpZW>*t_NEp6An[TOa5d[cnBOXJKVs'?#bGgO-F<#[8Rf1U$1k(1rAL?X:6HNlBP^PM4R1c/
%Ls(g$,rhU,IF0;9H5t?)0@G@VJAV-ZN]$OC/[^'u)J015a]ZMF[_\h,Z'*)^nSaA5VXAu/iXnq_s$O(4>lhZiRluQKc#F2#SXVrT
%)DWGbajGp6<a]pJM2UEYE.d17@\INOg2<&8i[%>n;_Bh47)$;#!,Qe8\onV"<X#u=MIQHR>_@hA'Io"F2s=Tkl,P*/.O65(\<C`?
%nH#B^^K%gs!Y3(Y>j&GJ;&qfe2..Fe6\Uo6G8X1-KMV1Z9eN#@\L:m(!rs;:C=s!V"M#uA4B*"N`FE.@(pgCQBqhLF/u]qYj3MRT
%YJA(%bpVL)`S?`tT"ufpX,%@)h*;R*)9Ka;\>pT3H%`dcM/bAM43#<#A'Fua.fGXg(P-X%eO"_96a7t!:r5E88&`>eW:l(-PW6G-
%JBel9GG0I12>XrghiooZ*7(*:Cs?M`CjnrjHq;9N4,Esg'c:Fl[#S_@O?gA99k5V:3l?W+]K8[7HZD-93SoL08ukDX4RZjW`=t1q
%jKC)]?ta_KV%rI!XL\Z*Zu\\o'?S[W`1:9l'!52af?C8#C_.\K<"o3mP.FEGUo5\oE?&;:>'kSfKSrSe$#Q\(.dU[!*QP]m7XmDY
%$(+^^RK.:6:_aJ9DcW'shgm"iar:[15<P*dfgA<^G+3T^Wm5dl7TH1=%aJ<OLW:gRR,i,06-Q14<e!kLJqLG]Y^.L=%*=p4*+CI-
%Y*)nKkn&9=<eUW@&a3=`:NCpL6%R?l@MBWT6NIFLe#k]6!rkS;)"(_bQ3tR3%j0ZaR/'I2qhA0f6)#^/7=;rK87=f?\]ho81c9<u
%T"?8(213U]?Og.+p$kHV7:I$H=cpQC^;d)P;K7j?J(3`-0]ASM!U=!'bSg[Pk5Z/?mF=a/hl-jW.QI!T_M;[46qAc^&@Et0)Y+r$
%h+94JDG>pJp$B:3W`I8)rJB!GlLMk#^nlrLQ7"a$BR#AIMJa]ci<&8DJ7Z$Z&\)9SB8=Y''jP0$Je7`P/-bV]NdcaXdUPioqRm/+
%jl`(60L>Fg2kp!Wo\a1RFNMPtFqqUXm+Yd=X!(S0'OB*8A6/gr9b[^i!]/do_?7Et]-8riZ!HR>+[<c*RM]9DW?>(6g\QSb=OQ;J
%R$dd/9osMa;#K47<)o2JqbT076B_WYm1)pPE(B%Q\A%/t]#@l^X4dZ92Y/J^TLfPM15\:rX\BX9h^CK?T5!dQ<]KG`Q[g;lk&qq+
%d,t^&J>)7V\p'J"&B2JBLX0;d`6ZlO[]Hc5/<:Z3P)D,;iY0LW/Zc_J/fRq#WJ]^Yk2M.U-)h2j$+?ZW9no;=%-3p+Ca-<#$kfu:
%*<!2oPUkb>^4\-1]L<Ni5YUd@)1.C<.4e2*)rg4gY-X>p`[2;2JB[U'713c&LrX`,ehaQ+"4KrmH=9ln&;hSIoOWiVlBt[TH:)R.
%-,"U*MY`"0$g`cPb3F/>)M^\sTKOLPc"gBoDmN9AS[C`.4/5TtnrKKC$h?mM2I_W1);C7_@FNc.r7k)5s/^C-B,Fc@oRU6$;XFrS
%@Jq5b>cMIZkXo;)@6jTqD%:l<f'VEB%<dO6dc\<'Zs8c*1TL&b7u&.W;b[b2U804NmmT[eCS&>rG@i((e-?IL2u1ebR;jW;]-XPD
%%#cj"'VPjhEccVjK<:N=?2d9JMPZ&Z=o4-*6"d`1c-"On<t(8Shj@(@4EU:=*_IV3MGs*lYGsEF]rm8/Y7os=mLNKk`"C"_*]1qJ
%B-[VQiM`TH>;i.0Ye;;26.njmFcT$G-(*1b'8#!m7uG.rOmM3:.WqbEK`8mJh).d9<q^1*+uog1RVFL4WfH%ch#s3=01C8VP(2=0
%4(7[F&Eb'W<2gIc%o>!UF>u*;R(H4_Yn'ie*]1N=^+?TjE+1m2Hq(p9W0.]%4S'.2_"&%8Ynlf;8dW6dF%A`.8_,#$G>cDg=?J;s
%+;c.kA;l]7U=g$nK6,,#,<eG:Ik!tA0EBXZ=q\im[tYg^,D]WV;A&@E(P3odl"PgI_N\;XjZOl\\f/u0/9XDsM<h6G,0K)d,2t:#
%rQ*(]RD"541*m3ciafDs:oD63]K%3,@Ln:nW$i@R(VaE7K5=:]E]?epXdb.,7QZI>+Tp!$P!H+&()#&WT\1U'#p-*-^Fil*B8U8@
%+rPrue<[^QBMo-%$41*;RZ+CSQelXr;.GB!1/0c*[;lJt`uqWoosu#C*Fm,W:k56t<Y[_!@'?&XMI]8X(R(G=].)le!'pWL55/7o
%0\sO.94_*,>PuR>(>M`)TKp<%mp=/^`*@,Rf!]BN@8!Bj'jfAJAR]bs1@#8eid]Nl!DOm;E:4&fD:KD&eZN1'.*LIRo+nO,bXuKn
%8cg'".bXRCAKn=bSIVi449Bgs^qP8BZ]$cTX:eZ%C+R#kNEp,L[C@e;9u'do=k07%%O>m![s.?W-O5'GS.DcGAuSMRWRs"]P,-EG
%d=<W++[Q<d@E_8sd?u@n0E_#FG)-uJe8pQOOpW_WRY:M_%3ASWc8857jrfKYL>Wlq8-)bNeX)62<Q3m,O*Bc;G!+M?+#J7:Q3@=(
%/.Ysg,s@BDfVhE`n)mZuT.k:jMOB[0>$dm3X"tGEUqE6=66L!u+Pf:&)o/IfGh"415)WK'@s$(6E=KFj$eK@"!(K&$'T-WL0h@Rd
%7gm5`)CsZc%cX@jlZlpT(5d(69Q(3FON2XFE)*Y4KIiZ47C;iq"'ld<j?C0X4`+V)gPlKuH$_M54GsT(dNk-<<lJ*/>FZ]%6V(.T
%IXD!k"SjfB>qVBL\N$`ii)m-NSrdU?QC=2[L..3NP@&oNIPO.o-_[[JLH,J=V'338BOAL);%f-t_o9uC>p&1C,c*V[=6OO3e!&YS
%\&]g+5iZpRj[MHHd:]oZ,1<SQ^6Xp<FEjmFQiJ2%>I`hiHBFkW:#/\&;r#(G*,(uj'SV;'GC4uahYggsM(#!n#.j(hfnZN*&4a)B
%i#cK*'KComD$"`QQ%XS6G$8t[BFS6B"DP0j3[,O+"[q0@NoXu2*.(RBHcKq;q%B">Ef;O\&G&-Y+Oc;Z"\Bj1A3:B^k!<tr8N`u\
%6dE=m;c:__N.I)V<TQk@2&W!98W#=h3K]?lZ4LFo!1<*"i/rT#ikRqSqqe/qeP!1C"BdT=ChKWRLdd^he`oTlE'L]ur\/[[]JND)
%DT\<C^>F=\YlV,>-kc`?rQqd<8CmOK:'\gIFrtA[L;Q_O^jjd3M&ug`3N?+qG<cFis3G^>P^J8thq;K_3E4JcrH[(UK>C=0?B%VN
%KbAJVl8;BddleEslC+/n`nlPQr6W7D5g6Gf&d^8+5Ta1(_M9?W(q"H7AX"L!<$l+b\:Tq'M[cV2.lZUZc\+$oIn4P`U`IA4W8ph`
%ed!+__mc>kI9LJ[&c%s>XQsLMP140i.mVLMMeVi,?%3N=9a0X"`!Oik03[!>j$a8m)#4#./r,<+*r\hu#a>[HMAPa)FM_"M<msO4
%oG4'F"Ii-ZbV.-,Qu[,Z!-7L:ApGZ1qWoV*j2)ol",4gL.Ba:i(BjnRF:pI5SC.s-mAF-'[UBlMKlmV7SAd2o1ODlG>;)FNN49%&
%1!__A7&\.DVSdFY0.-E;mRq1.Y6]#Ce)[P.3BjI#\hKnt$K3#0WlLG4G[M6!k)4_m-nVd3=h,Qh0g,9N*3kSMm,O3C4un7pD!"!'
%Z`7f>qJ#Pn%B#/Yj>)m]LVH.)S/lV/"nl*eTB_]>^(c_HHID(q5H#i`,slA\VI`&LOM#C9WrX]<l]&3+c$l10U.:uDl5h<s+oI]M
%f\JcJ+n&f]+=@DsTE[[)Bn9*3ca%+Sc8I=^NrsAoe\O.S;5p/#jUn"`W&<kPKu7fY97UdiCQp/\%rMat?('[?W"V9.96]8-KiosT
%Xka"I/ChVHWh*#(O_`DYD^I/o<PR,(o$T[r8V%dU%)l]RaPhM$!!_R6i1q-&6$lUacik_"n/qRt7PBqej]^HEH_.$ZTf-P2+4m"f
%EiSc9+=9@V"9\k:95G@k3h_0nM2Qdqp&.k9?_XA+>$'sOXApI4<^0YQk;j@*aH=.V9%=.]g'GMPlG2[)/NOSS/X:ks7m84PQf6+4
%BgiA^9_I>t5#_u)U2EupW@!JRBc$HV"-E7tdG`k(J9tei1<P#i1$%;Jd1N.F?t6[FMJ#'(G)I3G_[V9&UAhg+%KT`&*FiOl'kRjs
%-8,K'Z'l]T'9(&DQal)skC`KljH[Zcb`bcIO;:[VW6dYLQg>V/=98W/U#]tT[AF7P,CZucQ&Cd>gt&5;Ron[Y<4Pba>iK9Jf!0*K
%h+HjG05F[f)(591fmC'e<0f(DZ`hQRh>r:A"<mnV&fR,`1a7M50n;M37PUESp:9tCqX9?VC$U5!2X=GC^1hAh^T3sbj;YM1jmFiG
%+b_]G:-_CIA_*1-&`L("[=#+&_u..WGA\1eNCI9D68oNCZA0FKC\pr#;<aZJB)uZf#k&+?YI-'llBq7?!ZkSrK',j:/sfs*SV^X.
%ct-;?nJ2g1,#Pon#/VT.'pilY[\=%)$)>E-@,K[j0o@GSkpl>t(AuDgV?"FR.*I@4b(q7C--Uo@=_7>sUQ[ius3ultV(rLWKP70q
%CjDtIrZrBb(nsmm86VpA</%2/<Jb(UY+VO=ZPP#@>SRd#EO:9=*>X@8#2q\+@JE1EbrS2M-#>XL=l.\n1B?VJPkOVoZnOXYU\cC6
%=MtZA\tICQaW(m[mn\P%Bagr\c9`a6%1^*<SNXbDL0dOc(?>m*N%=,S.PMtcgm2Y80B&n8bb1"H>9QF?NT">8&ANbTJ_mjeJK:/5
%pi/L@#!cYO67ftmm9o-8WeIBT@NMsURs0[*?]Yf=4P2U?s$C2uBM>[A'"F`:?nUj]@1NUPe==W9@L=_`n9WR*"e,O`6^Va"eYU<Q
%.O-hX._f(`FYK<scQ0:P_u%>+N(IMc&S?n9EBG]A=M57J+p%"7@Rn-(H5[VqG`KmER%1/(is@4\Sg$_t9Ljumrsm`["O1JY0Q)<s
%YE&$\i$sU>TZU\*RV4p1=#m>eOs0#j;fJ5VJAS/2!&BLsJKD&=dpXReJ43aU)(DgX@op%q<u',K_B.gJUHpX`f+=($U'=_u70X0c
%E.$UF"s(,j$Vs(C1Erqp6o@5(;2p5@NN3m?mEJ?HXiiCg<"7Z@l,]e$).k-ll>$J.f$$Ul.CoXqe6n.cMPn"HU/>i6lL+jOg5']Q
%1=B,/:4gVb^nJQk>T0*s,$m*7\e)\lJV5a,MA=-f;1BF<-/]UP\-\NC:9q&19UOCu=FlO-h[b*@V!k&;Wl@j@k*+;?!"Lk#NCK%-
%-PF)lRKZDp?l$I^P&1H;,2*:\#$i,V*2,230M<R$Ku.@Xm[VDPbih5;@77H=Zo<tYOVmjGTg_hO;2Sa&1ZJRNl/4**DsPfL6Nf/4
%0OGZT+_')ua=lO.T0uNVP0r#';_U0=Y1k]6D#(\BZZu_6T8#j&$rs+.K0YCW7Tkj,.:rpfWIP0sN*42K0PdA-1#*CQ.Y.QZaUV*T
%98^U%[:Vn\IIJokACiM&:njhDEKd-9(=];U$A0_r8To(YL.sFA)$U1>*2*P9K`n(6&1iZ_5*#@<0aA.+,9KtR/m8TF;5!l^cnHIs
%L5T(TO$X?cD*^-D;4qg9(fZ#udK6H\HK.Y,*o86CQG4('GOS-CfiGE"TWD+5P#rtY)M84<jpoD8%1u'c!R6YqD'SZg(.pU8,0Z&u
%$eD)I_ueHa-R`M,AC)[I+sQ.l9F5:mQ;*DG"EnVrU6Q9e!5]N>p?7#s4ZBM<&qQ0XO`\`.dHJs-B]qY!+H&)'dIK7`<E&%reL:"k
%/.BGTR=^:&&Q#VbM\7cgH6IT7W7:uJLf5i=2QJ.d\r/0Rk1YUUThOk0F<BFROr/e.DLFkr=Rr?tGr)&ff6HF?El*Yh#O<<39q!n[
%0V"%J],Y`oU]qM<b<2lR'58+k%d\Z@G"+4l!?'ja%Zi]hVQ+&Sa8s>O?Sc;'bX('[8"+V54bR9AjsYkL,@<r<4XS&d&u]JQB:._#
%!Y*+7K-.a40mVk1]b+'#J"*fo:<;SmE\KGGiK_m8iDsAE9_T,,?I!I.1>1b$FpMQ_b9P5deVPof;H_d5C?t([cG8PWIRKihK3JgJ
%-ueu@\`Jr-^W;;cDr?((6(g4hDL$oG9q0dU0I'+j:51?epm,a:Q@f]$_@O.2*ISbKo^ECY]GU,LTl*UPWBfI@TU]-pOlL\^c]R>Q
%>p648`,`MI:JrcP3S^V^L,lCVs,rqWE_Oq=McC8U5`uOGQ,BNH"3NnZQPcgO"I4UB.kD&DW#V$lKomB,68+p'7g'2u/i1G\8L^!+
%k1=3XPf"M2@HPO`RkKkSn[;@k.#2Y%7%;D`_f2rK)4(DCR+*Z*49>P/]VL`ec3+#=4?7GR)<:pg8<BLLmof!nLng`#d>Ue[?G7Tm
%?pJ@)-,T0YFu$VF/2&?;SEN=bl=P(Y;-T,17GPbCK:\blTJQH4K0DWT,8<`[Il"aD`Knk19SX;'iT3$)3KRKUpJ3krjJpE6LcLJ8
%3#\G7Rl#/a#N"\,J<=Us]a*;&O^kIuR)M[j+W2p<Tr:Nfloi;Tk:p-#GXi#CMDH#.UsL>$#E)hPa]m[EZ(S"JfVLeP7?.]()-1mA
%nmnUlEtgXuiCHB"-ur.Pn-IN0,1kIApEk\9mSfhT3/APm1I8XE"%5nJ&_kEHiK-A.(_fI4$aFqP#DjF`&`CPmjET(1XP+bkp/hQT
%>[t!d'1:(6L>inf#XjfBDJq;O@4QnIE<8.%b"MfGVK+=O4+A5JnIV#Ha2(0<YS_W7^nE_#Vc'"8h/Fr*[0&/W38Ak?'Na^;XXWVD
%_a,=KKc(Dc3-\\n.$Va4N^Eq*qYiLZj"e6%bG:.k)OJYbFkhp0G<j1pk#BKrj+&dKWtf9-"29Fpb@*o$9AK$WM;o5Do:!U;8Dq!M
%MZsM95r>='n](B9YT,T^/t*VNCT!0PObgds@)5emZf>8M)@'2*N\:WP*)<4^DLn"k_.Cl]1@/=IHIV6<N(8,S)s</MQl4&bN'g"3
%`#MK'auGoJ6j2pP:R4"KJ'beX(h4Nu'[F3IND0+*%!c97EBK2Gkr_>jAW-^X.u90<%]U]G'uu6MGp\N.@WZT$mZ:64J;]>k'e2XX
%>hEY$U;c$2Ng@qUH)?41JDoT"YW0Q%WUui!Ig*=j4]c2sE=`:m%<YLd3Cq/CMW5SSa?o+[Jm3[0ks1,Yc@e;e:)&KPTutG:iHUVt
%8/gKE_taZM+.e?%=rKQG7%-*MDV,7/LD(cBrJ%Ys,?.i%8`F\3Ln6.-OLW6Q!%'QC8nI1CK9R?aCiBb+/hqmFaUj41d$%1W3$_<m
%JXmnnrY-!_FJC>j<#:PcS0)Vpf^[o_(t>@:9AJOKiSfqf?'(TCE/@po`mNa1-^P_N)i]sm]+!'f%`aqPUkLRA39ZV!d"l,J&\b?o
%:9^\U:b#&DR,Pj>5XkfFL.`,%C??Xn6RptXdA\)u"@fsf,:fiiF:5QciCIr#)+#=D&n/_.NX?#O'*V%]8`=VrN()p&n-DMcF&$sJ
%i:)"R-9T0DFZ:Ze:?*bZQU/L+HnTXs_SJ)0EPWV,*b#'5-6YLqg$oP;GaQ+XE'QBf:ogkg#Pm;&@kI;.YjgQp7,&">3=<Ko=#HF_
%E-R=YY#b$3N-Cct*"3<(,oHg.(`+/][`2dZ9e89n"@R]_"6'@*!)q2>QK]^P:+!Kp%c;M?#W5VEmdTF](W)<OY,\]<_,87:/0MIH
%@i-X)4N,MSSMY:$TkhK[6gRLjA:]Ng0shSt*hq:TMZb(fiRd(>K,>pD;8?V0UnM$%!Zo1IH`:@:%K)13dpr[b>XbDHFh"=Pn.:MD
%2$)VR44&!<^GU0Samn8e!*SZ,p_3TZ*4ro*4PNU&2eHRl(ja,n;30WYn2E-/RbVhL`mn;GD_o3qrAIS7oNPhF%Z^*LCS[V*$+-'4
%Zh0^>Qp>Ki^T@VXn(UOs\8Tb'Ic[qT4tI_YD[kM(+s,&+#%\0*i]-3bKQ^/2oX5`Qi>pERN2"$8c64B8W:(;/dtZBre9;1lR-:-Y
%=Pj-=pLEE$#5\VQ);TrdY\t(OA-N72:2:9F@A:J)c4>,\^-QDP6P9n*ekjA_N`%Qdd'OAX$t6jnjs\09h?$"hfKIfUndR>HP_nFn
%I"MPjeK.K]%O%=6]3Br"C0!]'!!hRHN6kGea@DR7BJ4p^>DD@+5Z`7ZiEKj2"r$JH(28#JanLP/N;>cln_W3TK&1.1mN!(r!BGp^
%"&5>tHeR00,/8npUV0*>;7&pgL'/3n*FNfJ*DUXX2n0C>gtMimN$W'\F&9P9QD>RpN(JYAo.$jq`^(eg=&qIZVRMu9Ol#$$JK`Sa
%l&G)KUc'_Q!YI0ZP$**g'kW#!-I3WOTSh^dH&&qaOlO*j:BKRs3R&Km^mo)>0Mc6PX+J=]%VonNi$`Nm/^I2_#!Y.R^c9CSU-k"R
%cO&FCA]!^n5i/H3KPd\Dk:LXPXI7uHH!@6Vj=P)i;U7A[DZk&Q</60a_$KEJDgL6&C14d&`=Kj%3QE*;)_mAi_=<8jMj)BGGXFqm
%cK#s`k]_>aS"8T!W>K$YC#!g;,KlK\7"Fg;Z8femL>bUi.cu@=^".mG]^]p*Z(aTD'YZo)CJBaHpi;63AOqg$kWfl[0sVS7)\Er)
%\\^)XkSK*]7i^QKHmFDsa__NtOA(MV%-*<f`=Ca<>aWU*pJ-T)HIa4iQr1NDVaf39MrK_!"GT+LiV=UJ!5hes`>cL.&UhhNhV^1X
%)3GDd2`g>)1c(nO$OBqU0FC;>L&jma`"%Y`3bsY2"n@<MKLM7>Di1!@BL<>L6"%07R1O<+Q_K8&*9)sLcY2Qd:qRs>U-:TV)h$h0
%50YM4R"/]'Jap`-0s$+>]J0Qu'ILg=;UF(b`-=Yg&@Kb3hV`mDiIWDs)a1.h.+O@J`nQjU[%c+Q0T4=79#gB*.gPWWm2U$ubFuJ6
%A%X[U3pi@MDn&u5?MS;fG\[qQlt-ZEbb[iG_Ah@,#t"]2NPigt^DkFCBP-B4Dl<t'X#UdK&-R]NJePdSJWWYe^`27Q%")s`]><o-
%YJ=]HDK*al6/E%-NF"YSHCLd#mtM5,0nu+6]-2ar;&QtbSr5;8[tX5SUS($$<`!3kX!9Z4E,[aB%Sn7MG&TB@>@aW\oM@*W/c[]L
%h%0`@9;9H5maf63*fc@(_59`-\;].$GK%`^LB[("e1`+aUKmt.6VYl@fo:3s1UrK;lk[rf6D.b%lma.gU#j@5]$!Y:TZ0<A;q>9B
%h+NZ-gEDl7;3<8f"lL$'ju\[\OA+]O)6k+oi3FD!m)B1RqR249R#DV[SCig.^rm$DYo?U)SZ!$-2jh$N;DO*b(qtQ_"&A3;.P\fF
%S_/oV,NtN>OkgS&6+LYKfo:tZ,>RXMDG4)u-P\L\#RYY"jihTNi'=!R_<f/q)ADj>`<:l`:iU)+VU.snmEBHiWhh=JN7j1,6m;Mi
%6b?e(U5gK/BK((?Ks,N12eJ9k>a4&3c]40YghmgTkTuRSgMQfIEbmZ[6l:=+U38mRF^/M-DG7j-)c#e?'RHOA*SZQ#4piYJF4Mh%
%]]7X^1gK!ckJ289>(nR[*8:oO&UG/1Yhb[5!=X-j2bcah,6mSUQdL=i$LWWOHN/^%gl7ZTTQ^PEG>lJ3TtD7h9!L)E(:]jjr[>*G
%7qi*)R)oCLgl6Uia)"u<DKJ*UlOIsId6jI"&]X4X'KR&sghoetLN=(c$S'Xpf>Mjm2_"C8NpW]=ruqoLAVN]7:h3W3d-q5,c0rSo
%U\mYCrf#S@bsn6I3ObKH79E*^c,C!J,;e7Zj"T[&g\s1AS!lr[7QW?8h1Bnm%E!?f6VBCT@CsoHUN+qCoheUe.a;sL2[YK8XIUlS
%Yk_`6YCkR=$3Z@6jgQ=_k!T;\&_i;T4+SD1>M*i#/CUX[(q(@f**Pa)CptPW/!TGRD@@IOcQJ88`qpmX?PC>#UZdb_)E=tWR#Ia`
%a*,prOCVe3heETYN<0mX&<CNZ\_V3=8YZYR[p)+&#i;])V*X#l,#?P$mD`ZC,ElYZgRp1lSD+K%eEu,/m=o.SAO$^IKaP((-qnM;
%9u01U41?.m8hV4Fgho(rV8a%#m=liSN_$OUh0:3&+^1Di%?Lg"7lcYMej"TnB7[\2i(+B7=XoN?BE/pfG0:I=VIZTJ6Y_E[^2WOl
%":?_ib\fFM\[#F#J]uDd9ObKTQR8:uAumL1Y?PTTV44u45h:XVFWG=/E!s9ga*1H"94A^4nl/V_ET/=GgIuRj\uerOl;lT`D^)[l
%O$uFgm&4ej@aQ902ThII3SjUO#Gp0KUl91[AtHB"d1%?2;=Z[Qh8h*ZS4u+1"VWi[P8qpY$1sZQ4.dI`UBdiYcOFg5(_D_j<^U]e
%46YH,^H@Ln\Uf?"YDQk,DIC1T+K-=*NA0K#[GR[+"r#@@aM?Sg_"a1</iP'8[,b>,8;OJu"["15K/*[U>>T2`A3'YJ)(?,/nB?tM
%\KM"0$lqlVRE7!,OW/,<#UAM#DM?DG)iu##F\!J74DpSET?M<1!,9E.#7$5-;]3Oo>m9.H]FL=8\4H`ZX#X#31=lpOM&Yfqo\MLG
%`\:9N%LtG/VW&>?%)WO0nC.f\.,<1\Gb(T3_Mo@bCRW6#Q?al87rUhH0]L/>i5T6BU<*Gkd+#QDE;ha@TO;]YDf\1:8`.Odb(sNC
%\*`Xhf\>Ntc5aO"n3\bPfeun:#C%1aPr-dSEOQ[+=+j/o<r#1P%dLJP1REGERmo8(PIV.jLm$aCDBiJP#=.7:'&d9Y%(NE[<u2*[
%>NLZZcJ+)X%Qkoq\8B$=j0mp>D/1;,E9+6?d(Ag-S[#WJ^E'7i/!Z7*JWI]eTuI'jPo4K[Qu.iSV`86,FAc%JTckTC^X'&9Zma[j
%9Q_Iqe3dRda[XrQ%?&]AXXg!Z*=HRgS?`SQMTCV0oNDL@UFBUVAK1>G\pJD=[ME<0"qK;j`<_6RK<\-#M22q2Z&Jq)7coYH6m/Fu
%Li(,VJA@"akDX7g+K,]M:@FD]phfC.`]!N?`eH1e2@^6[0BA(/9VJOq4(B5u$0ARf`c[@Tl%PIgZ2I^D8t&Z.04\mooatVA%`UCR
%UE9\QCf@BF=L!\9BPjQSIb5OmBF[DM-I17u?=r)&N,=)RicoGc[\4"@i$Cm0>P^'ECt"fTZ.gNT,I#7ZMG;#IVI0iYdlJt"g"0pY
%AS<"rYmi.H'$CR8(g`-DMM&,B25Le+S?NHtOA`>C@2f>9l4N2%Cg5o&ku7]$'bu3nfVVUYPoc&jKPapK,AcE5c?RXT$/:Pn%W2cl
%2UX?W2<TL,!U8bU3^D'ui$aPbNWZKp".8pNEPOJY(X`Rt#2"ZJVLdJ3^c$l2+ZkYs[NT7B6LIu9\jilBEoOLC4cWkYJ/SM\i$(8>
%@T,gnC5rD!NTMHjbW/rJbt$um_<K[@+q;GtBrXRn7'BR;(C$+F\i,#$hF;=ZCK$.)L_b]!hh=DHe7djL23h[uD1$1+-:0d/a(q^_
%<M3't2?jtSPbN$2[GdPrH;ob@&bpn9@21/*.kD7[_:=9.>VnHA>N%m)S>r^\=_*;&K4[M)JnNXMKsQLo;B(.?\B?phg'YH#bQMZ2
%$BH<B4Dj#]TaAepdt[aM<#-@3Vp+B#&RncTkV[m\;1"$<V@>pM`)UcD[N+GL$c^UaL)N4R[Rf,XH(tlPBu>:6'Q'6[d5iE(LdGN`
%D=jYiDaal7^h?TD7O1Cd&f*eQHmm@Ma9gR>>_k9S%a^5TQTYR<)\I-0og6Tl:4P"UWm'_\&V[ea3U,5Tks`LA)*Al9qD%]5Za1n3
%'>f=G#4EgjZ>ahBhX/>*M/j\GSKgMOC^<h6O:)9;Q7+PF'=1!*_B<%f0H3o(!#UX/#<+0?b]2c&3+>bUMk-.cZ1&D?Q7]AbQYhd,
%D:;)!2Qp?ETPW+:;"8+eD")hg1JS0%)_+/BTOO.%M;PAZ+k[E67W5lD1U8;:Vr3MM:]U]]HY&E'J.g6Gfa6?9e"Bis"0u?Z;A_,-
%>uN$bK]hE+K>`i&2fh)>'G!\nVdk?LQAPeZ)]W)B=rq<dCD+C0OeK$;RJ?m<dFdA%ND@-VN"%a?Zt"&/2A.g`4@-BFT*9<mi`L#V
%SNiK@Ce3KVZ`)N$^4I%.:;u?c+=7dAr6is_k[7l#$GR"%0sNTr3TWeJN>paA6u4jAU#G":GmM2W%GXYs25`.?A'-!)@ksK83"]@[
%1bj%eA:eEHiF!WrCe3+gP/*44Lu1PC#Y/>3k05do,e!*"N/7um'T9qufRgous-uc!jG[L(E@*RbIn(@-M;BnH"GfTZLl%,N+po<[
%M2c/n\D;-Sp01,;1)p4'.Q3)&+a,B?"i]%L,ZL.%Cu>`[mE;#U%2+E2&D<@j'V#EeYncG16\<CrNY$sTcf$%8K8,AJ_ou5@0Pl^\
%XZ>C0ROoc4&.0A%(h&@]jV`WbM-O['_mUTDfkK*;<('[nL5d)lp_Ifa2Hj%)PcY+r7[km(K/49$(+pT3:tR1d8(bMDc6qjJ,tDBR
%$3c274K(\ZnMYP+2FaptH\NCG)f)V7]qp[AD5K9pf^L0*`,HJM9N/Tp_.6u,r"Yp13d)8s,h%+43=?d(^sgP<ZER2:B7t&)$nqs/
%#d*/9C`m!0Mj5^t)foE-3De@12I$5"$!T*%R,K<,N./ShfhTE(e-NZZKC[80"]lp<_T([K,B+VJC_TB"p6o_>!f_(V6.h8cSJiIn
%CfI2"/hE%"(,.!f9KeYT.:>G=`?>jPlIB?3[Rf&D$e)U%:;Wm+b]k_-SV2uG(rVta&iOK*o[XPm_F>;HKPe1V)aChfckmY?_F><3
%W_j$?m9u+Zf,Q>XFEp1$)e3;d6C<n=AU65*7"O-:&iQ8OZ;+dQCiELMQZR3[2WUQkjre(Wg(LM8S:lmBXB8X9\-A?bCe&!A_]Y3J
%'q+l*H_Y6i#/US8PE$gl#TJcV'EQECfH?AU7=^T+_$E?OCCUt8`C=R97D_OG762S0#oces&C!MXVXC*LfHOa&Q5IK!AU^hC`($q_
%KT.=(%S#&(Z:JA,&gq+_(.qHmFqQ\rV[S82&iS<k!\>/p)pDcM+CZ^,6SeNe-"3SEN#%G9YV?;U9F_[n,ZE,8,@P(Gg*2K/N@u(b
%d+KUOULHV_2]O[^:5171OVA><bQJ.ZgQp&sf^K2^Yi1[ZZp7LG!]pi11eh^,1c("o0B4m*>Deu+D'a6A2QDG[PCV&bq=&ODYQ]b<
%Tq66($UBIOcG@M19QgMqjm\,+)A=.U+ooZNW+Jm82P*=b?naYHRsO&"*ar_VM&l2-$o[66Q.a!iVCpG=M_O=%;d0R?\UrNU_!\&)
%42NQZ2A/tVGRD\TfQd+C]F<*%`js0]%I?"g7Asn:6.h8Aj1-cI@ABY-q'6F]2VOR\ft^23QpQ!V9#ARNl3(NC@:LtK0fg[jis@i]
%m$a'@_43bX>9+u*,`"l+%%>35^tGs/ma%S1MTB7CSKr#n4V@Jn(q;,QSFFd#fP#`M$fE$RCe.$S]8=DE'^RB2_T!;^Y&p>@nVu`t
%`)50#KY]1e3=6_m1a-FdKT-VKaK>YS`\rQ,1.g,CBL,c;FqV6KbXpHsrFrQLOg)+He?D&'_M2S^ju<Yd;Q+4E-XgL+o[n2GYV@$-
%N0CIpge\_:'K3NfdT]l@;1If`).I:J0\rpD]$-NmCci7AR:pHBYgG399:j8B`mA>iT&b]CO>mg<lXXG!g*PBL2=<08nYg&O",(Nf
%1=d7JHGo5$a$KMj$hso%#.AnMni/AV@;KSm@oBP)]C>qO'7qgB46E%ACmg\s9E_fJ/CGjG>@j00-NI@^7Rn,$c/SROr3a\&TS%]q
%U6X(((e#40k\HH;dl>b,&2o:R>7>q>j$aS@q&908cl2<P?ZQ^^$,-V91L09+93Pkg_%,fh,Z;u9UL(jS;b4<`f6DtFKnkcA+q#2B
%M:[i^Z)_jn+9[@>ApCfKF,1G6rJ0sHiJnQ[$9-/,E?3bn]7pS#7.tZT2<Rc'[-KE\*o$e.#(J9[3H3J*3]r$+_F`@0V]*EWLF"Qq
%1<Oa,hquX$f6FM7;MQ+@E%k&5`>ISQ_B/2ED2u+91ZXCFE".YKd)uIA@IC,9!S;9-L:;Fipsp#TUPTcB)GW/g<ksG&`7X#8jUS_A
%6t8&rNj_EPTbb)XehZtfFb$UQ`$f*4>(`"I'(n67)D6KS;ECK%1=HM&VDUJkJ81+OL)6W@cU"oB:CE/ei@3sn@dc_0i`Up6+:^XA
%c5Q+1`%fSPf&1+lq^%##_biCNV[f"M.VU%EJccpu!lQULZ%bL4%O).s)O*^WL^\&u,%6XTKJblHfA&=semQ9J,<RZ735So43PZQg
%"%@BmYf3f#qGLo`_cNTDNC<1-B`:?e&<5\C/WH8(baIg4oOE^(@jO6`78F;Vk-2qWOG\U[**d?$!][Ymk"%fD[Mj)(#ufX^F]'`O
%RmF*m*)tjH<eJREDMald%1$O`-ZWb*`/$_i@Po?F5]^ALC5Gm)33O55^guNE<C85?i,`'ZE,<nda'mNf28Q(iMq76g(*ej>#*BD;
%[%(*TVs)$gC,dt7HQU:-"!n4#*N)klR>6k;;B7[aDIe]@#Xk@W;hh5?F<!?(fb)a]jG=PM+b=Nhlpq[#d$quTW"/D<!B?\iG^d.<
%E'1ObB6V_%+ek":?*Y:maG(WLAQ+LBS%K4f[E-#c3LLeGKdE%EhW6.a.&mAB%;3YiAT01X,iB+;PY*OuX&9s7C*EmZ%Y;`tNpuSX
%OOOoG?c,9H$!0\;O;^"e4FuWWC)GiQ@d1[*9+^A)MHJi&YaEi@Ba1=:CD@c=*AD4;%q>d(aeFg">Mr3i[6c*ILIfp*2q:m-A'i[1
%JaM0]6d8kJSJZ)VFYK*g>8hW*PWU:G>"/#Q0S::*/9k/!7o66[&**_*DNQ$X:G\=hP<Q,<q^*/->3+(S:AD1iK1RWf2"R\'dF3@$
%n:j&b#;&&#'.,ZmZ:sUAN":J.mTJ1V#_k\\"fG,5i+<l9SM[i#;JjKa:5>6V`KAUnQP)8t)?]dQC>/kd6bo<f6VgRN!e!UK\&u%F
%:&9e(E,DLI1N.CGS!MFP+BY`0&;C]``$*\gg?e='!m[5=o.5$`jfE1g7h+u&dle*;?$SmJP^jHoBd/=,^D5CN^/=r(1W??I@+,^2
%[V)nC3?$129hQ\*V)q5s@#ps;:'R-k<X?BLRW52N*X:rG9ER!PjVUa\"r%>+HtACR85NCu90JG+Acub&BfPlVLFu>hL>u0\5EY'=
%,OnT?Au>m[='ST?2]D+bk/WB,?!7s[abV5e^fM.#[^7AXK7jmi%B10k_U6dM^R9e>V1Gq1Ted1_ZmN#8,ro$FU=#oVOCa%dn4_1p
%Pu^n.O#En.X"7)cKLH!r"47GcVR44](M9\k_G<n%[$fhp9(Q!q-k1t+Ga0\t7"\i%C=3T^2#%__$P?$3"U9s_0PTiK4%l$?RODkq
%@;Dl3P#aQ4`;u,+#O;Z99>a5q8BdceA#(9!?bg?=AGKg,*$VM(-RqlM<[;jYl9IlBi/?I.9F9,s^Vk[*UgY=4Ht3m6X\(,oM%c[>
%+Y6gtBf)+`dL\WHjg6RnO&jr)E#]sZf?_Xg&3UqnR.Saq_5"iQ'[JlZ3uV?pYq7![BG41]ajCC/`8`f]N`I%!g<#>/?nH]FXCB0]
%d[P,72&]L7OdYMeBJcTD@>c"_c`*XqN!:%Vdb,VYB[)!3-EM0Bk=-dRj$dJUTdUB/U&g()2De0e#2]J#T>G!`fXaCoL_[$Ii[lNH
%K2%lU-o4[V'M+D):/3VnKU\?B-ko/EE_<\SVEW'r8i4aXN#gu@BT5L`ECR>672@(NjlaOO&?XC@0p;gd<sL)o)LQ`XJXYPk!S.I7
%BgSGW#\,eSi6^DQJ7qcN$E*-WN=:eQonkX1L5$p(Uq&652#N=a9nn@&6MrT)3u&Z/``*^F:Uu]5`rG$lBK0NiI&6uP/P@prcU:*P
%SrMB"c@e(h*)L<!Pu45dL5n$O`1S.ZB'^4E6GrI#o^67eej*K,/-m"*3hfJ1<[SP!n6?TA9K\@<]h+G?+>bKG+u?i7B>L7+JJ`%j
%TL!jefKFpJmiVW77L'A@R(15)jY1@u3742s(^jO+>]Lbk>%TBn-41[!4@QJNcq'E2LPJFI.)lRF"bPm*YmH"Oh-!d537+=2,HZ^0
%H%\VBR1s=*5Z#&p!Y(ML][)j1TTR<iKe3N$Y[j!rl*AoC):2_[4-+dhgWXC&=$.FN9Xi12MjPVQ_W,XJPp7%/P<&jK/3RE(PLA*4
%q=fA#mbi"MM#NdVfZhnajAl6ZDsQQ#iVVqB7u,.PZ@W%!(@?aHU7UI2RZ/*Y0gH)uXVD(hUPG*^2=0VGGtQUjUYI_?Ru<m2Co_LQ
%#liBRd4t.2AKo\YfK.9Kkr6:1@(E:,mCCpmOftT?Bf8ijSoJVAX7L\?gon;f%Eg]5b.+Fn+"jS`a7uYGcT]>fSZ;Z;HsW(AfgT0h
%dj4\.%i9B`0to-EM_@Q!T4ea=AQ$H7HdqPieYn(8f6OFJn%#Bd,PRY=W_D-8fH53nK8.c')5"AJIHo9n0jd,1$FSU`I]Zrq[H-#@
%e&-Qe>/P=.foFitS!CgOoQeE5HI'ZSNRn3q<]>)A.0$e,-[oC.et@:dlKc3ql7mYJERbAmfB:]L)SJGSNQApl\m0&@Q!*m\bb$PO
%7cC[B_cGo\>CJ,oP&ClB-"FEbGH/'6MnQ^`B!6*3Difr0TWJjoNmZDSmB2AI=BR"uf$mlu<X`W]Lh!&1a`b#>ma_1%VTUVB"UZcP
%(LTC;<'8Qr.Q;q/RAk6,FB'qK;rqVkgm"aXQ**m#h8XHHese+0;k_FG0GI6\0'?^"SEY&M?#HO_c#gLa0))QPb=0.30'B5q;khG=
%`:'DE-&g`?7_YmhgV85rj#M>^ia/[T7X^&0rMZWDK8ncB`8'[F;oW`5k$m=:ag#J#=1sKN_5No>MP]H@IF.<1oN#FCm3Z%TFtqdp
%DO0td(tWmhF`=YiQH,pP]:0iT^O!:<Q(HD'?oC^K>X-'9:$!pEJ1(i_I&2"]h;.k>3a-HAln^jEDJXqVhmg[r$VuT8TNff:7_Y\1
%X,nS'Ce=DWWmU,LV3A`oH1MQL#@ffkF"uZFXTo<KS,T23DAb#beU%,6fIH+!I`Zc6f@Rc:5O4F\<B,f_7K2cI2YtlkU\m,Ah,/2m
%M[<JM"+n/1ppiHTYECV\m96Q?kg%&Qp?RTuB2eJbaUM/toXNb&-@Q@$G)$**1td9<9OP/]g9g*,?T[A:Zk^B1*)dB[kR>Nh_6R2!
%c2=N$EI,.IT'N0:l)94gfl\-CLiUug1@A`Jq](dbh-.SI2#;)>1KF>4(IXUHh]!NBISR)+e.?8^j)cce?a96PAK_q(LE7>hB*2=X
%.]"0['CC/?a"K$`bfaY]jn!A4K^\!`,IsbrK\HUhfuIX8h+2Vsj%gJ(>a+X8j(c<Pi\mYuDF4]@Lj\XUjk@LEMsu\ceMY+"=&ul_
%d+o\0:R.71U1:(_9\.H2qnc5q<iNRam8Vi"p9TZGI0.r\n$S,!(9\$M]RE]`etgl.[Wqb7V![X/9DT+KXJ1VoYN_J45<75(S.g:-
%]jST`@(`P&2<f2\Rn*4b&;R/?]&/5)p!cG)(YraX;mZ#(W6DVb4Au_<)!,C@?esLl-]C&<iB-BdY%G]74'*,%%'/VqX^"h;im2E"
%/e2Z[<P?p<)L8)dPhaqrhEE]tqOP/V+oHZbhEE^Wh'Q.fFW,SJBH"#POkuMK/Z5S3f=<kURgMk;jPg./]_SJ`pugfT`dbQ389r43
%?4eQ6X*%iLS";e.-^,[n\],p=)#3<i7:NRS2ckD^l*J9%XQ<FP5$Sp0VJ"JlW6ESZooh;g.P<la.^_a`S]=K8Hl^q>[1(lFk;(Gl
%91NhX%]Hh;j/Q)15`ta2>3Y-hX^CtM9s(Luj/SC$pg*nS8m$-e-@NSnE]'ONa&OG-7<QajJ3l*E\>mqk\(hBM\.NTIJHpd:\CiWu
%X`n#`9Pl`b;L<e6E$7!h]81t7(lSE>00/Wb9dOm9NJ_[2SXU9-RW!eS^e2)lFL//[[]sQ_HE5V=2;Ql5<=-A?Qn=uV4AdFl5q@@2
%:D>aQR25D5bS+QNm'EiaetgXbDsiJQN@t`__do5t?^/u_njROsR;(?#VVE!,KkNIm^*qlJf5WZ(-JoW9oUUA,gf.nJM_almq.K%P
%1LH@Qdrdio5l%"c.'?UhM;N'_P:qf_b"R^]4mfs3Y52VUB?,5h74EX4?PGGaR?h"U1J__^dAOua?[cG6(h[2N2a#EOLY&UTVN85A
%4WX&c9/4^)Hn0YS4StL4T$$(h[Lc0nroM/Z2_Chtmfpi3e^U4r0!&ETbfnYGYH2O1CgD,0"LE5f[][m+[Ad9[dTr"k'A$jUg*A=e
%"q8r5W]")3^:(&dKXI5P2I"^DX4hc#ea+YMO(10,T!Thad00L5OmH$f!7%Ihf;F`dRmo$!?oF!Ve&X7UUl\)eiP7r6IHJ\-c^&c[
%&fFglEj\,j7]rHbGl5\2J7GS*lu!s_NRThSm?,&BBnNnE>%OI,CQ6&Qe)Am.1%]q;'hlN2G?e/6Fb!0WH*q6hRMhISk>t5o6e%KS
%BuX/TcQnJfd:JJs/fl/cL-1&Ur\rm]s,E1kPQ)^N5BqWO=NL7oOKT4&-;?>n?5F@U',99mpuf6"BRFQbpt\s5?dXj_P.P5P-i_6h
%re.&4kr90Br#kfYZd\=Seb*H,C7Y2+f<]HL"A)q3WE]U3=MsF!>\NJp!L^qSG.OW)Rn6L"iuE&IFKLV(VkXa=ACk8>fq+rKO_It!
%-@U0g]=!*qC%U6J,ZD3G]%18dC6/9]nAT=N8P\;3`#&;o(?mc9oUDEOrj).QT8_j#Sc;IMZ9(/JSW<=!ftAZ;oA;8@%qb">,KJR*
%r-*>`qdo"(:4U;[e>4EN47f">MogVk[Us0dZSULlRI?Jr*OeBdmh1?Ba??[lp;:Q#g:r,D[79Pog*[a>,lhkpW86qFA!9bq8>rpg
%A^E5rm1th^>Afa]2c#B,C2gGB&%WLM9t;:0cKl4Yp.bBYbJqX_g6>jokds?@bq*B]$ea/^27&B=MhPtjFmgS[aBV<E1Gd\eRE;DA
%&q00d7Oq*,6mG=tY1dqYqHL)X0`'2";3&)sH>DTPp<7tDNb)%0@F!C&X>L7];0OHMVA7E;Y#-UZW/f7JJ%;qYg%(0V9TuKM7XGCK
%j&g_.;H2%'A1R:O%XYJuI:paGbkNm>`eRm@-kZ9Tqo^/g-?mtER]$2L&@p>V7ITUgA#l8\]nMgH$RX'+O3A"c1W.D[n1lf4bR?-\
%_ok8oEL7VMVT\JGbUh95_Q5G)J!h0\-<LA@).($dGT#C:pjN'f-H:S#B*usa>EHRp_b[p6ig]Kc^/$$A0/jc.F(LeXfRt2/^nejp
%gsfc\@2!O/))Kp`5ATN^4uZhr>M=aWO28rq*uhV::9TYa\'HtQ$!riDI<1p@QtDiJ5C]5mm>Fo:CJE453$U,*0*9T=qK587RaIJA
%2,*&`a*^l?[st#U;Y.'n.Jd@Jq(C<'Z`*eY&IG<uSDD.QOl]H@Nl*s@O7<Z22g'(ZgF?g(m--7pX&lo2ko"o:%:,aqE_2k23IcX'
%r)_AKrgr!FT$"jEouo'O#+;&XR;$?`TV2\Nd)+rjZtd,B*&9=1CW@)4DQ<;TXmF3:No_3]AHIJEU,$WI_(gh"Q3lJ2E/NIoM&Yu.
%N7.+;Nq"c8a,jqWN%*1hVV[?,IKMZdRl\d[(_`t7:>;;2feI)^N(N?'R2odLa-[K$#,mr<h3C@U`%.63rQI\T<P!LUY;_Kr2)fEs
%oXRa:`dI_eW`8i:hE5;*NR.?7rR*+cRR?%eI"bbA<Re8upUD[h$G$5n'_S&[ko-`-UK)?0+:R?R=5DXSDH_\T$(5qN\`tnrk-7W0
%(IlHETe*aRb`)%-DMU*qcjV`f!tBZbX)A7^RW4'O%^uc&%#'9c/j&@-h8npLn^YL9R.h%t8T#g19"3VuZe8eGQ\*8]0m\3N)t^0>
%5D;D43,"CN1S%!$=&S7XCT0,RM4=JVa#mS@)WWb3Pe'``^R)j)X6NB8_j?jm9YS-*[D+kb$LaT6CV6-3R5oXhs+*N:1U1cMNYB.;
%,sLsL:%9i@O/C28&(BkAH0n;90'BB9B%l$)]0\;jDPk\'[(2S_2d+k)$\<)jc-<W+M-(V0TmPENfB6CX,GnG2F&B933]C"#B'S/F
%SXZU"s4Zb.oY&a7=4N]OFY4ea%u'GWh(Cp9FZ56F`+sG^qIHJL9trmdh/8NtTbGY#%-%l/E#Co*-.fq,4]c+4a..,qVN<;_`l`_%
%`Tu[e1<*g_D@i5*hQ"4cD!7^Ae3fGR*PGG<s4D:%rTs3,1u)34=h\m84-u:(:X)"B=eBDr7N!%f;`TckG/U3F3oA5qq=ao;-N<G'
%D_3"%ONEpg?>J<)^FtY.RX@\N,mZJNO)(Ee??I">hI%.O#<l>Qm?JW>?sNAGd;/*Sc"+G?\$3Klm=q5M=7'8&r:C3LMI&'n%SCC-
%R0*6r<Q"JeY#DY[\\FO*RtFIhY`$&is&j+I>TKE(3QK[TZ4"=,d3*qL1j@^FNiPd^"c\)To;fg-<"4&@6[,HOCVR.t\-O([/Uf1G
%\aM0FbTqgtQ41KLOmUXh#AtB$]]SHC3pi6l9&+mma968l]Wba>-f.$B'8gBgd4Z2kAhqb001_\ZiMdTM^3I?fK^Z2'cB/&6rKJ[Z
%\4p2/_K6a/?#4o];=k]PB0`>6%50Y_E&1#LA"4_q"O?kB4H;H.PMHbEr$rb0Ll?]FrBC4_HFMJ/2@W_(1/-4>l/"Zgq>4Zsf$ETg
%OXfF.F.D/WH."WA2g(M[c-aeU1><crBq:^[Mc6<bc1]0GYW#=P"aP:Ei1p]C^LiV#T)SM]V3oC;nI6@"hs4>5DbVMRc@FSdH.UfK
%n=D(pfqo`_eC;V+>]:.L@LX,9+nhQ&rahsS?<d?*S(Yb::;b;Epe>Oj4PfnM-#JN@#n5uWqIm$+p+l0OUndC9q"XLoET<QV;pWMj
%Hj<23^kM,<nW\u>B4VuSF\_p-nZ_&DrDO,mpjua,nO)]uH.MpWF(Ygi8`1ut.TQ801uRVA,5>@!9`1%r\@IE=.ckAk8%FF&S@2QW
%o`Ff1g/qdb>uci$VUcc_rF=9%\??_)o^5[\-Uj((gHJ[5_QEX]OaG<Q8S6=!SPA3$nsotf;"93$hgLmZcA(#^LRIZ1(UM%^SO65m
%JWT%]=)[a]DJi@>^bPjHWFk.DZu9UUpi:>s<#@f4Xi;k_cV,GLoa\RG`>af)L@b/"f9qQYYApiF74%`g,tJF6X:T\O\'!iE8=1_i
%dc5>ZPp:35`__2^-]I4lbPo]"s4_MuIoGTM\]00tmg7i]64+D[[u5tgd2hkZSg1qF59!nS8[hC9pt:]LqJ/uI1ht?Y_dHUTm<3!1
%r9p:XIHTed'i0o+LfD5oS6o+#&`nW`N%3cnEubl<*[)67s2'7Rl7_f$Mm(Ocin]&)JD`RG*=l?@hcojlbfSsN1)tDAWnil$F%f%0
%:>(#sfkD:8VNBsDreGh\_1/V083%pp'@[.>U-q,;TV<pA.$9##Ju49ZFr8_nLodiDY2\pRpQ<&`!IsL#J%^rNhapIcN]afF+]%pk
%acC'g)9>=jUb(^?%Kk:n^2(4cJ,N`(rKl\cs3"dLhd?EVfDkX#s8(>sr:Q\3rP*jZhl!DFfN"_oD&r:pO6?.idI/$]*kC8H$GLn7
%7UFI-GL>\Mg'MM6od@,Co7qhq[p812G$;UJZ5NPmFaN@t+Kh'rm)_X-p+6'G2%TZ)p+=Ie:@KO#TcAmls#/3kGgUE@;>-di]tTE6
%=Etpj8<=#*PHY"*nHLd"IDPK'm5JOonIYZFXmHSlSds*BpGCa[<lhU?rgVOIZ0-07CT*U&ibPU3+mJJ,VibJWGWT$lo7,p17J7l%
%1&n"OCcC9Ps-%kL)G2%C"]hBt]/41675h":8S]n?Y4Dd`o'iPEdNSuU1$kI'7gh1"ZROK'ZX36e^+r=W=Esa?H<b]"?>T9UJ()$C
%kbk."aUCC]C5O`=drYLKohAGf[GW+8ci&>b?IGWpUOS5>ihF!Mg".RFZE8<9F)?NiCU?`Wj&>"TQ@roLR=jK@Dhno-oS#eZI9cs0
%UT9gAVK^);q-RJC2L]_^/3r(6)!"N>&s3s`bm@MOId%F"kij3>_]DDc)YYKLT.t9TTDRaKZchsRVK/m2qZMlH.9O]=NEYTD/E9n^
%jB4]'oYq+nG'Dt'(;b7Xo_@`!Ls"nGF*7L>(;dY6HMgbNKV_I[p8OBCrViVB86%jWd\f;/=F_J,;C/X",hhXHl;MNnM-P%6<;Iuu
%g@OK>G:^tmLF,KD^pT;r1uOAEP9E;TX_f9)d5:]GR0ZkYTeP1b>Sph9=\)eW3EpAp1=t&E__B5eG3?a9DK?lf2VLU5EFs:sN?3;L
%*Id\j2@TK3cC\O4&,hA#:NkK`Gh:=&A5</:]JIdh9QrpgA<3HQ"T&+&]@Q7W>:lHV)Fi=5QhXW[[9fc)s#AH=Fl%"crL\T<f3eRR
%\,ZHZJ,K!>r:Q\3rQ!gp%hD8,^]4-PjIcJDhu<N1r\k@4.\F1b-.7U^@;SWK^oNf[T:,Qj=j=)A%nh(X1^`V+=t!Rs*1Y*5$K9=*
%D''>(n=22F1hD%(DSOiT]4GU;4+;)^niYR=m+7&h.M:6,3MQrb.-QQEDQWgBf1^@3]7r&qTYhZ+>'f%N_]9MYGuJkXEnPaN/U14_
%eV>[(la6Q,q=I.9YC[*gYKNJ?OOo(1Q.h5#2;I4p:OLN-Hd;7ihrrYj1ksm+cO,8ZcO!C\eLoD,K>-NZgE(H#c<KVB)g^E2&01g(
%7;m6_SrVY^\t3613G;OOl.-1E=`i4>*pY!]CHmCZI;nH8kZpGJOE/mojF(W',V^LC,N%Vq8a-G^o01q*q:!Pne$pVq&dU4eZ3p:\
%I%&YnL/0U0AJ!q,)E+pBRrM>ErMK>[<c\S-Y0;$JT$dM]n.^gGqOVf>f%5hf7]juaL:*U^G1.'u<5q5EP9F5c2d3#,nND;]D8M]6
%*u+UnkZ,k.Lr7#LArshbkeFHg_?20<IYWlucQ?TGI9X-I^%FM7T++T!h(csTUmbX.T"VXWVuPtAg(tAMWAq>@d4^-;Ie[3]UuGmU
%9Pk^+hCcQ%)ag3Sfs#!62JOh]djP+c:0-&6<H%PG*jS2tI#V5DjBsBLpH,IsZ^F+S_40_A'UuHVq/t2u2'd#"NQ.RH-]]@X96p\d
%]4YJ?8*)'t2nI\,,Hq(?!a$W(dk2T7fC-06VEc!'bmu]VTsCQu*<rh4d.kk!]JK<t:O^[TOE'%Hi)uT5j>Wjgl.4'B'1].q"\U`c
%V3+,QY>*#R]<u9Q,/YXH-]LU55"VT31+%i;qIYi']5@'\:c_oI*3L[]!cQi)1SX`-q93)d,ZRcs%rs"uq'*tU0PZf*XS+f#FBN=k
%*/+i[MQD34HX"Jf1omakmjVE%fc9g%*A6%0U).^[8"-u4@/Te1!1+V3%U$BZ1AM/X\t@+!HZ)skq\*7?!<^*!Eg$*e8>&#L9AYV>
%q_K8,W42SYmZ!ao_[4M[TGS/-A0SjDaT'rE%VqscH,:.r<]$8gQH-^^5qY_:e+YhBfeu4GUuC@oj1(8na2Q4]q=!"AE[Ko-2Yj3"
%CA2]Mk[!8eAnqPqDXF]#^Mam1",)]ln>c!GL#/j&Wh]dm!.0hH#n%e3/BFHu$RTnS[(cW_nD2WCoHP0[?B&j(Gu>GbHWADqO.s<4
%`fGQ^d8(bDLKCF:0>2sTAWF7@$@*#lb10_QD+R0[>dbnOp+J>"V:B*\A`Jia;/3S_?[O8#lh3O>&.Xp8H>M)PAsNACN](8:GPAH>
%L:?!?."]W[VQ/oC^$KJ;M+Cf<&S4N\qr=Ui,SX-U6'R,UL,UW=*/R3pbkT9eP!?R9T.+41_\FGDS/5FH"ZXZ\k^8aPn\/uBDI2)C
%q6;@5gu9M&"Tlo<d7ZsAp"V5bbmkaUSD4"pb0st0%uA;?.JTWLr(ah]?9DfR[9S+"]K$QbOQ8%%]4Ic8c4KWL+1M-mhg,)@P-'ou
%qq2Z*;n#7d\Me-TP_o8PLR'02LrT@LAn.%>6+mK=3t?kOV$#KHApe)$[f.Q,qTg-cs-pYK9[:mEjP8+\C^!Hj:aDO)!I:UJ[=1F'
%LW$Fpi5g7#/1u>,=FqokbC?4n+STNn7Gm@8]kHQS)pF^g7#TGd/t7g5EOa6r]CDZH[U_'fXbEJk$V#(mPc_B#\*W&=0C<5Q"4"nS
%`>pS`Rsa^>^!R[#a+gqnlEsBL<4)Wr^+N9[\ilgJ:<jqo/[ZN,CBkhb'5l7n8o=>Z[Nepec@CZ+D\oa^9&!k)-pMK\LBm?r-&(%i
%p^3qto1^rdrC4"bhh@magZe\26?\[@Au5JLDl;B,Q]4JXI475=:Z"cm6EH^GodS:R=hYE\$^oXkq)5-B6':UI_ccBIOD7/hb3Gpq
%Nl+t-j9o`t1,"4gZH9Z$g2C3(U%%8td`c!$),sK1TXZgC4l,+U.2cQ)m4!C>5<Pntg$-'mL)N23HH2-0(llM92`d;#jZ[olgMSP:
%i,us5hM_KZL*kYN<f"'/X$*rY<akNnH!b*[E$)e-F1*U,`j!D\r_h/pf(r+SoB@I\m#SVUDKLM*LGA8R/4=1qh;/Ccr^ZX3XQHrg
%V#KG^H'ENZGK[gG[mm_Qr>jYVE6\gD=0(`VT7#.LaOXcI/K]uXr:"dsj"\V1E?@.`1bp#E8^+YlRdmj_C>(1\)PnMt/64T+WV&_2
%*7!%]$D%-;@mhn?QSnDqMrnCb5H7!3\QKF]/MJf*\0s_Q*r)pg3.s"*?+b#Qj+G!TbkGn$CD$e>l.r0GnriYeKW:`rkl%4k_3Fq%
%VGanZq(*&t5;fagJ!R9RMZikJ]3pgUlJ:;e*GAH*/;3_f`^T=0]j@=B[Vn(paQuX7>ON#d`'nRE,VCk,9Cgq%WjMW=EoWAVO(R[!
%/+(oCM]_$G%>s;<%):Cu4]5R@<WB```>XPZ+*Dl_fJ9%@gS+M#>TgJm6,=pY#VqRfVtJ0d)?RQI[giSu*t5hjYGr6jg\@_T+ICI\
%dr1//cYAMbh`$coH#N*MUD%_fRB_#*Aa=MpO5g@W7+UN[=\!"5)l2l*lb1$?1=CfJ:U6,mn)LUg_3s`@7n;WVG=isZ31-K8;>4R\
%o"^fF4nRY[1'l:#H7j@LbZ5Ug8fnKXRYbbOk(%`lA=-F''AM^'51L`I9tMCQgcO7bGd?S0/82=/&;.hJmArn?3P3f8SfgT[JY$G@
%Y!s+U+.ndd5<_u#D)pALlDNo$'f=g;#bPr:%P>Q:Ep^sJmb6lLrLdf!g*JlAmX<H.A,u>UH0Od:>\\.!:>J"WTC@e!c]tSaqHWCu
%UQI@D'uS6E=B8::Q.kWjAIr`BHE570$&0DH[Y44L%`-@&n'\,\\`(e3c>QR$cBgab+*6t[0Dd5dL892imp&o8fKO'M7RmAecZk1W
%bqm%$NLMfbq.)Ca8gsl?[I@8$f:*gp\c'IApNh0JS6A/1e"R_.Tt?T2=,qZ`iTRPugV"#@(F+9>Z&OrL?`Raumf$0]Xp<M$ipL7<
%cThI%H<6\9?LR1-SCbBc5=]%\8r)Yp5HXr1TCIfDmV,]Es-W8lT7sdqs4eas=?%W,1T0Xf@`C#Pd:*hG8?n*Mf+mk;V'Z$qrD^r-
%_k0g(1D*Z_47MD>c!7b-D8;bir%kLIL-+H<bB*1Dc+'3hWK;V3Cr)_InsS=1@!mt3YmS&(c?:#ha'nPB[:=GDSZMJklgQ8;<D!G@
%!^6+8J:PCHP",0\r]Gs#"6l`Nf4F`4:B!bI&n89$`BS'R1f?57C0DK1aiaS5TCRusWMYT-cs10=22DLTLHDQq`-NOB0>-uo1?l`W
%8D8Fd5$a]9\4othp(gO2KCAuO)Ra:G]H2F8+8:&]@O`<\&l\D2)kj/;iU"lT(H_6EQn7^XT&i;sqF4/*",Z\cF5,%<KKKbE%m(]@
%n@ZWLE4(-^'5bM0G=h,qk+JjTO-g36POs9$eYRm'P$Y?^b]=`M744/WQgC,??j-d0i\\EFL@:.T_J\B0jt(s^hH<OJf6n5^d;naP
%otd9SY&C-QgK1GfM*(M^;;We*`Eo``$/:9A?@)b6%Gko:K(<CL2;W.6%l0WBm"m88PV/-,Xh>0nqWLb3^$_+!J,1j?/;NBnV*Fub
%YO<QXrS.:R_HNqH^Ceeq`ELC;Eu@^qPigeF0P0m"Pk7ZrPDF&q^XUjG.fP7P]G8_Ib&\9Ap@_80`R*<]IW4\TOT'Xt-N`#dD(8c8
%/s4a3)R2akd?#-$MR)*>K]Cld<q+_KH^H4&Vu,Q0L[B>8i2uhhBsFr_(V0Ws/@e`=X+B26WY2fLV\2KigVY&THLsuQb^Xqe.mh&;
%,Q!RHY.XMgoqj>dAFOc+?LQ0g+%eT73c&C#Ia5QGI.cc1h9]2BYg_GT=kN(H^5'INRH:jqqGY*:2#OW8b-MF>"^mF=(VOmJpD[Gr
%>3aa%0D^U`"bk1[`N9d[B#2nbB\0l/e%#(RV"8Hll9R8joq0MU]PA;o(Z)r5qSaC)#$/D&ca>?CW0oa?$9cAtL40#GDg64RH_n^+
%IBU<GHgiN%A(Rd$Nl#*S'A;tpS9l?jd1XkP]N^;\MKaDos2;NjZ1[IC[046'Z*Bbg-?"<nhXk9$hODX#`k6X+SNCc`UuV%f"9rl7
%Tt^$[4l5_4G]Sd`epCSZf=^qG;8df&\iTRl$sr)/=7*E&pZ?Ir$D4l@3`is)Vi<e,;aFUY(,*u(hXXZZhHMFI+*su)^$i'VLA&:)
%NU'Yaq]r];I4\a=HM_L;hOHO*&*A81`6m@L_RDM6>eN1jo-\`KF+N2bdp2*-O3WH5UF,f\SFj+l5GoPU/^HjE>'G&B9D[dUXF'n,
%Q`Qe?k;!PQOh'h,[P;uN[s'TO;Efu^SMa/HF6EL[_VB9i]]_!)R%&HHHQVF.:%IO@1b6l%cH-H_^<Z[^-`:S81]=.kff,8dcMJA%
%4&t01Xa'(<jQ/Os&AD1ndULkt;k&*Z\+p`?pgRkh2nmf3reYPH+3O?g0C)iVgtc\_=*WC*po]#q9>5bT1[!5.HIldlkF91%n_f+K
%`n*7E<dh[#q"+F=a\HDrBeB-CmsiulcA/,!0CtA$]K*1O4hf3[+*>0eacs"d^DDn8k)]G,deqd%Deo>-\?S,F[sjI/f/J)do9H)'
%l?rQ02jj(+GCp:[k[9<rAmt5ppi+&6=Lq]JNqLtTglM=K2NJZ`(D<E6IUT^3>$X*KfNMG!/&BlToj%N3iLs+u>q!J;jFrr@VqaV:
%;JIh1bBd]=WEqbo$naG"M\0MQ]"!k9DAQfjpbMZhii[ZKY]t7iD_2_?f<uH5:3VVSHDhT^Ho@eT`E)7Z\2Xbq>V7W%/d"`IA,U-k
%EcE1+MOm<+Q4aGiaAV^W?XCn2D=9#]es8Bj%tj/p;FS=n0/X9HO%]FtC^4"YV<ol'Ej29D/^'TqZ+Tb(p6X6rkgf59=X07@Xo.2L
%h47kU0(3uoQQ(dC]\H:&bcNEBN7,jpd[s`@%M-$MFrktGQ/1%kD^?4$QWL?`PF!dqD=>;5D7]e?=a=k_dcs0ae\<#-]_/DLpSlcp
%S\7RBFY>jqXI_&Qp!rB:nZZ25k]a*#gAUDR^\rEC?WhZgpPWe`d3%26/,E1?To/kp/_0>t*aNpeqHRsTs)On>rVa8_Km[KLq9bO2
%'/S>%[EUu6FtMOneCIAe4l=udI4i05H4$S%R`5,7@'3M.#6G:frd_9dL^2q[YEsfm7\q-8ORBu:Vn:-I5Ws?m%1JhH6:$+\p*_=B
%()t(l[0*$-*aC7'"tpHFkC`WIq-L;1heK7=m>!XP"(u8cFg^S"erta"L\6jjIX(hRI/dWG$qG%12>9oU/MG.'6fE)n4gZHuRF$CI
%k6kQXV_1?Ue$'O$OUhg-g#YTl)*p5g=VnO;.odanLQ7&Z[NZ&I+k[W7HasN(iO'F;`N:H$\D9n=`.R-g[<T(tg_J"%?4gNTI7rOa
%<5'*5,:cRKV"AaMc7+VKn@^_%$bmZFX-'s9P7[O`AA+W-8%(=@`Q8%dIkGcL3o>u8fCQ[H00J-Ur:SUSUg5HkdV^hN+J#^.X@T2'
%F%CU_>?0b7e\mKL$;Z"h-F'//$YT9*\_(#%aKO=jU9](]OVM`0S:M\upYk%&\_%\`9"E\_<I/6/ClV7Ce]ke@Nd?d\7+@^nkcn;Q
%LqRK9PF/;*`^*?m/7*G*dr]_2HSXa*bZ?aT2HFVFV]-SC3A4OLG'5gING<+$<nL$,cU?q,)XV2`\XSGQ;G4]:+a&8O/RRp!7JhDp
%E\k)hP;ZpmQeH&S>0:aJlJ9VFCZX\m/$O)cgtH'dYA>6Fe^E%/`VdPQB3u!aYO*BQ\$o8SqsEErea3"ibn1A8m7sdi\.],nlT<kA
%h><b,c=(T\c`Esd\fG(7Xe4s_a5T^9.@+=InA`VqH7/-/\?ErjqJ@gU/mgi`0:smJnWtQ8RTS:F^Eg285r3N-$$?mlM-XJ_dk1C;
%B9L*keSm8r*c<@srVh8O;V\rVc!Lq&.HTX#QeFY1##k8_eTe+cFHfS)05fCi$$CA:I=C@=Ve`?Xlcdf=9.praYA0J8UOJd`T(IBA
%hMmf&>q)F1lt0=ZiA8+?$`0WS=8tm:0;KU6pJSP>IIF2)hVN%N2P.6jKnJc/HtDCcH[]0kAm_q$mf(?o4PnsRI/a(lTmFI\]eHl*
%Q;;CF#?s+t(C*>gdE(<MlQ7a[h<Vt\7hP5?L\[eAl='AFp>osVn6R)Of+Q3#_Kej<H:^N<a+!-\H5r:#\&Xhun+aE'H'^Pu*bD&n
%WJ?R[E]Z3^4*aQPQZ?P8pZ8\BGD"[\s.Or-]rqi>eP(>XoL)ni+J1ZrpuRdIjn2mBCa].TS6`)Z4(lguoDSTuZ$;kt>sBk%+&5it
%"n16;^Ru?c2@I'TjcdQ&^J[1$/RA.s'=S2ck;W4hl$9`LX^=U0>Je?VFo1BsZC$*O>Y4!$j>3.mkK<V^NOgfffr](gYN3CoQ`Cf"
%EqJY-IT3oP5Kt_1WVc;Hp&2"khK\]sj^t96\8tSNgM#J$djp3_6D_/;HOtXT\1KoZ\*mA+9&@2@6LEq'Y1VFApYH,ka_1%:`uE"p
%o@*WrICmj&*[82^HT:QP<$#eslM4rZr&jqF>o&[FdT+itZkCIjSrt\!rq(0a0Br)]igmds]=?@/@_'-8aQ?6UdBd)\GYu2r't^Nc
%Z]]Xi^EB-tja4j]WI9lYbOXBY9DPq/lB[nU[jspY59q,WXdb!k84LoTiP!i@jlGuI:oRN*iTIE^c9@l](E]9+lL1j0:Ku4]DS:<m
%D:H2R>3'QI>!"n)\?30!%m_mtO`RAc9E*5oI-Eb+\*D[VUKkQ)`Kbc<V5#t-e#-s@H6='L\Z=k91U`]i2BTl]IVWY#>AC"$KY(9!
%4g`aG;hFuAra,B*>qKr4G/VaaYER-o5'>S.mlpQkX891T]j>=D\ZRk21qKsMrC-I#<S?cA/6'"V[V].V7%5o]g2B)&$nA$@[Lf]k
%]ALf$IlEfBYQ&2S%3#1KVd[N!*!JOt"*i.<;eso&]md1ro=F'BO)1lb!NqL>fO9hW):J+<HHS-K1]1E/Q!mEDE9>U:oVnI@diiG?
%?1aZ6TBr^<MPAea$67aUMthPWA^rP35!LkJ7!;<@DuH/l>>%ilC2H2JGS3Qc]"?5P`cK>8TCK'90-tC[YW"5-n"jUQ7dPMHq^AbV
%EHns7'^H6$8gZ,2W=,L\IA'IjooaW-$dH_d&&HfKk$"Z!lQ(fIj>4()Tsr3dmIq:?H`)Y(c%qK0WnhhI'au]X^\QGhq3l\-8S&Yq
%PagKXlK(2A\I#>Lh=.X=7RFlThj/\C9I_fIR<WEs?'<O0.\Zh#]5O0?[#/mDH@$G],_Ho.^M;*(E?Er:BC97K]jT<]>$DhSQ?ULe
%nel8IbgYUo+B>te<'VhDg8H9srFAp=&KECn[$W<LLTdsW+tV.YO[Af*&'kc'nup#6cmuedJGM#CcNehL>)4]B4<U9D?C(PdF@eN!
%:0&U#dEVGQGgW-C?@)a-niW*m#-6Jpqn=OWU%CDDX6*2Z%]f6N6>0Y+]!_@3NS;:!3RLs]=UK9LGD#[!Idn.&YS)l^=2>Fk7ka:?
%nQ'A'l/+OZXqQM7X6*5r2[&`;V:9t_K!_&RA13f':jJh%>h;Op$V+FEJMe\":i]96L[2j3=>IMQ]1fDB''Q-jm&fX/<g)hTs5lcG
%G!dhWmd\!FXT_V!D0aY:h/Y#Qb,6h)WpN3&71QO&H;Qj7$2;0/e@NB)R.:#k]'pRTIX&Z;?l&=$:iS*,_*@kPR8*CYc-,_[c(A66
%5LHrsf4(&)i2_rhHTSnfVKSQ?fS_Ak2P]B#is4pFZc(pQ-OGWZL?(tnRmjirMBFHgSO"kQJn^B,Oa=t."rfru^6)bpnNuN[T;nt7
%]V]h"Bg*[VcVHLo;NKT&6FG=(kN5E-nU_U4+V7`CYC5K*nkJuGBkLh^&fnWFdJ?\KhPN2_h*'V/fBlN`T.XW;P5"5lrbZ$7P4fO$
%R=$@[./5G.OfSFSXP9kK7lHA[GHdE5WRd>+&$E)2'5d,F\2BgW[l6Hg.b_H&.M*d%>D)$2WZ`WSqpG]ETA<>'^1^_'[U[]OIkG'[
%mgn9`k"p!MR\'9Q<S%Um?lt??#&EbfVAbt=7V6qNZ]_E4B/f'aBQH%BFLu<3Z3*VAP0at!S)\HHrjXW>R+i$3ARNY%"B3ti7;&Y$
%m8Z%Dg,t1`4=#qBai_=9&e9f\9X<Hd`g-1eIb7@OjK2)@j`:B_L]Mi+hptUI^u?'=1/:`Zo`]tqlZ<dL:nc%OAc$=iL\$eP^Xi7n
%S[kJlq4j)4Tf.a>HgOG2euQp&F9ZW(iefD$B@SMICb.KdS3C/.6$D>Hg:u>(?[]X5CKd,'\o>0jgOCb5j8#VOe9YtI3C@.M=k])"
%Kqn?_m%TTl1MQOSML9$b+%kFY/^d4o[?&;NU:bJ73e!`u9D-n*rWSf?%@o-#Mml?7A?FWjMOuaeX7gq=qArcHQQjRTFYt"#\B[H(
%Z#)qm)'38kAaq$kpf\4K>KH)=WY/ZbE,5hnREX]K[u(nD$ZO93;bJSMrQ9lqA>hS5*o#_UA6[l,Vq29P/^f`YQXkt\c24uZj=pSU
%9U3$71/uO,=UM-\K=sN^1G,`eY?7:WeJ?D:3/T:5)Z-3No[g3&;&+5O[Mk!.'\AW*hU.`fHoR1B(VTESEFo+m.I8AlA+6[=1=ClY
%OAXfc&_<834(]B:DU+#N<_S-1'<jeMnO`XWc6%qAnEUiRDLN`8BaOX9pgtYD8:f9Ypit7Z6^CGKTclXrUs*a'+P3mk,5N2PT^s0Y
%ZhW;;'2csT`Q;PVYRjVMntJ)q%+LNm)2\S,<.M>(^<QK_^14[<T[<.U('!?S#-Z64)\aBO_QR((*NM&3Age[:aOYG)e80e#2Q?M?
%9m^`Y*o-b!IpI9<:f!2!%!;c&#hmIJ3E?9Pb1RtC=>/u9I$ONl?)nNEZ>apLp3Qo1_eu0%`daELU0k>-A0^KtiSe6^5itG??Ij?=
%*kA@1,MR!leeMg/DilWPer]^g]lkEbZK*fR1N!ZPe81E[k<!jW`CX7Ziib^VjaCW55hiegFR?LoGVM!27f8f+'/b]81RA\7<*=&n
%fTu;=\'8b?`.rsL>9/Fu[&*ThmIsXKXIM:@^GZq6:KXB/RU<j.T#n":Ee==c?!u5`OY;;$ZCJ[_fg_pZ>Of&Bo)TF_%m!)T8%`e\
%d)s90Tap4\L##8I/CLh?P?8$e$_*R)IUP)L%HY8%oYo?%hqJ5(2AsCZ.1E7Sp3\Qe6#WD_%G@$F2W[Z[LdH0EOI(bs\8jZ/h,9t+
%LRECs5/3.^K!S'u<$1&ZYIu#UdXeeu,^$?_)R4c=nS#ke>5@c7^7T8>rJ0^^c<hNYR'tB#3lfp2V4Q'fA8_jZnWRK-LQW+1\seYf
%+_iJtB?n*B,S28*3^8NQGPc$PrU/t"HS:1JHhZ4g_<!,ed&_'H$h`?4M:#liiLuba>PVRO<%W\DWtlfC'e"*AeH4U).-L?E6)ntZ
%bHKN<[m[#e^F#p6*Z!pV5Lu,iW_2>.G&>>>W),LSLgS+s19$V`a(4R+?B8-U$dV65>noo:Cd0Ak=h,!<$WpjOPAp,QHg=ZcT\8)6
%Qf90lRYHI^e8o#/LOS2=]_t5$\<Eb"eUO,pYAJ2pYl8Z$Ps\QNPL1Jr=P>O3C%d"sm9pfmYD.I5AN6JqT8c]P8OhqaMq`?`>OruH
%f)We-;@f;/JZYkSh)Irg.[Bt#VoNX+[<o#TLt8.56fN"EB_]9=hNb\r*JTQ\2#m'oBrZ4Ah^,=H-7,gZdr[(63X]/D7Mi=bc,KOX
%q5%UCmT4h)FDL@k/ndtE%tW!5q=Rrl.37h(:3/-fS*T2k1B\,h(ZM@5q27p]V9FFn`dE+fUsoXg>j1[MfWd9t@H3#c;hr(Y<q![?
%rpAO^7m=ZTK;9H=#Dr;>T*YG,MD]Z<^aer;W/FkdlNbmH&DANk)^3j4NhO:-/@u09L$sEfB7H?V:ri9$g^0SKG:rMhre5q:M]Q-L
%&J_Y;Fh[c!T&2-7OM9E5MQq6+LAcXnYdHS)%2a=)quPBUSSE(n4ft9<-'ir@5pu+Lo[8d@Tbr]Z0*Q2^2,S,474X#G9>#5H?^!-Z
%1d[VB=I9e804:s5_kmpJV_p6sb,B;)QrsfE)Va03EZ0]R7`^X'E_)GTMlC1(aF?71D'aaIr!WZgZ]])l1F_QXoP\*oYJ,F]$Yt:[
%]na%1S2bnt@Zs.9Cs2^.<:Ht/5h?lpcRR"WR9#JR'?LdoFC*_0eG<0%`g_(l=K`VR:XGn#<k@,:(0aNe[j9W%`C0<.)n%VZ3-$!1
%S.*7nUq+ftC&b2<Z#*q#k^rm^chh&!fZ*#g/R$gX50#Ra1A4esop_uV=qU,JY`!G&?-@TiEnc&gZA+[%3o;TQ5.l`LN6]Ngar%GQ
%0]I^A0m-;PR^9`3>VlouAEV^8:HsS;pSgb."U<uY>5MtEQX]L>F=GgD)3U_]2=l*e:0(G5:?el&?c3>-0pn#*i,/!CQXej%2MgPA
%f'bP4%r-gjqW04!ND8]3qpX+W))m>O6u9CqcTF[tlbd'E[pPW#Vk:Z\8S)!g5^s7&C9d@M'_X01=;pF9OOFR.YCXo<>?`!A9dh&p
%7I(uVQ4&C1%O;t;:k]=HqMi/$EH3(XFu8/pj]F_5)j42u:YVopF((AoEk1uA2Tnf;("-uc1.aj9`sX>%82O;<)A:Y.CU&k_dfsua
%IBe&RQLK!+X)rJW-;WnTITD9<^)\?1?F%"^e;J0S(3Fgl^=l:&-SKX:Yu0Z\NNu\;h57KSZWn\p.JDZkre&Ni2NuL%ApJmh:trV*
%oU16R3\j6\gOU>-R#b<HcbB:4ZI&t*M3(\@[9c;@6$QVQBZ&K7h-?@TG_AAsR4bZ"FIZf#/XopGSBkghI>`AK6iUHgiMBmJZfTpg
%h<h+uM,eM`ff8PXDrZPgU=V,1G-^7W&"-:QNK$<:,kF7h7Z<Kn?R?Z*-aI55$eE-fC98VHAk#s1XWC7SiehpQX@8]n9iB5(BOhn2
%(Ne$#<W]D2Jgn,?4fr\.;ibd5G:q:"Y8(5gk8d$d^=;%97'>^upU9K69<RR&j?L[hQ@jDVR<nRoW$gi<I0.Qr2XHM%kSHj'EnEl=
%L`=Tba+g75O#&<<\UOJ7=t&.>\ohss:6h=&RcD>=P\lg>qBtrKCGht^Er2gcfqtirp-G$Ps)Io^<RLLZWT%Z05s'JZDJ%mfef<C?
%LB\1r!B:YG3)6X6V%*tnf;T0+T&p-CZqsoNCrFZ^GctF+PDu6>/oP=\gBi/!,Gh\lA)Y[1eB"bRf"""tKf,5YaNf@1CM5&3XpoF'
%R96Ef834Ibb]m4@"JY(N_aBk`Al/8Zbf:aSp>5<(nd8A^Q%JSBO2#-36UuC&*MSt`Cbr4omuDga<:20,=m/8p3cf!ta23\&Lc$WL
%F@?+>a^'-&(g$:BA=WRA0=D`(Y.XcPaL/Mc7cldq.ij(#fmNI;A3"Y$?LAQs@8.>ggFLcX]>75b1H9>:qD7rbKXao/]_`1IBtk(6
%og-5r4^#1n<Zb%=*;ua4pu)?0mIn#6JcP`qVY'fSh<r/J]h/K'I:17R5KqoH+V:,5q#la>;21BH8#bE<Fji6n\)k#@Ap%ZZ-IPb%
%JS5t,#+ese%BX`gcLKuoF*h3[[Yc(['4%*6o_c0Cc+]Heb*C3A_6.D=BcOFVG<Yeq&^M7T'rk)fo%\;\3N'UD"K9sZkLH)oep`7D
%\I<EA9(_a$(XEW;`O?eFe4jMD[3"#A&ku9BL7ENM>0o`3"Xb7Y@-C3(Pn/<3pGj$H<3<i?8f-6/JPYhO(,,.*qGVPidI]*Gp2"fG
%fjp8:j"&R624G]'d+`@Mn4d1sK;gtrNndie-/s1Cf\E9B0n&:=?"FcV*?u.6,`!p<'QT].N`hgo.ToN!ksj[o,o93cbGY<grpk(6
%c;V(Aj=/s4Rj^"fqhnT1s7AJpYJ)75*kj#W1'tGU/&URTMk@.9P!-/$'^UbLrh(@UhX57k9ab8H,.<^C)oiK.60@DtCr/^NRqM=O
%p&VR4,]('nb]qhS$_dDKfdj4k;jG=^:[T=s[ka#(i4AM9[>2/&dNcG*A`LV!LD)!6E8Q=M>%&U#7.b_7BrS3@QNuhrFgos-56N1o
%AbE*+Drk^dFg-AqRPHcCk,_=Q)So@*Ctk3b=\8&4jc/9AU>*`I=cI*%H[D1$rd>n&>;?Q2'0R5r$X7GWhN/toFY$?haTpF@GAl!J
%?+O-o?`'Ek`S/[2AhIP?rA$<L\n&'`8RlsppB)CH-EFVFYF0Vff%E%J%GFQmU+F%dg0(G?eEa*ag3Q?D%&]*W9dQ8e9q%Fq:Zd*i
%"+-<YSc*JNE<W+sQFg!$:ODDqe0'dlS#8X_=ULr[XnWL];%"n2H?:sY`0R)u5*Nr<5:DaJB+VX0ZBq0.-)?e7pt;Id)l[K)d`F6Y
%I&s/Io:<qJg4rJpp?P?,Y#n%I-^HY$dqe[a06pT7=sdNk0<uPSeY(<u?WZu#`@Ku-9Y9]*h<W,,'/#[71`Fd<Ad:'6iYG\B!u[`d
%4l+j9!mqK\YRb%R==2Lm.\89e@8q*dkIL.ERBl!kR0@#eB\0.pCT2`#-"O1]c.iolMq:Q@GDOJ[Ts?EFE\fM1[*7OSF":7)httgJ
%oWI/BXo&J?XNH7Q6*Tql5IainXW[Zs"\\+.@.$<DfaAV'nCi=Jo=/tK0jG[h7>5i1BIe;@kUH=4bq-[K]':]Nq1=X>)fNLbf"kqY
%,^!J+p,S/IXefE8?b\S+R_YV5T+]iP.'p:mOP+E<H5"]!0'@kdID8R`J%F%":R?rSATUST'R*Z"F)DS9rt,CE9o"`+?AV)m!eY_@
%WB:g<ZqM2(ome*%a,Q$X3r503E]b7uhOc0[<jj-Hm[rr:YRBM2Z$$%(Z?50MA0TS_8Y$l"C)WkH/6AaBG>Yts'1(.ulgrj%AX=*S
%&'2Kl+^+EnK(ig0^KPqXL#rIhh!ub0E`F536Z\89"6[X/0XiY?@AeIIh'LD0g%[Rf.,/DDOB^*"H@?WuLm0<N94]/i\E?@*W8QM<
%Gti8Va6s`dDn`E=f'@c!IEZ&&kgl1fUAlXMS`e8^cUQK:HMF;GKo[qrNk>[FYj=lV3&@/n"Wl&$Qo3!)!V,T5C^<Nkc>8Gnj[.M]
%)'6J,GktFX_g"eFT$`>:,(#p=X%(:]difRXUUN?><*&KK5%)_t<q!kcQBs%u[KetY4a]![h]@3kn_tYXJZ$s>O1&76UKiFYYSd#/
%c[)_TWO:r2*nr)Ko8jKP05-ItH2;B&;9A=W&:UL')EN<7#OpjJ:8^r>;6kBV/fH&?cF-Wl"L;?'^WaD^>&Z`!h6'i`WqAK,<ZS?k
%%??esHutN1Qb'TM-P-@9.2fhN^GLgu0Qb_&FI(E[FVf=Y1".50!\*(7#E`QXlmm0LMcue6GHhVT]gqHj]2\1+Rmr:B*5*ihD1(s\
%+/=4,nhV.[bSqK:T3Rk-ksrf8F&''_H.r<ke$54g3tstf1HkqAI"@JDU*W">XH+e/k</<rg5WL?[T+OE7ZsXN_*/pT,FY-Xm#*),
%aVmZM=(d(Z(,**jm`E(?!HZ%#n1-jq$X(i*Dg1NuqWar9j/$Y*W:phq+%CGkg&CNo9Np)6K:7YorOA`:?2_eK(&`C1-B2R5-3M?h
%>tnj:cJ<SXZJ?uTD_#$=h-6r09V-oq@JBk'r-]j6qi18\!Kb(C=LJ_9!nG4oD,"h2NJ4SE1=D!'e(q,=T6@_EIp3X3+#Y'sck".K
%-s5')luQn=]n=8B6:5oXZC3OPYNn'cp=/VF1eR`U]5.A#m=DIc'pm>p)f`[lH*_O?-pCP?-FC;Mk(XIDI!D:'8+QbYdehMPUCk!D
%+4C$UTfQj&>C*F17NQ0*V-pnLa+\b'KKa4/Jt6I#8tXXjA2ik[6m%:$q*>V([b^5@_&.4A!0.f8enXY^^[1MKH,&C6RZA8rTpbnV
%<T6/Ea^3?gnQkQ9Z2(JHIaX8;:innhGAOCTN[G/cq2)9"8Q4Sq)gj#f53DaTJ_C+hq]-1=0_C*AGkDMTg!#]GlG()Ts4!Ng[qbg7
%]is*hdp('Y$MK.Sp6]`_c+?1=J+gTlWKCapoR00t%gX#b7!jOk$/l#>GCqh1bi%;;GJDpO^M0_%<ju7E9uK27p5YLdZFe:jAYlHO
%/?mk8Wp:IZ_!IYt^lNlqo+.NH$;r8!NQp1Dmb$=2on54X[S\*8]Dj_XQXNU,:R]+PmGJdDQnmju4r8!!rT/g"rgfIXg/%*\2L&tq
%c0RFaV%Ic[VGs-(65P,cD"_;K1pVDdQcAKD_m@OYQ."=:jDJ[Zj/?!.CE&!d0loHNrS+16aL:bMHu-U^C(JnNpWH]\d5*rK`-FD;
%C_hoQ%%h8b(O(**p\m?<F1j:,]"'`6mXNH,/(99=qTF_<Yk3BjU=E$(a*[KIKp`m.FMWA@h3\;H9b*<*o6YtrY`d(BWU,n`db%9*
%(['m'CoK7?EGLn1IQor\7QqW<j5`\(PI&8QZjCMl-g7"s/nT2#m1HqG='rq(bT'iGg;TD>:&ZHQCja#XC='lGK:@5la8(11ou!es
%%I\(KG.BFHijCQ3iF)_jnTB5)%?T[Am<8!/(2\9\j66GXUpbhAN=?HG%3LY%=FJ3M."%m*2SVb.4kk0q@B\$PU18Q)I!F!&p%&(J
%m;kLefBTcMF&b+t]cmc1G_^UrFB:$ngVSTSfBL#cO.h,k=&lHm?^I%/iTl&c;sIAa9r):$Y0B[Ro]l&ZGZ-hTFg'BdWE.n\gfF(T
%h0ekF?RNU:s1P\4R]a*Ss3f!TF_ImcD.I("s8DT0=MnH8pn09kjM""QS,G>M?Wo+^V4ATn'tnJo%40TUg2iT&WE7__f1TPUZot<N
%cJHkWY)2jBd_/C^f_`.m-Bu38QhNBoHZ^]bmLE*tcqU6E=Ba@X+-U1Vl<^sTF6i&(0s9g7@qbR<=7lpV5f`R](-Pf$9c'/i=KD>Q
%VR"gfqCd&#kK3M%l;amWS^j]@im>g33rRqWSi<ZP]j>Erj-L#9?C/'RTt=b-374efC%%\mj)\\@a5u9uk*au2AkongV:13GXOiYM
%Xl5Rglub/8lcS#kD-?',3d+kodr#"B\]X-dl$"4elfVEaf!LFa1I'8;G/G?(^.loQH/ICSp:<=CA7kPHI^a*-)86"tCV(B-=E%"u
%h=[&Fbo\;X_oc9rL7Wm+p:>Uc/Qd#F.s3't?IfV;?`2Gf2U$+:p%dhiFg%uaI@7bi>V,VtZ7_f?mW\&;DS;q8F^oUZidCXi9\Jab
%pP79eYM>-$ps63n>L2O+eC2],*m<hT2ugNSIJ5m'g$?Ul)*)g$FPjk#Ng2AG4l4eVIQsq`HhB;?IAQbGne1RUq*r&l=:7.=f7ePp
%HG)4,&t<OpUiA7a]c'8E_^k8f2RLZTaT_$R4=,8*rk(NUKDO<@*csO9T&beO07u'Tf?_"4`*>qXr("9K`FF<Rc4n=V5PA__fP?1e
%m@fsU+bs5QbNW%l'>7l>-&6i<e(;dJ?L@X[=)7DjH8PpSX6]:^#=oD2>sDi>>&q4C$[47eN7UZnDJ]?@>SOkHDH@GfmX)LVggbVR
%GBMji<=X@eJ+3AI14188oQXSi3llVnO#ks\lDYI#^kccY)5"f-%$"?&M5Pjkgr*.3dkBe'59@Jue*$VB,Ios;0=Y5ePGagE4_&Ts
%1Ag>7ebN&:1l4&eJ&)sa\]Oc^1%m_BA3[d,rc:^)P`b,#J+("[?HMut>8^\6hZ)N35DS+n7-"/S^Sh'eVg@62o',fcAQ*6UE)7L;
%qPW?;iOA-0;YJSgg>ks&1l\lcDs-ORk3%4X[pE,kT0=53Mqb80&nt,Pp"Ar<cXF]F;g.<P28bkGb'\O,I(e:U6/#^\E:n<0oBF]?
%`q<X"dktX<:X;>\6HL&]REYH]?I>'N7cg^!LSkb\a7cr+k/>_`ANI4^=8"857i,,Xd,l>hR$4PUlKR*Gr:fDR0]""nA$nF&--^&c
%7l@[2U;gF9_TjmmN6_M]O/o,JRXYb.nXhuBVh2.!BtUlQ`IAAKmJ-j[WXFHAR>pG"C1gC!dJ#h7BP+:rKS07U.PPK3:#,)N:M^Gj
%nJ9eX'-#g"&6PAk?c8YS*eHS*:'Vg5:]-fp*W\IV[tOHO3QAY*]oGf+^U>qEFo)"0?QXd9FFgZ+Pe\Z7]n/fOUM';#eUMK)Wd9s-
%#"@a8C:`'`D7!A[G9G>7\%0!fl1K4=YWqLIU]:=2-`RQA#pdj2%6XTN]e2OhH6##klkM3:A#O^=W]HO`_0!p)P0pWrcfk&s/:4OJ
%oa`RU$cJr9VF>+#BNj2lH^uch<5#TF7NFFB16G7V8nP9*V!Q(Op!/p&dk=8oTS-<@DP-K,jnI'8St;FckOcN[0-,J%0q4,'m<_-I
%JorW]XA9YP+qC\n#@@s*`EbhR%I.<h`+K')]CV1QLL3gSm[kI0s-\9U^>0GT!HN)Z?>!V8VI(S)->[)@?Q&W+K:)=uJ(0"$>qKL:
%Amc<BL+p73:&Hf]nKN9%j]_?h%L4=>o?+8T4DVk8(FSY>C>XVmFqTObE05PZhQL?HbL$W'Y0G'Smr-%7K4s\$NCj>Y7?I$*D6kNO
%(dVX5qq@M;m2Q"VP^1nt9Fq-&C/!!6(tQ[X&5_l9\1oh<XbQ87KQE=gDk)5-Y(qg7@ibR]A%,ct#:_`*oG*Stb`Mg<\q[h1i\k/`
%ra:JUR577%GX$6Ya^?d1N4=Tq#srKd0@:K5*9l&HdD\?CAuufAq5JD5$Zo'LbGT:SW(1Gu'`4OXS[>q[&mPG+ALsGJCMi&]c@n_S
%/gPQ?(t&.WI!s7_=(LQ;of\1"BJ2'l@h_$rN$ndVk=Yi11PR^"1sZ+,oE>`a2";WRj4cB4`7<V+S:A]'*@J=/YTg2CcC?uKgW7Dm
%Xj-G5+HCgs@kb<q,4iD#WXK4I8C@>JGB<9%nW_C(4GjOkfSg,KF#bu]"$ESp/CjNrIPigddYnYl&4>7Zgh<+cRCI_aRunC!&2\Zn
%e7dDH9nbd#@]dU.i+Q:'\>lTQ+$1WMh1/RT7pig-frpJ*lf7cd%lkSK<fnR:@$AK$l^=e'QPBIN,n7QFB`bi^;F*m?(iA[;Ftg#=
%fO-V0bK>C\/mj+,VMPEb0?e3UTDK9Nm4;mQ`mW%N]::>BB]!>S+uO(!GTW>G6Dc4M9$c-6K9#Q`1KRI#(HH8bQOtSq$0=&gW<t.U
%\'&coSJ5#P%8_!lMfXXG3Ob;/VXHTU3#Q4`Gr^+Oft(LoI"g.u+%TQ<.;^<e,)EA[F2"BhCP^PFO_%eSHKp/-U-]c&gO8K*IDr"?
%i+X4=G+<L3["u(9$=A]^]6Nc_d\>O!*MgBg66"_SP]cj`S)d'oZ.=fp][D\F\<Fn\(6@lV71C@3pACHHle_>?4F.qp?qq)f?tV$2
%0W[OdSA*i.MBLGg0P"_a\8ST="O2AuOuf("LPggiBj>At*h&%@\q.[3[fWm+P/@gKg(ZhG>jH3C,XUTpC!H\k`oC0U*<!9s549R"
%HAPa>.f5?(7mm%G:=u@^p2OAppqbq@.MD_Y^,%(g!s^KTcj)%0&beeKNSlFO!AO$I>pXWh"fjY19`7]a!ejdng#ogk/t",ajg0Qh
%<`hY.L2js.9QI(S`2g-adiR$0-:,:IRf8pZ4B=Qq0LM@)ZXp4dl:Yb3bJcUdC"$?+Ks1sQc*$"U[F<Z4N^EM=D"^P[@"OEt/&']]
%!WQRP^=h,$RpBaJ`I(Ncc4hDX^.t4/CS;t3EoIZQ;.5sSBe?LCB00%$^>,g3%<XEd+UHXQ:h$3!eXYe.RFBd%if`"h8C+0I&/mA:
%_jf'9PbJ;oQ4gQA3/O6Xn;R0&JJaYSCPnTnhSB=n!4+mWlU1k9"V;AV$8Il8>g8l?'(K[59cJn^M#X`jR_9cBfpV`7!;\%O^Z>tR
%P`(*r1J9QnF8PB%F0]I'(WF*k:Q!0#-9%)J3F&%_*,7WJ::ELV&V>I;:WgP_VGrGr^hiII/h<=Ds(8ac$K>LG!]Loe(OoY(/mp&g
%I/*nN9[1QJY+]Ms#gNfc,>"Z7h$mJ?iDb]EaoeD84n5<'jABN9if@)^BWYKF>&5\%"^C-9\9SE$E?sa*&J?`502i8p-%'GRZo!Ds
%OZ".VCdh>S6Fk?TW.T/OYSHd<Zn)S@>Do+/Auco*c8dS>@=1&;M,l'o2KK,Fj4/a1Z78;b[P!$Y[O8Lq<*DC5bf&Y9]2A.PA0<_h
%codZ,I6<Ia\D,'A=N$0`8A1r'DW]iFX\EjomqBHLmZqtO6YfufDYkT$lTg"fLNZP_QHo_Bn[cNlQiuEO[!!D2kADFZB\lQ%:3!8,
%S.hah`So_tBL97^ies,,Zh[9UEi]s8JQ1qf,*#@:3eBebnu<ocI[&T96l-oD(ZIr`Z&u&hen1tej1jc`ahf#6.;e>AT[^6l0*c[U
%QZJ$gd',VnB[bs9X:6dg,%dhqp409`[/QF+ZF,F-UFHnYA-ThG6YX`US`*6PTB%(0kN_BTf(/`Fb4r>+q$8br9?KbTQ1K3]1^]/^
%a/copA^!GU7cDa'GI2j;.P;^I.BSDR4=k5t1Pa7$Pgd+m[Jps0K9_YVFPK^,E%EEgW1egsJ$)nKL-!obYn`OC%/g70aiDl>]`"31
%Nl'2/.j$FmVp5Q`-.%b)-<!*'%Mt)p$:?o)oB.g;Mt``QM./8.5D\a(,Ln,:=OP1_q,'dWYZRC=I=>./T/U?@&o!%XHZK9'<jSOS
%m[7L&);5RnoO+C1=VPfde$'1BKmJs%`>"$B<@d0qUoIJ$#MkO\B.P+OFjO9SW^pf.HskVT#\4XXYg4`%V2M%\fNRn,T-@o4fG&F;
%%SWu`\j4HhMHe:8STV.J?dO]TFoXIdD+Pi47f(-GU<o9dj9^0k6+4FY6NK,]D`fNZO,s`GlJBRb;YbV8JkNhB(X-qoi`dn$c5/%2
%17+&TF>qYDnoOW"S*m*DV0\-_nd3n#Grf;]/g&B9/*VGokH].(UuB^@3a[=g?]R``lo:P3fkZ\mf:trDCaYc,5F8QD<Z1-YSM*3o
%Y:%Q2lR\S[5F7FU=uXn*P2%N.J=U]Jfm5\d>.-kpT@oWqQ&N(-<,ZA]8$0Ah9I/mM5DUXEXIM$,"_TRU"JrA"hH'S"2kheV+dG*M
%X<i#LVPqX8N.9>DnK1.`[#(f96Rj*TcZfdG/LSMS1e+s334>7@iV\Wk4t4F7^d!#Jh4Z;uPZQ#A.7akGjd'Kq4hjRdh8LC?=bpu[
%VMXBM8iqhF@qt;mar=Anrgmr$H1E"T>'%8\8k*j1lmH=rIJgEbLe3&C8Z&[OjWH26DI.'@^8+8]]m<rOml9]0'l_i4g0H6!-(/?Z
%VVQCQfa8AR-Lr^>(3#HX?P9VAiWPf\W%;L,MA<LD?5$`RQ[8MTkLt/r7d^F?oMrSIj&j!jf;:;u1N5[hPkTLS[unmcb]gEK$"Wi3
%!+._kirpE>da8m;l.H=12;qD`chG&9NmklL!OL:\B)-+sA@,$9/<YBX32c8HR=o<$Vsl`3s/&$Cj3#Z0lcY4!02OMN2Q$BNX>.si
%1VF-,<AfWGD^?snFuf!`<9T0mfC1rqH=gr`/[X*Q"Bj_&`5PnqQD0R%Yf-&][arY4.6c#'-ef*+jX74>MR7!G)O_g$OhS/HFBjjH
%;6=B+mhAcCK<,@N()Pd"9"CRd\(;9-b\5GE6XQ$C>T2cdrc>'mjO%*&Q*/em^K0@^?tFJP^`L^9UD]gt23;?,^K0nu\O;drKp98M
%`_,i&]$Q=<7%%9[PO46R,I1.G1@d2;cYSOs9@m17l)6-7Qr;BR+7gE3U_$3t_;q.HdP)33'iQqNf-l4H>_6jV!gTCV(Lo]n5t,?b
%G2:2OVMoFb:Ks[KFD:4D=\\72V4L]r<<[e:#ph\S%uhHC'A]@7cu'79+U\cQ0d`[2R%f/SH)Ya7H#N8;rN%WFWd-47hQZ"rRnDC]
%o<ahJ]ud"U%.DGES)0V;ZdIA0]&UIY#::sRKtJB/]JjV3#u6(1L:`P^\@hL!F2D6G+0N0KL;Vr<jhl6-]qM3>s39g5DK<%8H;YXV
%GsO9S0Gr\o"Tqa++e;/`S_O%kiemASZddVi7CjjM0Z0F8+7&BW,$rl$m[llI9L5]`KMJ4Of"h6J-_t0kPJ\D:N\o]C(MJFt0o[d>
%(DT[O]4mSjf5]KMf6%G`Bd#r)CT0r%!J/3V'G39p,dYM7W:aEAC"#2ZA1ZY>j?PUKBEU7Y\nElU04j#TLa6m`1GAV^WiMP5e4lk:
%Z->)rMWT/*R$ecQGf5d:g<O!GaNRT%%Q87(jk/@qWm9jN?-^YE^cK)iR2;lUmH9<?aNWs!>Vi4ObWOG0r4*d6G%P&V]GS=U?g@Dk
%80l]-+n6Z9?.%,taO,3tRhK#l2"WOI#S(/JKjHZ14>TtC<ucPJW<UmpbXHlXo$l$2V^cgH&Km4W^M0sHmNe$*GXSEOh,8Z$daKnr
%0AD'/C5=_sA>>"+..jknMc"FX*b=!X4n7N79bXP\4RH-/+gJFmKgHlrdUqiB<C_]Y0drNjlIE&%3Yn]Q[3k]W7CEf8P.ciadG<%d
%.MDC2X?'-7^YWs'_<-T#a3rAc8o&F%p;hL4jb5.&0s`rb=PQfM(4$Asj"Qgt[9P[O2bE_Cmm<Gqg.%7l<St44Z&jioau=/I]9FRf
%qUUWO=_sob8[=_mes.L`CoHqN=_oCL,b%ft\p54I@EJq<Kg648C`:/)hiD?fIQYbsK=)9EgIY;7;QP"*.5-$b\sel8'@sfL@c4_b
%Pa?s.DC=N\[66TFb3Sl$n?=rFb"DtB[$d/FY;&M,M(nfVqf&F?lM&gsbXLf)V=bNeV;7@qnY(KVVM@@f>+mue=`K3OY<',CO\7Kf
%Zrm:fSC=G!-PM_;=/8/f^HD87&/Wq?H"TC]AHa"o1p#0M)EpU,?)-h^HbN!g4<lUMX979$3rAl)q=3D.U=Ohk[8cl*k0N@?ZWg)o
%';%YBqVI`h9_Z?S:6sc"(KR'>[H_5_VHR8q=N>1nG$h(bqY$<Ig^4it4=Mg/!H,L@,Ps5XDgQLTiIm/fh+c^Qhh_-2,JDh*UYhqA
%03N"57sW4*++<h:M<IE#UttDiAgdK7:#oAY]jBhKq^n058?^,ChBp9,JmOXTGBc2nE8b:`&$:WU.3-W+]@/9u]oGf_4_5r:3W8np
%cIZcRZJY25]EGaB]O\dD]ffB!4n>2]`ngT1<jLUg?=Msg;0K-9Rm346eli^."4-,Z796VH.>!/"/,H/NK%q_R,bTU/W_eo1Bd<X@
%l:.RVDXjboQo5q<Q7@)trTc0e@.UD7bst-J$f5qYp7)K8h\pmaNrou>"@WrK$Iu2<3*:4ioQn\&<oGdP/(Z_@k\Bp>4dBJ-Uh;Wi
%f2G73E@0M;^3idWAO^.;(hZbtE8*uYout/YYK`R0<)!sU`\j6/M4s0&/#:jo-`J(dPM6iC`Y?r,C97\Wk):bJE:.8o/Di=qN%'^d
%N?qqR-a?H)`7.XPkD=VeXM23EhNc#CQ%)Km!aSLd;e>Vj%_]H=fU$[Ig!.IL9\.nQ`4jOPh1ZO><47X@TK>j6M^],[X"V9m\rkXC
%b3Dn\S'DZD<7Z1'U=d/t5#kWjG`(7``'0kL`j5Gmd,+1:p8P@o,!MK6-2+<=R,-S(:$g%_?L;oFT5%'J2:TU`51LQ@6`mqafVcmW
%CSF)%PLudJWooui>AKh_=7i`,_o09";b6[h6X%40fIG;V,keWrZq_82<*=Y/#d9_SIB'B_*q]\gSL!p.)GjtGFILhu5tl7MP*rT'
%IU\pAYO;36=])<]`'.1%?Qu#<)i9!C<=2Ma\sCtbSZp?'.qj9A@\dE2:X27T]8:s9.J4r:ppZL?(EZS9NS'GY,TF3)'kb"*<f>P!
%C1]r;2S6u8=@O,OmHil8fsZqo6*jen1/s9Ohr7`8Y)&sap_?Mpq]$PI`8%eZWnM+"[\5)NP]OND4>ik`0a/=YOUM)Ek*r7:l:hHW
%(IhD'XWUcD/SA2=i>JbWM=sZXdo=:Nj!N6F^@m\.ZC:sqCJks>a#4ZPS$d;4?OhitlWX8YVmR5eg5^L'^&5(DQ_U>!s2'2JGQ2%/
%<2ltBs&tA:DYN_:SjXFup&0BBq<8T[s/DM;`M-R?])44CT"4Uq-'+[e?iF-:[b^7qa0%OGDI<F0O>h$33Na/hD@0mHRV:ccl^`_/
%97hooc&?b7e!Cs/fLg6Ejn,sIf@6!T/,e%=<pmOK/0lN)$fM;B)k66Q=HH]e^a12':_HO.PU<97rh3k'':+6pO6S<=@'mT>Pd55]
%9N5d?JDNns'sq!ip:4;('sq!eLcdo!S[`'O&i!V(Jhs40A4%@bqGJh1#3N/8Jdl9]BXN#=A2ir8m#cK_FuA#u2]7B:dM'FP.W:,;
%.J1@D.&+,&(Dq'&`g4,B,;VB"Y95`u`hl))LcDt87amYfjor2#]HEJkeV1r/A6EPFm>&P]'[U#.59Zeeb8oQp<e1A9AiCY5b'd&u
%M3p_1.!kH&>/H"T]jM[]l01YT"287u:W&6H`&DT_^)pRiW@qt1cpl.!U1cQ@@SDqMHp8ZoB0Ra2rC],+>>%pGId`oq-@7t#jk`4A
%ifSZ^?Ru".qqf(g<:pahrCbe7l)Xj<g.&&gs*?`95d1EM4%iQaY5ZUaGd_S[?OpLpP[+m78ScGdNJr5aRYLDJbk=3D&"P2odn\d]
%;1=[m#-E"ug\:=lFmVJa(Xa&4?TuLlM#!&M>tCE><[qC2kb<g#(g2E6Y\?HFfiJ4?9L\?USUJhn#j+TC[[qn33BWneO-@K'N+l;Y
%@%mODe5@KUg2.YP9KUR"1CGR."YNfBC%c[`/KIr%;b>;2)JMWU\79;C[V(W(1QJj*!p/m.fq(]&F/e^CW@m$`,qjJk>2JXDl\SS(
%PkCTL1b)*^;SH1i)Ik=M31_PMGpo<'-JaC-]tE+[bS-UF:Fi#\He`pIX_b1%[apG]0S9`9]9IMDX\<7H!/9YEc1>gOTcKP3OW%.Z
%S;2jLL!)0(]*MK4iR2OAG`Xs0k2*5am+!0LlJfb9@BKQID7;D^[_"KiE]N9tYN7@]1H[_#h\nkgI5Md.j:71n:&Y_t$/D'*M=qk2
%bkpTg38TO=[c1B;9ic``-Sk:>,.US(.=pqpQ]l`-Y?G3Nc,r@pq?PfHOgCF3)p]Hbbt`cTX1t+V]e9&OlmI*j5p3A.>J73;b.=$Z
%,UZ*"bKeDWq\X>YhkSTTAg6J[A9dO_@n)L68FA?_=33!]%YbFS]KX#odAtarc.]7)AnC+1jRg#Gi5G@ao)?Dkrf`:I]p2^"B<p-[
%7'@f#,9Z%>KBup2QM0Y7V&d@Lj2!C2')FIH1QcoX+>*Pl=k*j9WEkNZ/eiO@OZ*%+\J,BGR/!qON.VD]HPF?(RU]\n$_%k>cih#8
%,Osfi>1)QXSc[NTc/e%hV48ulr$,V^e63:9arXJ])*$4].5Xs[^ZqTeq"5'?-KPIb(:^27eO!,?1uPYGWcjj7\FgP3O"1dO<B*.E
%8MFfiWfg(F:X,=s&3!5^//SI)(`k]T8qhi(4soP!Er]DN"3VXIg:?"a^3RhW!>E@J?*KH!>t_*%UN+kme?NpqR^g`>C4UHH-M_MH
%]K0#0Mk1(nQ^`Z\W,1NGB%$pmo_DBu"LRVnCT6N'N^%B[)s?,A9B;4qZd-!W87)a(fB'p0-FddAW_jCNXe=o`,SVPM;VNF6p?P>E
%lZtKAl)T-r530pD!mLVddD&k*(gPT+B*>?f98^>gXLD/?L^3B3koak*cOT)[PZt#eGpSAN?=G^=::\6a!1;O&VV1]4Z`3k#,^$@_
%.>I1O]=`0f79&s4Yd0Gq$7$q;>cN>)LOh)>QH"t4q3\,J]YrqKJ8nLNO_].2>0FYb]'7"V_B`9#/U\:S]@0HGHZmnBZYZA%OOiIq
%ZpgcJ3<<u2RLSR>)el9&k"L]BV2GPQntqD2`1m'`na5"M8n*)Xl?pO[Wnqbg@a6EG5sKIbPf0<lLk/FUEZ6T91oLnl.\)Z(1`oT_
%RnQ\SQ4'g$1oQY1`D[D-js(YHUiTEHMrl6B42T0:8Y"u&V!"#UXAD;O`_mlWL!'gm'6KH!Z!s%7p,":ed@JGf"g_A1QS0j_"N14C
%QPF+7dbVX=YU-baqj/&k,cec[4-p]%`S/(M=eT#M.Z,]'8$AfK'W>csg4b;6<jc]:_S[e29&FfjMG.aM_Sc9_aaca&HJr<#jG(8X
%"1?^VW`Fg+4D\?SW[el,k21@7dmCc]#AG$s5ioF-4B-%diGF@t1P1W>4H,q/ESFnt3sfK#a$aNbTN])!0`ST!SrW:6'Ghg6kj'dG
%iF.0:+Eu:g$P2jX":>@N2S\acE5#st(EUT)74Me;:!d`^GShb>W[(rST%;&<L\\!MZu=[/n1ZAUMJkR-E^imh_S^ck=#fQXfnG25
%gf)jF7XjK:LHUO-[C.\Mb\oo^dFI*-LT4BA:7ct!e\[#q"^#Cr/j.A(NY0S6c7_<(O&Cch)f2YD$P-1gN88ZE^G_4LSn8c[k21?L
%Ygutdn_Pq!fCq*pO6]QTWK`u[9=[mVG1\hlaLL^n?StBB;=.\7W+]bT.1*A1iF.0c\Z$jV>^2WcgL8r1@;@;.GBpY<1/I5QKnoK5
%*D64+isQB%9onUDrce"C_nnO<fnG2%Wp3#+4=kSM@HSFJk21>agr+&MiF.Z='XiAI@D%k9\\a<DR+<oQ<&ri>.fr]6_S^c-S%@k(
%KnoK5*B#]nMl5k'hKINb\`gT!$P-Gl2q@VULPb*5`0".tS%6&.$P2":`GP.^_jjd"^>k4u]&\R#)1HN:W$;CP3kk*f:mLh$00II&
%K>j6Q#8\G]db$lr9I89D]'qE2\efq?SR6W/Dr%>"B=es$WfU7<i3J%E%u]/5*F<tm/4?c'$P-/SA*gYAYaZ+U4:E!,H.uaQ!2d(1
%&+c!,_c,>#00IHCnVJHlUC.Um"&&JHgXg6S(EV_29_:.jBiOlE_u/7!HaqX'k8,2^0r^@Y`<gnWQ!G^NZJm-.<cAJsp\c;$=_F)i
%;q3#tQ@0Muj8F>QG=X4S-kfS!BF.sNZSScs"tW_6dFW>(XBek56JQ5fhs[(CV)MlgCZFIRh>"K5JXBRjNW%KLcmFbo>^cj_\k3&D
%Z`=gXppi5$oAe@Vhs]/N[!266bhq8!*A0R9$n]1FC+I%W(]*%'(7in<eZB.m0'<JPWNW/7NULdIp=mLT&(dsd2r7%&W3T`T0A2=r
%lZ.".@=R]gGJcGRhn.XMh[YD0IL[>MN**JPI="'>LOPV<S3D80Ri?g*]5ZZA^!Ao)S#+$I\Y0%FGhModo>g.]aObk?&*r?LDN`S;
%;GCfupN@'>Q*KrVP4@l*?u4O:Rb-h_l\esFkKTI(ljW<p^L-iTmiUC0m[K::F6ED;^AbAPj<a5RbtO?4.qZ]fP6lJ`-Jgs^?gn7`
%^L)D>*6WPs3b_jo$THhDa>.sH_mR>H2SUm;Dkd^3NAVHb#U;%^cb]@"F.eaZfDFO-Tt@H+K9O"%J`lb6>an$sqXrD=G[%buo[Ymf
%Y$1Z?J$h0h+E$5-1*fL#otA%Wg;)Mr^p[S/gAG_q)o:UDWhDLTqOq&<7P4ZE(8jL=XKs[fjd9hUF_gG[G=c#M3ik@(H@=BeSTjeI
%r1d%,rcC*D&'m;45L%X+lj@Ku6]3l\o>A8ocj)f0E-ED:aWC5_d:%Ii_8RtKj7E)G7d6IU\FB.=pfLW_4M2M83]L<Z?SM/T`sO..
%O0]X1einPL*[kmbEu6,B/j>[j:Y:pUq+DeVmkZ*-I>0uB;+aLd0!tH^J'O#%T-3'@]YgAlMYsP>;-u(:4D8h*)lnsJ6Yief]X#,K
%Nt:&RaJ#btcnk4-s1A[[N("gF`bpA5jlh><pF^\EOm(r8qC?ff7m:*_I)?qZc-[qUJ,!3]]K%$]nB8BP*`V>98:>&W?5#feJA+pa
%S+oYn*-->^5`>]/Y!2gLn#Hb#RfM0YCs6mM_l_Ipg^IPbJk'Z8.eF&OikqBMRW8%@XnPXHqHJUmEP(Ag*Y:#KD2\m&7VDt5M;qT>
%#O&%b:PiD=^K7?QF3ueWWOqbaT@J:drdF=alh;T8#u6>96I;U>[A:kS0@N)@R4-dbW]fUQM)DiIKhXW*1R$@CrP>JVlFjh/]!/[5
%I#,YU2\pn%T%>VbI]OJ52b1XEMX6`SI=i%.\k#aIK"c,]#J8n$.(JgNYT;R#kVF+8?WVX\AblRdh]:fcM^RWoMP"D=lt^p4I[L<;
%djI!AbJmW+[/6ekLOINbqj)A,4E$%I6/r?jr9J*j3[5F#iQ;F\Et(;!ccHF,/@eVQlsMa'k1kD+6iJ]$dQ3q_Ec'fNH>rH,o?_r7
%HHH#I8gRe-g(q[\s"bKR=tglD;2Y;L0nD\[RTlFf=4hB!2TF[ra?P0B"9Wd_Cl(Uq%`^ST>'[4Jr:[BS5<X4$/Z^%.+<9`()`GV-
%0N"f0q"rh(d`o\!+.?%n"/n\;^4=S/beADpnmqIW@,LVDZeIFNpp&1)qoeO+k!qoOqW;Z::]';:<\R@\Dr.!Dm$i&SQhqO6m\]MS
%]5Ojb1=\=5\ad@OG4,P)i;J3,Ob<!G@fA6+bejrlF&WuP_!K#j=)VZY#`+OF_]][&38Y:e]Y<>:(7*`[)8Qa'-ZjjbTCC1s9833)
%d!Y):kSn[.EQTs_lC7QsoN;KPPCARFlpJb5*10o5;sEGK$T?U^gBIW8K72t'"V*]]NWaHK-MZ!TbSZ>,B<r*=@HQYPFk@&-eQMWS
%V0_sAE#YY.fnQBWfB[JbmY]`LYOB\EjU<lgs)^QlBtu'ris\E/)uR7hDd`qOT>ejbk;kA!SJc4qpr_A%1>D3D!m2]aRa<`)j`WtM
%=:4_W6Lm>7bFLcMg@,nZ*!^EWSmG[7h!Epo5:6\CC6Q()]CFFJ_o96Yq4E$1+?VN)l[HU.AlRS.fX\,UXnAkkIJj4O[UQolJAOCZ
%S<27+gqa-D%B'gmaEer8Ws/dj-^W[b-d?Dn@UZHdI_)nloin&<>F8NCDJH4J^H_"k7t"8$!iu#6g>2Qm*Hk@\=,<eb7=4G%=;q'b
%Ekei&E/4g3;g86<_nthCl/$hmfkE!C>n'f":2]ss8J?bp]J%iq^V-.;nUC.fclspm2,bFdIV@4\Q0H3_`TNXQ5IL3h'@+/QKL%\j
%r>I459Ih`c!]nV/O!t#O$;o;+,.Ftd]]l&)li>?"IP3kn%r\r.p"\'`@+mIPp7C17eG;Gt['mV0o<>H#1Z&OI*G6$Q]E'Qd?YsT'
%gS_F)To-7`3#"<3"m`hURMeKD.11DQS^u["K5(bRq<"`ml\"Zt#=D!`=+1'Zjo)]<0tu)NnGUs\"7T\-e:):bm*MX-.%Lgt[+fNF
%2;"LagBEmIKlCaN[#&inpunoBDkpGR[@?W+Wi;1hTS;(.0m+bNF:?[66>k/0CA-f,H`7cQDrB1/+,Sqjjf-_Xjj.Y:['-Ol#-cY6
%`r*d<h"nmF?$Z`N>2*=f103Q9-1>Gnl2?##*6cOfg#^8,UJlF!LGhBenTmteN7hlZ9J@:Hg:#<O6#jQkA0%3>f4oHu@HdNo<cNmY
%>%4r-1RlrC%,Ija>ru?T9c1H5bSeLhFWftn\/8Ld]5'EBkbd%OJ[(K4bMK"/gD0*?9kj!8S6Qg_I%@B2p=@3/:UD6P(BmJ6ogENo
%Jh#66dYad2V$TLJ"m2=@DT-6_0%IC2>.)++VmOaV3:`u$q[A^4[&tn#6\1U*k`eOp:]/Yn9k>CG=Y,OOohGF,A9?3IPu!`i9BD#(
%#!-t[iB\?HgX>l:d;EZGA=hWr09s6AH"l@6j(t^m]R>[0C\[lK>D?"-iWXbU`Xl5L&nTBIT$_1Lk(.4k".lB<e1e[fnb^o8=hSG%
%QOA.=Itha>5FaT5Ol8JXPO"LL1&)Ne_o2M_kBG8j:As7TZb#RuCY]W:+5G*_XO!ub3p`,t/tMJ*Kli9APQ&d4HXtO7bW-V$(SgS#
%VtV"8b0K*qp#jQjFl?X/[3G)JFJ)MI:o_UaeNSU=.bgVc+t@0?Q-McW.T!8+]Lu_9\3A;l=RD5P+E^hF8oQmT^Ze"_-n<UHCTS>#
%q_&fQV:"nTf>)VMDNj3mAlO]@:\LD*jd;rg7EQI>K@0)[f)He#4ZpIs^-.J\a2A('kf`MMNe)3RABW(KLmgi7?5gSg?,Jn7deMS_
%+\E2g]%o<!ioGH#jRT3M)F$2g,'e6LCR3+Yrpd`JDib^,-/AV!c*V0u]U'YW?*S,8\s<q6"ZZP1e`G5sr:A[]-1nrngk)JQ)?9$n
%-78-6loK4)d#DM[^haJbC0br:+Jgrf3-+hs-N8WU-uHTiF7?RZQ0W5$_p(WjRMA\'X!5%G9u[<AI%Rf<F!Nn1gu8KN%OnNFIF`#6
%cqPmHV)(_ZM6RcJA1d;XU9dm;1.c1#Ya?W(9SUA@he*cFEU]9;,",ocWf%V:=?9\LhHUnIe`IZc[Q!N[\M9RugA&kP;!k(XH+'s:
%>].jegj>SqH9]%@4uK5[Gd[P*YGKt.k`T*+RraYFF;?bt,Nt-q8#dP7oP"0WB*:6K<fo1iKr:6\freK+X_ZQP>Y_aA?*f?L,POq,
%S[Pg&ae.,nlSbC)F8]fmFh8=(-[F0uqm*o<PQ%q,=W7=Sk>l0OWVpOW]Df1rJKGVKS:/FB[mEFdm@,`^1A]ARBD(+E]1_L4e2fBD
%qqIKokHjWt5-;^UN,tC$YlUti4*9N,m>RVhm-Xg50BBjC?hK<ir0gk?lFp7RS"\g+n'[8ZU-p%,AsTj8UJ=RZg7N>T-JYb+CN74=
%+=ZG82Z;AjCtE0`4(6j7h,rb9$+%%jKgj:Z0Qbd77F%O0E"I6-aS@@AMKc:WD9S6qKgdVkVffYnq%Ld+UfJ7635e#D`c?_(Js67o
%!fq"Q,)BFT*$[0XlEASg+8jN2pqNAA^*UZ96$&)**\1_V]1]W]m(4-op-n,ko_N!p',oE7CFd=R_><&ZY791#AV?%79D\VQHL!.,
%f`t<3[E'<n<gl$t$4aE9@lG29_N1HMg7\CBO1QJ>Cp*aCgXtUG7(O&)KjsR3:9T+$A;iW&\sUl!X=p4Gda34X&[8=F;#u%-)oLTB
%N[@2,Z[R.DRhEe%EOs.=\>j4arc%K:PkM@C4K)ZAiRUZu%O4T[(`sM4Fm<[rZ3L(<QS(+XRs=4<IhRUkLC]F*[lOtRCNEI$R98H&
%rV+:k+/)(E^)koe"ln!6`e8n83laT3mAkoRQ5H+Ba,`MXg2qt4h]E=U8qP[7MaYFp)*u-Kl-^mT"UGXi7#2'fd6j_d0\liLGc6&W
%#2'Zf;'^Pfp`:P$EM:snoF'a?_49C(*Ys"1Ren/\<KeMF6Z]H-kd!`)#jJ>._jnI7+a1]]aEiAlQ*X*?TD\i0^h)5QO=lshpBQ6S
%j%GHmiTC#,(,64PTAu%Q^U@Y(A#1(TPa6&/6Bk4!:c6&_,m=bM6nUeVh?I7j'&OT&gEMk@5oWmRb@@):,YFB.!S-nfD1bGp[ka(B
%*=UX%*`VB7,3FFU0Hk[ON3;1*@"'$qH+$J;X:B+V8'/*.I6JXIc#a%c&EL;4--s"(_)s:lcY+7d=(F9_Ri)[nCguEq[Ln[8p57'g
%5!7!m7_^5g5hZX.eeVs/(SshMJW)KRo$"p^Sd^R_:2Qi9HQ?@WpDe[*,U>[X^:+r<p\6<8?9q3,_9GN&&[mYROW6tD9!'<]V.EO2
%;-Mg9</e&XM'OLOXbh^qQHt)%-uC5fdL$MZR#ip0eP<SB)ofpD]T(=)\=epB8'*Xjnn`@Y#qd&0dRB9Q)Pt\fA<@MQUBS^pQ\g]F
%+Jd+-]DHZ)MWr9.16oD_k+A;jmK=PN/#De),NG!hK6]nUaXDQqOUEY8Mf+JpSg$aZonsqoF6c9W2=8-Cj1g&fdclc_5^_eUUdRtB
%dtTA$4UH`5B84C/5BiK?M0VqM@3cA@rgXrt205TFrbP[Mr7TEpa\U&%djFE]/PKNGKJkk?jG]mZC/[*IfpT+dK1Kb3Cpb6HLa>!^
%:4s/%JZ2uaO`%o!_6\4A**AdM%:RYeQ`K//#Ec/Di<_E[.'T)f0i!-XqtTbO"MMICj.%J@ktYXoeFg""oRq+?/?PBBG>bO$p]b<C
%0BtLX)78\;-ceZKhor4^U2B5UMsYqV%?GA=^NI,[&kDIIh/=L>Zu"\^lpVP(NKLdIWSikWBCW7tCNO"Nk%CHt^095":\:#E@.=HD
%<tchj(-,PT7TSg'XZ)JZA\0Z1["<0Wqf?Q2DY`Y;qmE[*2=PtWjE=263Tsn#W,_NR4tfiEcV7!SHWF[G[5g0:1d5G21htcFghDNW
%4gKMTquMdaT8hb^?02;3;Qf!er\B+5(:UP*p#No\-_e_@)p0$^R?6<tBYc?$DBgC;1sU_if+Tt:T_:&^2T<QU4%LN;U-T0J]AJpo
%rK6^I.ICMN/<ZWF3W.AODnb-YL&ZsTF.u"VXF4+UHSl$u^*?t1i1K$s1ucjRi0P%(Dr[1<0Is@5@O'U0?QL1gCLc3l]tUjni!Fl)
%q.+8bf96^+S!jH.e!HF7H,AYdEmljJjiGQn*:$4c-M]^o1,Z\-VFbQeQ`3!rPr-`,W\p$)WS,6Ic2Tl[o8d\aHEZWq:@H-HfAk]a
%p\3R[IR!Rep\Zhto?Y@lWikeThnIUtn*]o;rm,6EjlYmnmeO25Z?Kbd\%909fsSG]QeT,YiA\:UBqd/5/%gYb.O6aX,4g`H:Oi1K
%V13.?WqK@QSkV]PNL24P)"EA)20bcObpR#]pV6/O[]`RIqjQ<Zo<;DtXDJeBKW5Y<&c_3So5l`n^9#)ZLSf56h2)ql<>,281Y3#p
%YFB>!li+r+[k`A6WP=s*#>=N`-X,o5I_8aS=dZ`C15M8oa\/?<C73#?kdQ^FSP5c45<&H$:4=hhbrrdZi'0)=i[GPLUJY%I<$r<i
%"E'?O6_-d3'#K"LF`en%98IJsY"g6a#pK#SY"g6a$$Mtc6_0<MYH.0pN8XpcXXb0t9r_/$4@V]@nLpp[]JbNYs0@Nuh43^/ZAQJr
%Fi.#TZAQK)3O?;i@MCF@+R<EGQ4e/W`qDU:>]&_?F$W%Z?h`pS5LfjOn%!aZ:@$VirM2:\c-k+kZG5Jae*u4mD4H"Q6qVOPYBR_(
%;EmHM+`RKB,hT)p1bp8AG3_T\3CaV(E@E]1RHX+RXhfOEIaDhmG%"J)a%KEdiD5Bf5+k<gj.DNF3m;H,/PJanVsqY+Y0BRmWfuB^
%1_hK!U+`-?Y_;/]7-[74TOR2D(>%^Sjb*57;SVjDmJ/LcfJ>"aS*IIa6%ZH7Ul(iFE9E4*.Od8L!pc+b<M7sD<a2&BdF-#QDulZb
%b`'[^DN5>)0XHCg+Lg&Uj#qAMqXWqtY/DZ*:SD1PM3:!:>JnJ*\c!01gTC;!,,M*0e/teS.ZZPV4ZuheNK*l3bVM\Boi2h)JciuE
%e=i].1"$_.n/`SL]p*2?X?&&E'KJAup5dJ:q.X3nm+em/5CFDD*5I$qea)+%k?HYGT08<Mj61/l+_]p1E3,uRkkM[C9F"4g;e:#h
%lA#k,BPe_jM/,Nm%(1,KbR0!K4t_rgSUO+aFn(lYqeXS).#nCaJglNY;c-t>`X%Xln;Q]bEHEXrFR2$fgbRkMb<!3s*e3V=aGucl
%S[gVu,"VM!DI,s]cuH?Z6M9CTA&KW6.chKgYSp6"o@qZD#SQ:"D_KLZ9A#ip+h!?hD<W$%o6dOI,B0Bmq5rp%4"/`@*'kjA4Au>Q
%!c`h7D.>ua7Y(afLZp%YD71$50UB7$A6=0,SKTJD[lF^p3CL:9%OP)qhqps+9d_^Dkod?BT`M]@kQMlTDXuKu+"=eI1H,%ge!3=)
%HYmkUfo1u)Zr(p6`ZoR/h.3r+Rn0iE8q@]`UHOD@,Qg6M4!h"K/^Zfoj]o7FL0akLM%,W,'HK,C)btmmcT_2kf;l1N-:YoI#+j)=
%/b*0Gab[\j<fGJtju$#'!C\Cgfg`Ni/Me!4''Q3p]g'm_Q*@nm[\7h)OX(#9.'82[(p+;m8SJiMo51sGc"pA"\;g5cgPe!t-lER@
%XXGr`nMUUa&^j.HUh*L\aW`(-o2`dXU@MiLXKdjFP!#Zk"!ZbF9\0"M.Qn_.]4Z>:fD"DS:R9kR'LdN*MR0ik^&#/1LZ0^LG9#@_
%jPu9?fH(O/\Ik9m9BVMf_O:#omTEYc7h91k@c_c<Q@EFlqs<@7Wea]s=ohR+O3\1jEMYr#&D[LXFuK::g=[C2IjCN7ShK]-B-2>&
%=-l#`(raZ'%d3Fl8_`H*';fj361nGYf60;\f62OK&*hjUj1-P9SGR*aBCJTQHrM.h]ap"ZZI`)`DY+*$HT.]gHbgO,**o$Gk9"^F
%0WR&dX/-26;e,"MMUO7V/_<@23ilmDHkfk._@<*sh_!7p@UQX"bNo8CHj@8mlh^f@)g`PU_m]Ysm-F;+.-.u4_joB3I6c)^2\nCW
%jZ9ZeNR3f7.D(Gf4UoT=`Zj9ZU6Si5]-L:>=FD%JF#C9q<I6n/I*6F`(5G)Zk&("PEd`E#DQgKp4&_<MG)u:2-YZ!)Z&]_"Tkile
%b)00DNB"n\^N6AZE>Wi359[]4f129Yh,k\K?U&YkMn2)2B)P^3f'E1TPeV)fC4KQh[([&4e7=uMH[n>A-H,'X5;`3%4S5pa)ae\+
%=]mcZer2^N0:<V]+S^!;m9;Q>LF9!ZP/ZBEaa1pu8!Tb!)kn/6k4;j,Qh>Vd?+eVIYM6;Dmu>uZT7<rlE9to'qWQ#eP^?6pgSeIs
%I.Om\l/9O9X0!t7g$%J7dlQHEj!))Sci<;Or;YD2pjjfekjl]6c\nX_gZY%QJA2+up[7Y=Q!U^K(@Q_NIVrEhkO-%H+2+$@YJL8/
%?e=bs%BnBfD>;"<B]H\eT4*&X=!-[DT[e?CZ1.`qqgJ)3qrRY=rBIuZ"?Y=Nm'"ud-[Y[V$[@#uG8S>q?,5dqBS;CM06!^'4o]3/
%$i&&qJ)_Xe?Ldc6r'qE1_>bT_+[d-NU]97ZC[gX#_#CrIf6TB%J"15d[ls5"#MLn+]=7.;Ft`3XZM`P:hZj%R=!Blj)aA]Kq4]V&
%5UsA,qDNG"Yq<jMn;!oU]&UU;c#bMc7u6,-r/TodRKYnar'b,H26UKQ]%(#nm#(5KLJLd?iRemiENEKN0cZs_,K9b?:"at(BY,#"
%[QK5>gO,f*"(j#:,%&C<3JO`L\9(mXhJ`l>@@!m^pqu*rl$`eB[]r?/@Mq'5c7npKkA!%C/[s`.Sr$QH6PV1`6@VHDEP76AgFaYe
%ego+;#ubpqNoSg_mc9j?^n7VBSt^kA]S`]!:A2btbrF.@Ej.M+h5qLu+IO/A1m=i'L,P9shoL+F&0ni+Bf8kTm2N3\9B\CEmNU'C
%0K5^rf5t`5+q5C#K9+s*0Q(34ft?EJFN:Z8j3ttZBX4KiF=%rDZq#oU2b>?b+p2fc7CjAWZYYms\)6e<h`EsKHZY(%CfWApDd6f$
%"d\nYJ.XNG'hu.X!;_3Z6NGRgrp7dB`Ft=#=I_o6c1GI45bRLh<n=dD/[i,b\`en]6/i9G)U?#b/>enbb&0*J#uP*^[Zb2%7J\A&
%C<-&X**o"a2[JVMRK30g/6hu*"6Lc,?/QYefU>)fbgnqGY7JP$I;I>`IV`+.(]J2P\5dA8>.To4k*F0H-\N$BEP4gaFQ(!D0Is\b
%^8/,j:-;`>OCg=J,=uT2VWSU-\Yc-qUsqO<7;_lk>.ha&6e=6A&kLW.h9Ee<2SEhX%+R5A(EopjUdPbr:.'O;*@B4?C\HWSVZ?B-
%l5>n4;0-RY\KJp!jCkpF&EEpVd^M]bnN>3lAQ\SrVp![s'-RS,N%*JYJVYsF:N-IOPq%Hs(6;NQ/-3!b0e!KE7"2,a'&piGTR)hd
%2S@-SJA;kL/kjlljp^1pVF05Bc0N):"1B\6BB"h-I,X,:0qF3`j'4/D3%4;p':=@T^Z\l0=X\\+D.C$T!IAgTi&op(!^s)!!S)hN
%;roYQS)8k;!T[+]LA9+Q@?hD^3K=)"Q>^c8%eM3D[KV>@;_U(5J:%mK&j_QHR,#Dk")b&=&C8!'fIL]V#_H@?n@+/8k_(>,1^+/n
%1!eC)1"`YFF+l&hKO`9$[>*g#h(T*;8/!*g=.V!//W3+$"4VaW??A;.(]?CT6YgIfQkDPA2NJa-(2PjWdI[j.M844]ISklG0Z`0d
%GX*(6(!qZVoCWt/e?<e#-SQ^j79uL>V`>0k9je9J^*Y!<Iq]f2&4R"sPX2O]>QOq/GbPH"!V";(/<aM>XZM26?R'Fi_t/6VEdZT"
%!:gRj(P$j&'//qM!Kb-Rnp#p67+3u^3oD'Q;4A,KNso2l=1?-[1nm<=B3,lO"b,W+K!5Ye<9f/T)F8L?5[E#FoXX(q!_59q&4)=L
%'0l[$@cZTmPElU'l6<DW*;Qt4?p/Vdk#KbJZm63Y6$mX_FGG)L4SOpP+R_!(:ZkK#b;5l/LGlLc3L8^;VF7ZQ#`e!P`0ifN!J(AW
%>Z_Ql$b2b()n\I2?[SmFg&R7[\eS_>J.i;[9Z.5g_j+%rq@I1A[eSEA9bB[o:UA$Rm<YB%ee^sgS[c%RCg;BSfS8SJ:ggoIKE.fj
%;\qej'8JS3&-_Gi%h(/4%S#FkaE/ChCb[WUW)oW#P*5U3Kdb;6&;$!b\1u;tNoH_VAdNYDJ;Hb/3lo`CdAph'YAdl^gVLA%CD"YZ
%%)EVuh.(_f:n8K5-U\;l5TKP-![>#Y"P[$kcKj].0)GgC_dXBuH'Um?F)>*!'A#of9I6LmNNd[n^fs^VJI)!Q49?3TR"QA=XcmW/
%&Z>Gn`t7,?dL='d@"f@M,%#_t).JFC<.2o^W`<:@/V@kK!s#W4c'7+s[Vdm#dmtB$#[9)uO.$JsBm'^-W=H6J"CmjS__8lU1[%95
%\+j1W5A;LTScAd1$7*2sdIoM\N/3DOf$[eX5$KE@KO+_*Sf[5/a"W/Hf>JGXLB9'#+?I1C,YRJc(#FYC8pIT9ScmCJF;*![jTB*;
%KY7\dSNpXD.-s[M-"'5FQI'(l#:1["R(?cuONZNB^+R1.S`!`0Ylp%/5&_m#1*;I.OQpldXG;=\-FXt.p^TY_4qbs-"9r;n/-`Y^
%TE>:^McUC1%,2?GLLi5SHnLNm@bMA);Y1iZ\gorJWqI_/9nQI`OD"=iqlgIqhDCB!nf8^MDFd4>@I+*Gjcuaq2;Y^/D[VYddL\]*
%,8Gss><4QDKUT_V:m35f-#"He?@Zi`KFX#Ln,T[="Jt/FE?m`K)?B;%jIZqHP(Elq>A.2R-<RiEX,DQL+CL:epFI*a3H?^9,m48]
%-PjutDBMsd<o5*]kFc/!CT/!C_(rNte8I3;E(fuC2['+BfAc<<\gB:HgLX1_b7WI;aKdROBKaD&`%Um@67miAcN2LI5mD<>8*VOX
%%5QR[-2iF'Z5@>d)Lq&+-@nu`Fa,FI*g$PTbWlJe(-V'f(l<fI,&S^Q(>mQ;+t@\/nL]W+lIH0!O#T"=X6ZWQU5BX7*f3H4dcT3o
%aE%4:>>lnhN>']&P?p(nJJF_,$$b>d"\)28H,Z*mD-VoFMn8t$+^P;okA?EuYsc;Qq&AaED#T9b2P=7E"]Ue('Pk9f$G'"A"o!]u
%<YVcV8sKr%26fM7K^lO#5a\2NYa.g@37B>o&r_6hU3fj)/agO[*[SOC&VR0ZOKd)aBa"hiH"r^O4]]s=k^j('STR9RB??!7=g3>(
%hZV0O%"?Gk99[UEPCuX;:D/5_F\PqR@c0`l,7pM3di1OmRPC7!Y1U^d(CL!)':KMD=Ann_IJKIHdcr!BA5[Qt40/g4K_HuN;r;TU
%/iGik(3m>bHFkhQI`%:_!J#DD%4#*.%/Vmb+W7@!3@;Lq1da>97&oPZ&Etj"l2(\L'JL:Cm1fbL[Lg]D-K_>=NYjH*;:-c52+@SE
%`:P*RX?qB"`fWTm^cdQrS!4!0)`kV,:d&C'!sLQ>R>-7g\koTP440-!Yek:Odd;b8BX>Q'CZ=];&YKVO=R>WIrCmsj\8SZ'N.<6J
%7hhN.-O6>jbW[&U^`2(10WfI=%0:<H9;hlq[r(pj86UY>Q7"5GoXNt4d0W*b-_NeM?/F?`^1?fh5j%Ff7%hd5gLG;`TYTA?>puj`
%h22,=#C)h:.mXjC-.[UH9RbUb9_#8$d:dC()]HkMM%R?H82Jgo/9XQH$)lmAh*eh=2WEX6L(M%/F\=-f)Ui:_NW]F(jA@V%3=_6&
%.H$fVTO^IWg-Y+LE?C<*p+"Jje^+ODg2e6.(t--'#D_(L6oRG87]:*qatI)/`2a%5afN>?eTlE\A9tto][2ceTn$Y3W:b_$9.3WA
%n,kYa^kiG&TuKhF?YI3-;I1.^3Z"2S)U$Zq-QBDq%7EAUe2/je20<81L8K5WTBCdFm@rYDX2DdF.X&IO5diSr/)noET^UhT!M"\'
%bjJHg!k-'5#PBkZFHBT-RT$=W>cp,T1G3s95rRbrd,,8S&WIU8%ROD?+aFQon'tqSq48$P<hV0[)tt//eCQ5#4l?PR9,`EcU#sY4
%0_c43.#Q\I\h2l]ed_2sQ*Cc#VAS^;6f3\3lN7#-N1AfnKB6<)d?s,bo^&=Z"Iq<sKb"rU5bs'8.$_I/LjaBG#fh4bWV#FEoJ\?'
%0FF%bW!h>C5XCI,DNh!U6FR$mBJ'!jit"NRrl+`\,&#=f)AX):;Ar/2oZCs"#nQ86Tf-XOEKGsCqlfdQTQ3'(hMVgU#n[;hr(#;Z
%UHDX5OSI4EjWf7@mDCZ8L>Z"^7uD:4R9Q=PH0D]gn194V*KTr:<"r`jfd-g>pH[t0CThQKGXVZ*(]i@OWWRtB1%Ml7p:1RKIoNfn
%N7QS-N(,b(k+am_J%'-u:E9Dt&rDh3KP8A(A/o3-6r0qDa@3G+553GpUg\_Z:fgBH`WjM9s2p^Q=3tbs5R+.hQXRc4BD))i-@f8`
%>%)eNB4s2C!W`IR)2F[E0\1L3.G>4j%".F#Z"2O"pE"IF"u]G:Ch10b/`RVb6Qa18M9b[*ZY2/75Bb$)>4<Od44Nfm(bfVS]k>aH
%KA"_i'5Ss2.0K3=e1Hd$CM964e'Q][Kll2q<Y)(6#.=qL5;G9T%ni-ThGCnR"oR%GZc*NHeX(k9St^T5=>."(#sim1,Es2%;:/P/
%$EI4M&,$_=9fHubUU1@kMboYt9dg;R)[51L-K3sp66j%G>_cmA@K;B?m;LLZ>Z?m0[Z98?_?F>R`uL`^3quf\,1K!;/4'[3A7gbG
%dACMs=(?d"$r,A'VMcs:CNKu9XqjoB!J%<V1ijZV,o="m@H`Hc*\do!M;$ETIjAA484i=qSiH?lk"lf\V>nAqdn&DaVG.<pVWjI/
%+8ALRbOI0TU&j1:Xs95o4a6/YeDrS?(L8),Wb`S1%L\=-Xc/C8lKpXreA<".-fh^%cS7:I??/KLe]8WBk7_,^@+BKmZ=")f`&GNZ
%Au:BF9dF*,SR=n%s$HO=Wfr.J\7\D/b"%Nr`5Bb&a]HMO;qV4`ggF-R_Cs8E686d7Hhk&!6jTg<^tUE!8'tUsd"0FNIE6:,"HqLS
%Rj)2n69oUf%p^l\"iR8Uj)F8Tahi*,Qh`)950l\CMj,j4>U-5*R33UY6A1()$uJ68XKKGP3f^i20.kAS=;*K4nY1SF5p-P@bf"I+
%@PnEX5=SY,cTnY0!X;'"!*FFl"ja`JkEFa/\CX<L!MQ/s7hV''9a96aX>C)rLe_";dkWrIb;7';ZpeW+kSqrl:on=?Q8m5aXXVHo
%%oC@^6l;@TVHL`V8GLrVF&0!k@lUm_"$[:X9rLLRW<KOt^1N8r/U:+URP'."-4g>)EGpKHjuTkM8<%j0$Z"Z;L;U-E@;#>3B3pjN
%^&9NKLK$1:+5K=#ne?j^'k&0(?l#2fj;5jS#R'Acaa*4VDn4hX(HMF#L0ecgD#'sR]M_7,0nFGqAe=L!Wc\'3j,&(>RDR=u"PSNa
%W]-N>$*R&38k6VVUa#eo+PlV-3MK(pZ0C7qDtluMP;#gAfJ,i[#\<NeMC)LS5ZN&]K=9jn1r6"_>W5pm&)nQ?633g*j@#os"<t5$
%!L>59Y2GW0Yd8WM5dBZeY^K!.KTZ/h@t;b)P5AUF$U]<;o:P'Y#WnnK\``OM*fI?aLe`l.$5s58D\PGp9uNbS-_4fqqJ;NPi0kL-
%VF,>nG`Zb#6n'/]j7l:lHHY5#!hpI_b%MpgQ9iOq*E!^iJTO)97Zd'8XoOmLA-sb[B3)0tFkL/qY7$_5gY=No8Z<(ba+s_W98kSF
%Mi3AK6K2a79`\-O6H:F09-,=HRdSV5LeeB.6>G'4nPBQKft9$JV?1&SU[<r$Gbh%d/o1H"S^X?iSM#@Z2)H8;"HS:Rj)Kn)@=3tm
%'E$9Q7te7\*;2\)1JL'U+NHNN_;lg\,(!ZA&a+1FRG9K09`igt:NYIA*2/-<!_+Q@RjOLOZ3B!Km(bsUbDV#^R81j\MD:s[.m=L(
%6Qc.=UL(n8np[q?:u%<DD!?s3T]F!\O@,.I#dPIHJBTE4ne^&F/_X\*=A1@Pn0+9(L5+6u#R@6p=]1C20trYO$jAd;7L_["`_o\3
%KZf-L!"gUmT@sKH5"6@qmc%%KTnQ"_VDnp?Y@P&/D!b%-=KX098Gi"82ku'Qej(k`XGG;:`5<c!!I#.rPsR=k,mrH@,f1qQoVq$E
%q#G4H5nDt^$@0(Q),#GCj)M-9.mP)+aMDi7NWl2F%s/HeQD_\$;eFG]DLcBLL+O`?JPK+U4/=I%6f*qm+;T\ZFhZ+4M8hV^6aaoB
%%^$7.DD_bS`5#<22`WQje9L5fN5D+K/OZiT5aKHZPeeM8Ub,EA++cJ\9Sj12qOSZ9-qt\^j4Lr1)MP%:At*t1P6mq.Y"Nc6[c(_t
%&?Z?+;YIJB%QQa:7O+MSPK_&9-dr6QN;SNuc):2Fd+2nJJ6-9V5Xo;><.t"oU1bu<M5)I4R#XU*]]^J-/q=nlU<!mF9ORu:p4>1)
%fnlZi4$K/5fG'eWY(_Ppp>RK:$;Yem%(i=Ac86)f@A"Wt4p=mj*`Wku%.-GZaA#XT/`4E1,sFe;H1i/uF2uTm"%?n`o!96h'>u-u
%g-HQ;":L62TfAsUD=@j['rMK6#DK<hCleZB7gP_a,Dn2-!HD]1&TJ]_)hpW,LE6[bQ9c3H.%Tlq$^i!n$GGqC[*XRh.U..:@<5HS
%[SNc+fgQ^BY;=*cg&iA3(Xh-6YT8\S^t$BP1=?a'I&K_Uo&@T-,IR2>rHuD=J<]7Ge&9^3M0:.E3qN#<Nidp["[c-V\DYY%L\%:.
%2od-.5]RpXNtq%Sa"V=KhkLXURi!]7o%HM7&r19?jAcK2R;A9Z?lD3]-W*LIa/:=ba&UO2`%X$,Zt0SF%o,8"[Y\C:'PS'.Rnq*/
%p",m)&7A<MYuS?R@0&6SQ&\Dt&Vl`@j,=KDZ::o:Kc9WAAjc%!kE9(n9Z*aX#F7km#!,4[1=emg),5_o&/`)O18n1:0((o_#E-D9
%YRa%nOm1:b1'2P;Gg]W3d3rW$Q9_l2QG=84TIZ%ueU<G'(E.>b^*bWZTrA%r:.V#g@_N?!&0F^MUN&7@!#81dO7YOY/eEOu6MQB1
%"&Zf`Cm?d<D*6d]1nfEb/qtg*+?*0[JtBuB?cBOU=`[Q:,D@rh@Wd=i2dBZ-!d_G.ETpl?Ou41#pJ"k+3:VP^A[(]DX&*1Zn>&Q/
%0oSX8'6BFJ6&`nc>sP/*m(f@<K4L=t?o/4aol:1cAr8Q-$NhE#\XP"K4d,(I.L@:;ccjHY.a'r/WbUH_Ff7>u'Tie^7j-J;(bLB3
%IR%/Aku7KlGNo1==h9Ot7@+S+lr\uk,2giAa2i[No=,X3<^pl\e8s8#Ql)VKfYBs-g7:-E8DMTN3COWX9Q@Ts\HRI"Tf4jBGU]>F
%62W"9F?I^`Xcrq\3*NVH&I'Z0/-j]TS-k`fT\tssM32\?ae7;s.gUkPI#Q[n-kt)7F:n2$W?rZ1`fNiJ622jSA&A`^(fnlp;$T#E
%H@f7pO^X$e;i6u*Yq5PWg9I$jjIhN$RN)N6TWLsd>R]W&OK>=5+fL;bQoIJ(4<]Mn_VqQbMq6BJODEj#aRi-#Tu$BfA+2On#s2>k
%I6NXf?iY:Q2-@,Y]FifTk[Um=%;SgK3:2(>H#.SZ,KM_SEL7?rUSlWdh3DLNc37anS;X/9:-miC-oijd7b,G?!p;LU8I[Et&2h$P
%'c@Mmgi1\d,_4`3)PH4*=q+50:uK+B-)RbC8^rncU8X_FNCgNtBLI9j<_6KVSEWdQe="g<><SCWn;B-D7[.Y$fq9'KmO&K*0I[4A
%@4F!+c!d7Sli9fq!&s7"1smiu=!7o;$Q1*3(u50S.oTr%ZiZ[B66m40%g+Nee$28s+gb?5<3+F\+@>T$SbmLme;MAaS;F%?O=2r&
%U1[f-I>tZt#4SA.!2tbE7C4)^PsQ$;SC"6*Ys8ShF".6:kb4\G1#IsLLl9:sfI\!S[(1RTI6J!;i4"Fn1A=%i!69WWJ-Y&)Tpl+o
%(mos#O]=]Y#b;Wb+]J@Z/W><r/d*@#$!iS*$V]?ON'PQsDEog6l5.R,e1):9"oi)IABaA(p^.[)#Ulu2,EF&.`K3(u&60@\Jr,la
%K8qe2*X4^DZh3Mc7SBX+F'?(<nXq:JQRk'cfHGK#AYL==d$I(WJ3e4S;':;N/e6B"cNT$!OYDXpZD^d&)RXDTWi(Hh5;l[E(5M59
%j?*\-'HNON/]`PO*fct78IkDCcPG"E!.("eC`,'6MNKCc2Y's#1#"2H,%)nq$3k6\plY&uA#'t3)*f]b7@&@$D(P*La(&7o<+.J6
%:%Y3%<]Po[3LHa2j$qoe7e:mF!K884cj<iu29t>=%FctK5<:t5=f0RjM$N76:RPJtfTX:oU@3&gJYTPA9+m<%@>Yni8]FN+->uiY
%&qs6;(kqF1Z2i^4OOP`W'1&ipA-/-SA3-;<*/bIgDK9::-m"?>elp[c;MLE>L,P:&BdcDLVL_3)?PAr'f1#S>DL$f$93FWt82q.s
%gP;&kE)]Xq3$Tae$7G=&r)#i7/9a.dYO]`EY"d&nXm;"fKL1gLaBYBXZJO78Jf5hf/G9]V8b]WfUD73X,WPWo-nRX`U&g(-+NDJ_
%']Xd8Dj7\Ag'K/Y5O_+E_3/Ojn:q!2-cousjC<]l8H&]ce'PL]N`r^'@CRDk7jq2,1R[]1=>cpe4CsKqCV4%lg8GIMP`\:#_*Bhp
%d-54_9GR[i>QEXa9@W#p!l5.Mf2K-RUN0U:p1X==$Zk&Mm7"qGP--3c86ekZh^l=VKnY>Tg6)#Vcc'^"8iq$SE])RmSr3tMJ_K=l
%K>p#90Q\``g;DQUfL$^k&N+k@31A)]Ldq]K'Np+o++3;s+#>b]"/@"W]nAe+CdHLc2<'<%-m>,SKjoGXE<0o[Unl\ZV($d!>4?4>
%@&n6#K.Tq4\<IDdJYo0g!Up9>j=.p'r"c*c7=Z5sCku7-&LbZ(K+6c^a3uJnh)AK;#;(Hn(#[?P2i9lHV3F%`m3[ht"-"@C)6cCK
%,P?Vg\/OpZb44uKAH@FEJ=mVgW&hDT*4J=t%Xa.Ih)6ij-\?lbd0@u`Bqp[Hao,W=mR=LW@6k0VY)%plZPRG:j>qiUMhs5HJ"7fl
%-)+)mQ5C7/CW(B9'OL\i*bR51MulFTnHR?IA+K1(+uiX2E@dPYN4'>0:uH\,J(P@E/,4Qi1!0q?,8V%qVI2b=%jZ,s?_\eJDL?]V
%/mW"W:3%gB44k3CMbd7jBqD1LRgh'Qi!'YPBY1];kfkN^:uM;/Tq9;$g^Q:V.^97%#)u>i"as?+l(`r$%m=G]EC3CQT!YN'\r!37
%mkej=193NZ-ubbDI#l[,T]C)5.9&%B!NS0c-l<3]Y(IqHl#g5n"sGaqcQ.nP#8rCf8o3q<7_.dYRL$GMIY%)g%-T%&DlCKMb.m32
%RQ=P\KXe`b-]c!+__-WOi]GB`6__TQ+=7b+k<_2O4U5^.YQ1<CDfW9$0If2g-_Sf53<\?+1DC.?L5)>+*(5aIZ?ClLpLSadS2DAT
%3lL.hZ'_IC1#eV!1>`L.Je;g5MaMN!0?SSQ@+'A[:5DV!66DfXF"A9omk24!,]SLj/sosR"_&+l)p1_SjYfb"XRF"2-D$5809UeK
%&/D]7=PkAP@?-(p+O',G%0F]X.[`a90:K+6WFIbna[\KsV1B0[:e%)49g4:o17iWFAt@=ClbT2#&^@AR"fmB[iTg9h)Qp6\K5ns<
%jt\6-8gjlG_Uik>`/2="cc*P29-i:R)E`']>@Ie8T^bt1"#0>:Tbr]A:sZGWe-VuLO[Z+^C-_?emBXXN2/PC>"$+>9#SP$aX+_(k
%W72E*:GaQkUFCD6RZa8,Pk5fJMJ_m^jRnSVFp!M`l#7]2Kr=ATq3MKs)ZZ_a,Al.u5luTMNUAAM/U^'C:TQhHaHd+sG\fpO<Q4`$
%1d#Z(</S!*l#g?o@!VHF>a'W\RWH'ji8i2(b\*/+L-nWI/7aBRHN=)[/H]oB8Mq]p[8j$#(&US$i-U$,ms,3f1]RTH'8/(16YE?M
%i]qFf'#6R_H7pbr/ZSP8mLkG*4LRBH2$9:&cpb%_kf@=ie&*"fdR$W<SN'I_A')h/KhM`+0/QRrU]mtL)[8g&_`)*d&J*]c\jM@Y
%V:bnQOt'Zi=;^jCYi]=SYl,Qp#^sl=he)%"]nN$er7&d>/kX1WOC?h<@H`FWgqI8+I@6hC&EJFsb^A%)RTM[5,_).ihJj]];;mH'
%A-t,IP0G`,(b8I/jENp+V2oe^O()E3Bu(R$OBr)h_/DK#_b6B7U,&`NN!!XA9J9tT)*W+&`sg`=JUJ=aD2sNW2&L,lUX,6s@?,8_
%eVp"kH5M)Gr>RoIntS]T92(**@^Es5iY!q&dQ=`2q>U9e=7>Y<ikisbf@/$gk7t_#W&>"l;Nj:<NPcW]_a78<3(:l`'@2b-8m\]V
%`[k/A+CD:.7uh,_U!M#[;]q_"0q=V$2-5r;f8+hPQu&n*F8_9D[uQFX8E<I)_\$GCMk_s\&;,Gu%)U'89hlO`%;9e?-MsTX0DOMi
%9jpkD=LAM/$_"IHTbI_QLS\3l'Sqb9F>C!7$nsFS(NZ,rTK57S?^LudJWkWtK.1"&4-T2&H:N?<89oFe*h*Rac#)?2:<)EiZG^i_
%mJ`C8TOR68@%u*Noi8>^dm5n8an,%RlQS;J##2T(GGaDX4K%sr*4ZQal!S)@jLtXd.cU-]dn-tE=/LUn)cm6":<2;"L=g$Y?,kU:
%L2ETWlmACi<r^HU>To0gPArus7=7.VjE-5Y&;:a+dn-tE=/LTRI_FAT_<FdMVpohXr/#/\`<U9Yk].)tDY<Hl#1K3mPHg<J)E)3p
%,e4iHMeQk9h7k]c9,@m8Z0>?ks,'PV/Rgf\#-bC+)ObR<mn<t=?.79-P>E/WL<-37%b>Ms5Z@(LQ0Hp>e^91K`fJ#NGa:ru>.+_+
%MnkK-rgdcU.ctPO$KgVOQ*(f]iG"ncRVMT#9EtZi[%tk/g)P)MT8Y?A>4H#_.VQED^G?a#%OO4Sa$a!,6;jIr:*1eeY%65MG5oj0
%r1pJhe+"+j[-P4O7dPAoHu9pmCA4o*a0h_K&tP%u-D<Cef2,R.poXsmCA70j#A_T'8EG]%>VRcn*A7M`BVD,9pTI6q#+!VoEB7K=
%qH@XlBSWM8'ms)V=f:$Q/(;>50IJju4Dmb%gJpT=q"G4dRt#&pN\nnQ;t3R5kEd0qD^_<&ZA"%=h7kZb&*ucc\ri?im#UcWpoX\`
%Bj.frL9fXM1E@9Ids:KJGab>Y2)mu=e5:%+7D"%\3k?L%R+QLcM;,ta'i81;(t+:bs3>_jnpHVQE%mTL'Rq0ldV5X1[BeG,;XOIK
%l!U&?5KO7OLjI2gk$]BLauoC5p.XcSMK]$FFF6qc/N+W,ZqV$7'9sHp:bUqr<4)I&VIJ77kV"h/LNB($_mWQAdn7'q:q$7&VLpgE
%32r/t"-#<!E)#bS(t=m&(7e43h7k`d/C^.m*L#da-AHA1AfQM6196c$C$A[ub%.GIDea.YkUP\=7=;!R\fPH2,q"mop$YSo<@FE0
%'t@pePHdNTQhY*%RBH=,;XOIKl!UKS`*DLUR+)c,"YNbp.gC,)Q*<h:qKF:G9?etF(V=.Qb[AatR9uQGnTTi#UtYbtdrA;=-)sA1
%nPOF<3bd1N7B*/k0h&-mAMTjCo^:1=<,P"J&a?NVl!P?WEd&qcrB&JJP)bGJ-5=F2&$"F(TUm`M7E)0gC,^K#q_Fa6canX$c5(4]
%M^*OQ;'Q3%";_,Z/<04CK<Ra:7%`aLAm*,YC9bQ14M4F)%W7.Rc'57B[j*K!94a&,q[a-CTh+l2P)F(fj!Qc*k2rsVc4C9$_]k+h
%e.!3E>i?8Mp10!.Z`6!/:G^\rcl4aO$U`9S`EgN\+!=]<SHBc>N'rI;0Tc'e"L9:^[kSl?E$]5`*5Sfe?q<aI:s&TJ>_&QNa6pr1
%(n,&8i<($PP=JI[^>j/p(&l(p&nIfZe1Ehb^oa2FC*Mo1-N=:\5p`8pk!9Y*0KdSKU8StNbQH%/c!J_9Z0&^8+=uMpPCoV_"Ei(Z
%KLs;*3hB+9bn(6G,=<K<o'\9E$EMI^Q74u?3pO_8<]n^T?&f7(+=)(\$gLS5Y_53GjX+\B5gd*7$OE^FdssT?2MgVE*n3'mR(HeM
%,QW>S/Od.K@)7#dl0i'WS;.,>\n6g`_SJdi%3NNEJP.Cc)I:^S:FMo]]&Q[+1o^oOGuh*M@2rJH^\IbOnV]hF4PSfZm[D%eX'k4S
%0Ru<':l_n8/*gt+eQCi?Bdj05j"Z?rrSKL0Qe0Hg4d27t@l_+NjL.iqBe82iM:u:Ag6]fZHIDp%]doU*L"X-\Nou8>mb1pA5X=Sp
%dcB+f+VYHO%Ip1/e[0;^*j]H0<%Q%L:n('$l<'KWF6'f4G"]kH(*,4__N)YZ]GSHCi-K4%mWQD_>p%Q3`0p*[C+c-8WH$KIO]@Z7
%-6-`g`tThV9U?J^&MXc]c9jAGCR_P8#>6FFR6^Sj*IQ7&>nWV_IELi@86)`_<]r2?1f=[S`NV>I$[&s9<1%PH.maE)htVM,8gq(.
%h'FZg4e^j>51VB_bCMD)ft`Et8$#U(Mg6S`FI/I/D<"LDE$0<]c]^c^OAbJ]Wf_=qknXl<-a38`!d0u^aFjdKG42V0WVi9Y!;f8k
%"YNSC%8YK,ec@#4^On3NbPCq)cBn9%AtZftcGur)jP2II]TTPOa,>\.g8Jm??5s9!;BS;>Q@q+VD[i?KM$LV0$kXX5c4\RHRYcY1
%1Qb;.@;C8T[-d(QL%m!r45Gta;AF@F@SF_l`\dA,29Csa_tX@SB97EW1D_(TWl[$'<)r!VfeP4lO2XI8i#/SJC0Xlga6SC0bDj!)
%VEH4_V-AA,<0b7n&?*'iR:.AHBS($2_qNI$-+`U]4A),so4`p:e'6$@TUDBGg$:!43%gnWR6Nf5\RT2bFYc_bp9DsQh8R>?/_;4=
%GLTHLT8<tPdQJu+6:9FD,M98uYB+u+_kuhbpcd:GK,r.%_#tJm*(b[TfSeOjNZI#_Z."(pPg#2)$Q?7:Kd/]3$(t!f!Ws`*'u*8+
%iR"hVXoVQYeL;Z.LtE;`?YVc&)ngsuSM7ZPf21HO^]og,Z.V^\S="lDTt=E2hklt5$i^@d%7mn#IB9D95"dWKW`Tlu3bV!&i0KJV
%C+4*6?lo#)Rie@)SP*NcOF2G:MG"(tTsi1AMq$$FCjZ\1)@\UZ;[<uK_OlRETI*]^6DFn=hP70]&4B(-HLt`K7Gl%.BK+LM#SOgO
%PoIK3h"V=9s(NnW:Eqa5!/[qJ3/&'Dk&=4[@>T?,*0X$YaNQ\<((5pD"mP!b"ep,4;_Tua8aq)''EDsZI$F`j$d1W<K0^lua-C&4
%Yb72k5jh+*.S=2^@9o5?rF,b,eYkg$KrL8MDVDPB>.q'p7tD^$bULPYm$J)?El&Ej!&o9j#cLXgI.<e?3[0D7!!CI)4-6G!32JGC
%bb1fJn8T?t;1bkEaVD^NXu[k+;6`!FL^#f,V$l"o>d+>G,)E0/og53fEs^\k%FRO*'?B=pFVOm4`FY%]$^H+:1#]1?C[kEI3h[mK
%\q;e"`=t5I,%_$QR74GV)/#K-,&_.P,e!PKU"]2BZj=+bN_6lZc=@EeAEN/_PE"2H$8`IQ1UT'k#4TWSZ002t(4Hb7_NOL^=CMeQ
%lrBlul3>_\&<M"7#!!:#VNYEqm>PtM_jV#mecjPLr[@rpi2FlD--6pj#$>maVn`$S3LR*p1SqheA+U0^rP<j/P.I+pg1]9KdsMdh
%b"3]iM]S$1*.nU0Ljbo`lS1`_[U9W;kG$S72h(.#.-/pCUsspX#Yo&58mju8dQO4NG@3Y@)\VdaSaW/V*VO1M4?Y)(`(kY#D-@;s
%V"+[7U#V-$I!7F_:G]tOZ&#Y\Q6b>VM=ne.e_N@mb.XuW`Z/;:+AsM6FuATW,MY%0Bf3Q^,YYttS4hF0PiKb]7'q4Qe+'r:GL>*2
%)I:XK[[Y6"#T%Pp*N!`j]4!8rWVdZ^B,$QDa`jnC?.(T4=@S1*\7&N[Qh+BhGj*YcdU;(TM4#ktm_E:&&*PHX04j&lA+]&c,-UE?
%GjX`bN<NYOkUDLA(jL%O&^pl*6UZ!K1,o9Q28SLG6LB[f(k?/#2c=rVeD\'sBR@;rfSoGR5rV,X97Kb,-;Q1+/2khD]Yb>a8u-/q
%%n@sET3hJfS6UAfr;HJ3(\nuCNSjbY[sNVtH8djpEqOhWGk\ptolQPNOA;-VR(X.pG?9j=d:OaR%tEJchMVn%jVqF=n!9P`(S6+>
%aq"(#M8bgJjEoFtQ^`d1rr""t!p8\[G#aN&n")c4hN++J]_d!IrYb*,rMIMDoM$.J4EY2Xg&3#9$'CNg.GnC@qu,j[1S":+o4R'B
%e`Yh^^TS]f^TMJ3YFajV;lQ&9\pD,;qT*oO3$AqsZ=BaJdGp$f4_^PmqCuh5'4-a`a%c<*-#T]=^'S8.MMO`+6l7\7Yk+l@9N&V[
%_>`P2WNa!_/kfmsXGR%rU(`26]jDOY0L@FaO0pl*cT@j1.pOKjN[YBte#9R.Mlo6:3*[lK,R2*nS0GQ6US;hgVBT#!+a.,)'eG#M
%C4iM5$_SFZ@j=.V#.q0W]%#<86?dcs4H0akE/1n(?jJkb>rm3R44ZU2,AE*T@44Sfq-4jsKR2^0@BD;$!HU3Jd%K2[8T;KiVm>q;
%)<pYC[rk1\[(;V)+1Q\Im>K")\]`5e;,4/1+1"O-]#p&9EL$":@Ap*%BJsh^Fbo/OfVm/iai>8!Fh&LTUI]=Bb=rrnNfSb(3R^gK
%\19L]Ame`]RZ%F[)"0@<?*6\Jd8UV3FJ/s479W,7%0RI(@5"?`,jq(beNH>U'Lli;$QLEQmAUB$K1.#4Xr`SEhZdE%>t1pMZJ8"Z
%e04-`RhR./R#Xs.1;<3m`6WS`n0o\4/9i2jeD(J;+V_8n!/"nWG&*Lh9arXfXsrUL[*ZUp26&82I%7$3E:nr:>8nG8/PS'X"UEtZ
%P:MC]!(qkiIRSm`N)c=4\/$4h`N*a%G*:O#2jdCmeG*-(c0D^Ar[(^2`Bm68"E("3f&aAG%eR[n&%k<HB;e+oT"U.:l;Nuh#9=WU
%\*_Q"../cKZ)X<d,>ooE1UskRa?*TeG8sb[3-<<`*NcFt-RDWi#rlRK%8_8*Bk!cTS^6hSi`<k&4BiLdiW,:[h-bt;EYTVSM"-uL
%:JMo=V\3Q,*K;\QjqmhW35r\OMfb:3]S`:b;4UF<Daj\c0%"R$.`"%7\Xo>QiOr(/GU`#!(DJm6Vc/Rdhe**c6+ofE=?2EpY/2l5
%+8m8sh/eD6G$M-5O)p:u?'hatW/<WIGTC001DPEcc!JTseAt\09L0VU^+&+lILB>7B;((=U%\aE'_34K1c2esM,Nm:?H%"BNfH2e
%_-BU$gjPcTV9Fc(QnTf/Uf'Joek`T8[mjd_Xi<-@U9YPsmiRgs##oJ;C]rMV/ie>BO(o)'FJ(?EFu,1*I=r;kB6A".W:)`GNX0]-
%Z&[K^[pZNQ+-eg=kW8TJMp9I&*LdFE!^EGppn"8N9g5H9MkaXiJPE;(O-:&GaG"J$03lNfdr`W>fu?hrh'5*&6Lb*sES70tE"-Bb
%N>s0(0K?NWp/WeHG;%M`[^Hr(Wr"j_9<$9)d&MAb^iH.^F,k*@'Qg8O^YZ,)a-,JmmKN)%Aj\hQ-M%,^c5t)XJ-'NmK&N7TBT?a,
%h5!>/1A(=dF&#,'h0Z1m,_saLqqT><An5F7&UlON3sWCk-dsMZhSnDlY`Ubuq4o6E&M!gr%VE4F<kSk^Vr?aCdMG\^H:6pcb.F@s
%(@.KPKc5)i#AbX,F>3McN%RR,HgJ0RWYqY_b`MiK8djb<7,'t-YluGs!f%/&d60ch!s^KForM\A(8B#'7L^'kOeXu"blbmq">iD,
%#r0U/bH>^./=JgQH3,@E#?D*+8>n>l99.0JCh5*uRM'2o6UD'T`aM^,!%8Y3'pMJ@b/U<%_*+os<X3VY&-?RXQn-e&r7:_9]N:#F
%BUVM[o70e@B(jI6<G9@KNBsAiR(gF93%(=i]m>5bCc%g=GRTt+0IDFP<CcSkPs*KYR``)(h<2TUUd0$PL?3e^Dd'Va_m>n^Y1]\3
%Ho4DpK2!t.FnuG'?NmGN"SHF9;f#n1k3@4&XhHDHMkF53^GY[0?O%5;]^0CiPrD$BndT)cD-00QV_+_YGZ1^m#_uV?'D^anNlDp(
%\jE;Zoeo:C-PHbbjF!>P;9WaN7MNgojkC)1l)ciA;;lcQKb8,uBRR:4CtLN+1nrTpBR9H>q4Y7;^2CF-q?t4"%Z[eC?8>#,Ogqo7
%jOFJ;=X6rg'e8%2XY5LE#<>LQ60USBbA+NX`^eOYA@$mcY\\A'j_#A)@q+iM:khZ_at-:U)2D5rBkVS(8]a&=?gY:?OjeiYdW9DA
%biFc'(B_'Y<VGH`EsM:pRT3DFp1=(_PY"c^k$bq>dZ328HS],ur:)%@E"ZClRaK*JMAXW^'=r)0Ct">^"b6Y4%j?[0,ZKPCU=2;Z
%@'!5-"OJki9c:t6H<dPPJdmZNaRk(@R>6>:n(p-KDVAsGKW^!*;P0#RBX;>_M[^,],Y]@9(CVHH*!kM`AJA!)@),._hF,.T4J+R+
%X'n6k_tX)?',fkjVqKp4O7RZKH%?,ENNBAU,P[g2Th8+=K?=n;kStQ)`bDrtO[m[m^go#QC8g'iPOG_l$.k7DiUe:d#,=FL-$dm=
%gCE4PTku+E$UWO>j?;2&U&mb/DPC\b/K(2]_b3=Q4+bfnP[RnqhTIhCE[o?1(VSWnlT1^sXkg`1hQ3QI#Di;QJ9$I`gW3A4kB*O6
%ZHGXM$&nA964p6>\sspG-A7mO)MMIX7.[Y^_*lD&:+)fB4cV@Wi0r2d^$+H,D:oalQ;F+&"qr3]$K+&Mj^MLj?YQ_M^K45En#SDM
%dGYC.LT6YEWZ[B]94E2K4'\"5!>)T+eHDf#G(VW6O7t+ARC/a:r[Y#!eB'Qk[h=i@!0S%a&0>uF.Pn[M-%!WQ1KHK8$b5j99s&6d
%1HAmF0uRZGiq:GnN]C<d9V_YZ;0[9*k/e.Ml,+Z*M2,<:6tT3N5g]t&.(0$O:1l4);5T>T_+'$W*PC("<'1:.D[3Wfm'*;H74V>[
%Jk1Oq*CgVQ7:2!]HSIC1(=SHeZD,QN[$Qb1I07+Yg_8`QbRWkI>i[^8\X/;l:e#uecpAApCp7nI6[Hk$ZO0Y6PS;/qK'a;@-[J:(
%g3Y[ue5N^V?-hM>BT$%u80A(u&oqigeR],ES8DhQG8(Gt&N.ajdnR5MOcLr+kp7KX,g+KsKMo)Ff1scX%KqHh'XfT,A0Xp18qs!.
%K0dH`[[-W=:<TQp#HMP/TdGau):(;b4i[H-a)%(N[h0uNA`piOLEd*VaZ*=s$eu'KE#tAbE>$W_CoiTQ9W1pC(r+MA<gq'MYfUR(
%m65YS@B@/sX9T;!0.UY?+4jJ_d>.t$*<4j/6hXkKTudT</9Y'UY0N\X:p.A*3U;.dr.(r*Qlj]'<H@_@?]G">cerrJd8ZZR8_/rQ
%nVDl)G4:)*:k\_hirFZ&i\Vu,HPiDurgZ.e)6OVf-_0[^7+$mVR75&]<!eZ)Y(/QRK0G2*W:jAL]e+b'$G)mef-d6aA?s$M@K0X[
%(#8p5_VnO,`MOu\7H1oemR%L#c5u(a@$k0,gf'_A1=qBB=ds^,r[B6ARNO>:@!l/7f;ts<6!5G>q5gmW6lBd=<`pI?/R@^[!4.T^
%mm\:?Y;2E[7>H::7>]j=2!!^k/MB6:3NEq/:>Lt-4Z/"`Fh&X7\#j9,jBp:I7-<Q(>IG%i:+W+"/6CW1Ib6GhB:VL,mn5SZit6ND
%m^qgQWT(^0-@A[0?]ZHW90bb@fh`IM15'`k*A7fT,8GL%C^IJ^9'O6NQD!V6WNR)6P^R%&4$i<@[@2]N0I=En@qQ\9j"\3Jim$g`
%+PZ;:GTmKN/k50UJ,oGn=[(3E=$q>=)JC9Fa>OmKmtm!dI4X%XF>(?'b!U-a>G5]e+46b>b[RRW2jTHbCG;o&$Sb^qgT#.F]D`l;
%BbHU8i[YBaU*@<:;q8\nU4RVFi<BrPobd7:\RsR0Z+C&<^8of&NY4t'hGrB`mh<s[@D]866a=`DZY4XQHM`*a9W,mnHXa[KG[&h$
%FUl%$7[<,Li$L-m0GWTed#mu$ZW",7<dT;&P4hY__#dqdY:9WaoQMVr9&4840G<JG/j\l=Xd5bQjSCB/*l#aA:Tl\'\u7,r8CYSZ
%dJ5<I_d-`^bsC_/W7/&GW'D;A*0Q]0C/("XP/YaV-,F[S&Bk8inn:I#%8o*W,Fmg5!OUOJ1F?O/]ll1t3<Sr8TrSJagMfkA[#&Kg
%FQoqiHJ:7E15^sPFR:](3?nHSFh*cN%7Xp)d;ebOMM\?N6[KpP*6f0k^lstc@?:geB?ZMW()"Q"LG9d4I+PVn]8r/Y);BtH6/$(]
%Ro@4An:j*hbXllI#80F79M#"@=$*kuK9K",;L2X\AVY2IGf3$5UL,Whh,PGQH)7FuH;Og":Df"l:<IJ&Q)nOUeBN=kJ]#2]pWdG!
%PsP$&0XQR%2+nBG!K8ds>VI44`ENr+36%2\6^/J&f16@ITRZZ&ha&`?dWZ\0F<cNlRu*T!Cf1pK\:])Nj#N_J9K1;MnmtuEfnXS6
%H%\M>lk3>D;o'5WC,"bXYn#3!_F.1r>n3@dT<P2<_QU3_fNX:.b;VVqSp/o,^E1CoEBQm-*g>2m-_2"^,e,Qb%E#akkB-X'[!XJr
%=r[=V."O]R(0eHG?Y-MhcIfu#"<n/#lg>\"=7?EAY2W/]f!Uq/+$Mmgjb'WN5Jti(T?IuC)W*;H]J66FIJs/Wn%\hrr?"4NrTCrp
%n=/=RTCd:*#@H@jOi$i-K&Grjn*M_<Mplb5G;cA?24nh(?.X?[G5_+&^\uoBQTotJ2rU[<s7"iO^\rKWnAi:RqW!VhV^YKBr%hOb
%5HD3]P8<J^I@]/pQhaeS#(!&oNFhKQ*VYVeYOf9QcRKZR6Y4DEef4?^,PnU93MQ/hf`OGA`HWLsZcbYpQ6a<+Bqr#mrW'Kam?*([
%d<'X;AnnPX/qS'taSVN,pNT8fi!mm!;Nr38]j%ZUMelF524u+Ue7O6ePrn,V^S8$??h5`4X\2$W$qV=r9@e5]\#rOE+5u;+jd&nY
%U@`,%2:oN&l#B`H!KQ`]3'`kZi'mQq%T4JPp@BlgWd)(SGIKR=OHY5cBotlKQ?j.HNf[e)ioWaXoVZ^tIl]--W<fj")OKhsG:c^M
%],,q,XO;G7#8=(c_dZ0_Lpq4=@qV1SE//O5)T&mpTN85kD:gALK,4X0f-$eKci@cG73_KV<n+#+7\nmoB&u*Z6eCAC.lBa=:!DC6
%p&r])>qa6l1i70Jk=Xkh+hq_();uFTjUIUUDL-KqXA,Rj"O)7=kNSL.F)j/0n(i`:bt&WEZ&TV5II5jW\NdAR`Gn,B*QG@[b%A8b
%j:1lhae.o79NQenZ]P[=j4H1t1Qq?PF??7n)+ec$;\a5dk;nXQm2(oKIX?aC4)NfdW#c+nqm\ICfj`AD,bf.u"\2YG0'QCFL-T$/
%07^aMQg87*Nn1/\SjSsd]+,t!(nEC!44''eGFY+;<I2[njL,;SmC[hh8*L=Hd($6oT9.<721jEfV3/t1jc^QU!4[J=h(dU#q%VU.
%0q2*[%uP,.l7a[ZG$4Ke"ahfDib>7`$IISMlbtqe6]i_R[W?,bQZ:WdJs\4<lu(ETIu<(^p!\tF!405LhTucX>jj$7S$-.?.EOQb
%<%ORp8-GdRlna;h&>QE<L&gPi%O%VM5o]h53/^7P,td*@#;:63FFCu")3#Z&lVG@G3B;f>VMG4T)eM9Q0c2,dTf3QOr^+0pX20ta
%@$m]I>FHU-.F.J5C:adb^i#F9FO^VdZCSSnIc`e^)P(h(d_/iN]bZTjWZd-8qFRHP^>&/d#ruafbSn-"O64nq#KLlT8jE/S^(Ihq
%5+\$=S(sKKYCU;YMiW]MGo_$*NcO\"2E-Z;i'4M(UdPp%NK@f&PU*e9Yr.X3VOPD\UBn5#(%Psj#7VKnR-1?Tm?\0UR/9j1Q;r-k
%p?oMi0:+hM3S+7HlXGI'MgBT]mW0bArW29%RpHWb\ms?EG[kD###^OZUBX1%aV4*TYjN>?2Q3ZS8>[:O29_t,2MH'E^k4N>B=kS,
%KfNEI^sM<SYdT]-j?Om7Ab,[6AcD!9O^Di2\%nGkY<nKdmmWMUR%N]62%XP`;:3_'^$`m-Di_b7;OSm'U<8gdRhKXD3S?)?US!ab
%,5,/'>VdF6&kO,nq0pI"p1en(>W;KmVj#j9q9nLs185s"Y22n8Eum$#=5[Qr.H:G>:9FW=+]]J_IF7@dL.@JJN!mjCX(=X;1.c$F
%C(eudPj*/q4Bq1S+pt`".7%!ToFtaIk2NXsR?NTg#6E4=kLhVU_9C9Q`V'Ui-K5f`p(:diH-okmTFftV2c'guTlCds0H:f1Xf\8Q
%%@ZYeH.eY[G+3n^lQa@&SrbLOe3PjUAMVB;:EM.uT*do>e/]M;H;tMlfreC'J^^O<CDZgJG#$AFk$h7nb%Z].f@t"!8oIg^0caV!
%+U!qD/?&p"ZEGAX]/f8Mf!P2ccAEDW8oH1)5Ep^qWD,2=W^)h+Am-Sk;NblSTOaG:]-63=eI_O.Ub1Sm0'_8o_2>1(kXd?]n?kZJ
%135p;Y$<24[+7Oo4.B,?P)1F+J7\F+/R:%qWqA:sEMUntVC"2?#'p9#/BcLiI(Sas[R\^cE1qTPc3EXsWtI^A%57!H],A[DnsK4/
%Um?[(*WIItQ9P,Re;Z*q0faAmoAVnPO&V^nAA)+V"s:bk%;&Red4af>bkUDF=0Q)b#Y_R./VXqc%#$R3^lY:@d\7?^.[JtT?X`AB
%PRs`ElL8H?d_]:Il5_$=_%&nIT`CkOc&6X2cj<%`1;O0`@^f91Hg;[mf'V%_I@JG`+6\BcA#J=JgUiiP,G<Cm'u\,p\d`M&itRh,
%dhj?l<W#[`X7^HZU]=Yea1N6jp70fb;@s85*Jc7,J-<g",t,.OnY>pXKr#-Z9dm-*i71;;6RWFF2p;[>:k4:UAO0$uejOUS0F"4!
%*@crgLOD!r[b3o'1(,<,\f1^IBfmR*2]^NNf/Q+GTSXc(m/GrfbQN6u1%8<J84F7<FEh+o8XbF5_m&Cn:tEL.Q"710!BO6'IA`SR
%WuKM!K]=B10t#q._(IOq0g/\?1&N-:>1>Yl]78I]66k:$DP<S2C30+mVuiYQI+AJN_Tc0n(DEJ&(9MpN9ah>dCQS3?[VX<EJ;LM"
%%/ZCu1O('.JdY,`3eb%^Y<52Zi_bsMD>5QSoP^E*bZ`oMbDsHmN>624$sb;U43U2bWKs+L^%rq2hbl%-/B?Lj_Wqp5H\R7`c/3:D
%PXbp+'*rFKkeP/+BFJet56?^rbQcddlch0WaMAHKV6Gg&p),GZ!/Z:/$1]=kA<AOG;_N1>)qpjU+0@V118rAmB.$AB#2Dq,7'/:M
%&6^*,nthT;*o9J!m@n;n.VU,iMd.);@ED=9g78J)E68>0,B?%p4\Jc*6h[`i=G6i4Ne!F7rdQ5`=M0lH68M%CGU(WBdMF,OKh#M]
%bXr<mNGZdlcp!+aL;"T^;?KgP31qG0mq5oX6`ceTY>499AjpE6g8V_$I9p-RAm=Fe:eS5tBhf)XUjD5GA5K`HKcF.eoH@<F5YZSB
%N@`q;OM$S+Q/l6=?dVUL+=+)1?>Tf[Z+3,u!7@?Q6-tFsW01P[R\AfIiU!(\ZU'8/.\X_8<IbjWCSM(3/CkVtUGFfDopI;&Z4+u5
%lmk-]]sk:u,e>hOKg8`1N-==1(@gCMJ%"Yb3P1JhofF-9r;,m<\3tABS[SL9OWoJXfS"tsF#-,ZjQ/X$<O2QI3ebA3aWW_,Ok6%E
%h_<jJjL*_"Ob3A0)AI18E3msP&I_E=T4o@^3/U(l&kmJXojue_WsfIh=(d$!<qtXHFWo*?<gBS!3;6)VnRAN"Cl:J`2TH?_YjqF'
%m66j7P;XD/6+AVRF\VnoD(Z6\W?gcZhE]mT-4'nhMDoAgg<kk">i958bog?2J>D(1>.&,B#TGp2Vs/BD^)>a"'&E(oKk:m%4RCR.
%p`HGYf^a]11N&<UKcc*8;_[t/;\E1,.Q!#_!,i/rZSQ]h<CsWpkMR#=G#nfsMFGNd.dYdfg$Qi,V4dI&5a]!q[(j&u1l'BY%GKLK
%DRJ^Hr7GF"a`&:I&"1l#8/Ssm.'p!oE/YaO#?J3(m=&4lQ;J@4Su]^NbBaV./Z<YPe,Udl,R%<TeBDs&4/D>KHJ#In6[pcm0\G.g
%KkppclE&15]N%AqCed>%S+^#'WpO]64qH<Q^KKI.g3jk+jO$sq%u"mkLBcqS5rB#ug+9]8"SfP'6&rU1(;um9,Sc6Be5_FjH\=or
%X_^X*(33Iqe0"d#=O&NDH];Op/psjSG%;2I(97k"5"["gM3hgtZ3]c2V^KR@T^+c)iZXPW(6(*A._;/s.r#,(T[gf8d76Dl:+hE1
%L7O^B0kOj$%'sd(64AaB[^IF`PIT@sguXKMB^$eO6C*CQ0<&H/e*U&u[9ZD<[Ym3Fj]k1jT3t$qW2:&#.3@Gn_KSM_(P6_TEGni3
%AUmR`qDNn%Eh;utI].J&17a5K+jfdc0jNXb6BU"H<O<H&U98i(Z>tU%D.#oNnbK9!hI$d)iNe'^'RpNY@3\-r'3He$d9UlBET)5o
%<:t4D`t_F_-:uZbV=2elQ\,?[0WTb;;@8A_qG`>t+tHu[[Qaq/Rfau#6Jg"a(=Np2IJ9G4+/=trh!V?R+$L2"$,'a@r^3uYDu*i5
%[bG\W9rThUX1J9Z,FIVH,pC.L4p3YD-RWOf6O#;$JK9mY9.5B1'ZR"(W3m*)Z/0u/Kj?@>2EjWrG"g(iJg1nt2AH*<oU6N..7t*^
%'aABs`k+BcO;8QD'_7(91m"(;R(5o=l5o"V]EtE5O'[RS)@EpffrL;$NpX,Y:!"T*DGer]%*DrMH.X&E=fQ\=FH#4+2+m_b$:OIS
%ibbCWk\[`a*^$g>e_67HK'cQr)\&&%dl0Wa[^S881.1.N#*`SjmBU&6YW!@j[)GiuS'g(Eg#'BBG$-EE66U&s4052O(4\fp\o!f,
%q?Sl6OQ^$jnp>X^s5^PBrn3ka]."1W'Kt.Ei%I\7I-l:EM2PQN\S+aDp`XdJN?I8S!j;^n2FX3kO;2D>2.1^,lig#,B=k7qVfOV<
%N[Bc]['0<gKP\o0&GN3dFTHLUSCSftBT`ucA_>`ilh(I+i?MCGb[U'e@eM:E0)$W+d[^TUgqKeQC1pVZ2u$4Q?,2$E(,;+]&1U-c
%0TsaTUtU`5nXH5)/5q0[rI,\6^VV1$Y[Q<>/%+?\l'n`C%0'>"Qb>7?\#kg&Xee0i#ARpd=EB_.DO:%mn<//gg#Wk-K0iOhoo9Sl
%19Tmcqr=H<YKWF=@$3fR6YHU$>s)0R"!!KGZQgcQT0`4q#QeV76dnU`%iaG%qGDkZ)T[ef;"WLR]m_*$N\5%t(o+,tcssd!OS0;F
%TQX8\_hTM%E`0LYV[7P0DLct/n'N8K4S_@Fd>l/J,ja[hB9ePZAC^>42DgG'h,qnfrp=")5,HMOE>N8rp4;T*egk.qct$(tJ,u.5
%1::gfZGfNq0_WEuK#k?1a60^6D\+s/DR#4`LM@=M/JP^:W+pYM.O`;E`MAQaar@$iOhPql7A\jAP!_2FW`L-DEJ5XO9g6!k?\iI7
%[)UI:;Khp83-JN*2eJYa`2S'0e^qt+!L/1^X.qEA!\3?-MeKK14PW4niiue?qoES<]Md`=1+^LVUUkfClOd\!O?32kmW$n?L'@9c
%cT!MmF)+bdA!m0hO&k-%*aBGCIRfgtD4Mm9nb3q_dgbqhMsg8Plup,i.4/V_QBi\^:-KFWV2"kt*B)Km"t,`VaI%5Ges6)sgF3)T
%%\IM"fj#J'/h?W:YD#oN=4f%%LPS8>5.+r_Z=Ps08kM("#O\2Gj*I"-+42Zd8P:C&HF"jJ,CFR$&IY%VR/!*o--R!L2L,mbm.r0#
%MKs^PNe)HrhT`:m31(OFM39MuE?[Rcj8=+3[4Th"9k8s2VMi\uIO,LoC=44Q?I(AP:kYq]4a-F]Q2X__dBs+CHlY@!Kl1EdMs%8F
%)[sU1l1-lsh_&'G":-Tkkl_jc3j=6qbEET(Uip>BVTKAHEE_5f3R/DJ'3@>,15E:\]<D9NiKIEi&YAVK.@NpU)6KZGq6FauRZ?to
%NBg8B$%q1#$//$A=doH$B4o9/!#/e^<4Kj&)iA=SGh:8;Yc=BKc(skh1qXk&Y.,Dd$Z92]?H-\/)@O`sY4(FMJH0QR#TA=TpReh<
%fpkEC1Op31q!^hr1-VM&)GAEBnk!<jXNZCnOBmTD%^\[W2730h;/278(W2S"(0[Ce."#K)\@#?#S%/Gl9M7+qVWeB4H*Y/qVO&'*
%p8NoF>p%Y`K=tARG:.:-.7hb-S&F8!FS2u>eBKC4<1>)@5#G\j/rcE%lk4IW\(T:3hV5Q)0SD-E^_=p.4o1Z2"1r8h?_oe%:YL+\
%<1:gleR(M#(DUiq3pK2'Hhs`ePrEc[baW]plQ+L5h"0%$AULlo.%Sb7n>;ogroK#\^0K)]U0UC#ebp]"$J2Ea*N(deWb9bX<r0(>
%0A#d9fH`+QLBdhoYu_`#cQL)YGnP(?]&:L_+=H5L\P0.4OY0uK$u)4H$Lg:ciWnH`[X+.gZY,r"Vr#%qS/\i<-PS/&?S:[#n,A`4
%P0Yf(5b8/T"1UigT/82`>a4$IqNQ:m%FPn.D`4QT?I(#]f9OW(Q,%JG*=R0+@ceD$CJbi*!\"NlRK,iu+J!4u1JL6`8W^[Z>#\W$
%VoB!/a:q`bZq^mI=TlXhO?jEY7Irs[7:jMf0nRZRTTl.u"hQQ&"cX5;;HL#*Nhkl0Kgu@4&>+:0130XG8N;G9dE/3)(TY/RY1Rnp
%l#nfh/Q3O7CBa0QCD=@L+s3!;Mk0G8ekUL((HX2_O3b%rD@qm)pAWgQJ[LfDM:"Fgl(028O48Yq/k&W%*KW3@4e[<<RU#t8@8+Hr
%1D%hKFud.Cqi$>mh<^RTN2ZRO91k5sbs-UeXGg)OUq.qZGB:FEcb_qqGj2ZFpV,^']dNE0S9HtL*6WkF6!lJIIQ6!)YYK!C?8Jl,
%(Qe#/A-O:s6`P183Z*tiiPX7[TPT3>Ji7,ooa'ZB+?o&^XQr6n'Gj]#Z;_gl6O=BT\rAl`m6;*^5<MFM94AoQjr3](eLduSi^W(B
%F)!I+1`[=>=UAu/</@=jP])Xh&$dH'8pc56SMdE>4!&:t:iO6F10ud*9)Ub\9=DX5S9Rl,+E&CK-N,1:VP;4o5c7LUqZpniT`Ymb
%O`l.9*76b`gESg.1U0I@?IRo4bD@")Wk(O'&\,Z[bFkoN[/[ZRWaEVYhLe^4B?JB5NMTGcl!hSO_]iY&P@/.0:JG=S9rQE9e-T`M
%^4XK<'2fr*TZkDN1fYJ[AT.oATbF+3!g*b^0\0Y.'eu?d=Jq&(2fdAX5l8+ml+\o\>SNE$!">qKh-K3.>*1>Ulln/PI'"](_jl*n
%VkgY$:1tIE5mM!5bZMF>ARBP4R'TXFMkm%8dm4%E:b5Ze7`2mn=;RIqNBMTsPqVk.`JSt,OO$.5M!*=!i\S]DS8RLe*kk$&o+<-R
%F#EEK.6t^d0Z:5>KB5j7LE^nG.<+=G%-lS)@nBR@,\,$I(U%%jI9r@RX-MoYd/da<86],2WWCd)=>rK\16NQKN@LB.KV`CRTnWOr
%h@p5(*Tln%)!io"m,"+#"9I(s2j#U6ASrVi*.hU]TIMFE\:0jY'HT/r"$g8*1^nt^+-8T[!RV&==UV/1A0IBX]5%F>0cL;7$BPl8
%@*YeJ'EG8$iI\n/,'&h86&>2d<$EM+(q279MXcGS,W$[l^rGiK3$:MC50&rWqoYB/MpUfuW;<[]e7KRh>\k;tkhYC4fR[sYe_;*m
%Z0NK5op7adN"oB8IF,t?)^]idi9ha0+p73AG,m.9'VO5uLsohp"2n,,F$[E`jDX>qYUla<h2YN'e2lPp+6#%`q*aNkTF>msltOO7
%Vm6`lX5*#E:ig2\]2P-E`UY3J6\H1M@'UG:WEJkBYeSu8]:MOE;$q0kKi4+%X$T-1`Y7uNAJJR1./#Tmp#p1CkV3I$-<<OYn/;s(
%)K.o4d@jR$Lt5Su@?]5IA6?0GVi:.6=dBQS2S3bcQ0[UWP'N*V`koqk.n'P*Q:7IZ1(5J`!HVQ-K[W8O,\$/IQf[8ZL:c;&_pPQb
%@QZ:eTj;LS)t(WC]%D^Tm+-qtIBiP8f64V@'&+FdmCq$<+5&WLlMoY(*-[?jX"olD[rOuj$V?]T`21Wa3?B6;"YiJ2mW]YK'C"?:
%1PshlMA?LHktqlsg8\l\Z(7g%NCkJ6m1i$L&1U8l&h)<i+s.8*)lsAZ(-qGh5b!^<_4iW<*la[MR/%>']QB*_EVIi\e^G?arHt]s
%gc>9Zob4o;-59s?(c;,!P+I`UL[98Reu.:S.<.^UW+qY=K3A?if@?i>iiKS:cq0g<caG7oYj$NgC'p(97Vt\<7VLNJa/Gs.B/CHl
%gE7du^6ec=C,C%h^LJ[l-;-7<-0pM/Jr:PNko%&u\:?;>Yo6sc6SCW[l]sDmP$C6ZIZAm(JDjt/T(f0$baff8a3#+plO_GQ&Y5mD
%KuC:L%*S=S=nsIX!>_)Dft41_EX7V_If5MnOAiRLC?@(b"t[h@"DH0#e?LOT33,p6b+t=G,/3E)U``eGHbhB9(jNB;Cdc`CG&^`\
%p'?(mCW9F%o1Zd[mWKQ@'9@#WEuAAAWhcj2&Ii5Ai]NE[?g*g;N*5DfOJ*(t:sO_(P7t9B\Ys^6D>hUbp/muFkb:uAa1f"NW3")r
%+)F8<0a*e$>-Jlhp<\O5[!*$_n6#/QR%5JqU%HB1?.p=69%kMjHlf76,s>)QHfiR?8/1`2R'R</7]-E'Gc^X%B#G,c,^\'^V,9&N
%'b]-.F;[Ve6:i[be(C9(5BM4;!5eR6;8Dj2/:#7Aa]e1],>.i5IOKLJc.4":/9).B:H\_81\*?K#.$/[NtF;Nd0H%8<W,M:KF&+Q
%5+jCAo+qst\1fNRY7RD"4qeTQ4g,Mm1a$a@B\gp0JLZ!J%Kt$U2bd^jn9!HSdEFU'-MCR6Lo738H-8\t+hY#a?dp[K,9emf(iP4F
%)<rnoJU3)Xbo)1E:&`qe*eP^NOQ*D2*s,nbF$Z*_.e5%K'p;MtM;=)!+TSXHPcTEup1@g+L(5WR"EA7cCP;q+"Ymqf8Jok/XXk-Y
%'.T5@^toCGXE>1Yp31ss[hV_b*s8pIN=(K:7QQ;D/]+b8.1V3S?lc&hH,N@jFGIFNaZE!Ba.`T@f/Cg1;efXg<sYf95hq7$\[,6i
%OnV>N)(f#r]LmDqB_TOW#Kt*8kt%Zc2%cNS")gL#Ts8sSbVKnU_P2gPlDVi`7&oOG,U0TUFQ,_a6HVbAPUoe3F[U>&!9aiZD&*n#
%i+:(lJ-D1k/bW45ejJ0ETNtbk=I*L0oLG1DN[X-:qQ-IubajQ?#98I4[LeQ2'<_nW13Adm/WlPq[m$!g_Q:g1I#$@W]9JmNSGV4W
%[JE/(8m5#`-[i0EZI?M$1[-C]Urf(eNQWmrTjp%M6Rtg<N+bPH,!l\i+:.Nm6ISG%jG-6)=X^NrA5?iW0d*Q70W4c)>7WM3O.m%^
%Yg0s&kKZ4FlW-?ZqsOfuKO?-5<jj(Pb]$T%]ec-0N'SoH!Q8)`C[:2gphnYeE`D-H#F#>FL$:*M'fkfCm0nfmEG^En'1`gU&?Or+
%P,1#f'd,6kLfkOZOb@-#6=R-^Q\>SrSX0?H*Q<F]`7,Oh.4_Gi"@R7)&PA4Q(25].nVe;qZ<!XOMB[NgG%6B^>D;nj&5A/f_+Vgl
%o"+.M;!>Yn<79Bq";]eIC9u*7de[ac"I]=S515AAN>\TB#g"26LN([In:nu:(uhDD2'ep8B36/YkFIbf+Y@u!Sg0o5`_*EL6?2ki
%+h7T;[/=(06!h"bA.8:u&aImV$_:o/DBBAZ:-C)<Pp!4u\'Xo'-Kbk$Eg2o"U^^J8mjLN<CT;\t&s"bb?u&N#PUce`R782fO@lf3
%Kf0u+ZDKSl9EQN?"/>#ua&XeVe;aU!J^[<,Sm>Kg[1$goY6V/_AL*/4%nU",/_Z:d*F8:^,@'cC1inb)(8F\P6feuC+"lE1;[P<t
%Yt\/8"?)@J;7#LtH'JfL?(`L;aGkc<a@n]M,'q49<gCB0r%fQsR**Wn4kG;HPF?7O]at`#,9dF;m/tug%CoJZi=tO4g+s"R(`&*X
%*3h.0.1k@P@b])o!$<));CkTW]?=3P"$@^*&0AIMA#[V_-5H[BgK-a4ZV$3@=6)E4We(.!OjYR/4Cad-:^^)gmD+MLjX6BE+q#?(
%Yi1+s-ke1/l=m=R?,Lp-9;2L8b%SdMfH`ZQf`qV/B/(#niV?i7G$5!SkFlU(jkRWO0VZt4+'pfHElL*j&d=U&_hsDnWPK8^XWd=]
%E/;R)=Y+?`I#J`TbE^5FA6kleP>G(>E+f<Y(U[a=VQd!.\hXqnBuS&1D&rm;0KEK"oPO]^2<LdR:.Su+nEQJ%#<MHjE[2")!ALqD
%'1h?rmY@<\K7kAgoG;0TXr>TXV/-Ps20<@rA9-T?!?O>h$OW)jU!jX,OtmXa*usC-&LiiXp4?`b.7-u%RjeFa,<&4TK==\ncVc($
%<'L#sjfCLLCmHI$aIG#Rn;ss1d$=94O>tL?*^AOGh\5)$Oj=Fq^EV^YX&.NL95\*IP+Qdc(XAt*Ii3")Z<XbcgL\'rVee\i8\0<?
%<XQqid)2gp"\+Z,!)8GG<jI>?CoX0cR94W.Z$]F9nW6DNM\9fZ\PO9@7"=a$Mf;cX*J-l7A)"meWWGf?&26tY.2TClacqlH+fYm&
%]3o.<(=54o'_c,OC)RnYi$9i@`&q(2>S-A&b,59JMWtqgjTm&tB=.h-:D*J'B&onV(?sRB\#d'DqEY36>"k[,*1*INI4191-?N!h
%fs$74Au:7ZRoq[<Q#F6^b:p)^:.Y/23GYDDKeSFDFO5`\%3+CpmW:tf3jp%Qlq^#oh#?u)?[_`'^T[\9]5PI@55bB>pJ4Qmq!pX5
%I.QlhhgbFmbK'(dpsh;fI/)I:G9=Qt(63;Ts*+G6m[NZ0rpZ9C^AmurL]@2<s+$ch?Js![J+rF3p;O67+%u.-/c~>
%AI9_PrivateDataEnd
